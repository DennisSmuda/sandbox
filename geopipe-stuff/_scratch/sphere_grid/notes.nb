(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    242329,       4942]
NotebookOptionsPosition[    240744,       4885]
NotebookOutlinePosition[    241101,       4901]
CellTagsIndexPosition[    241058,       4898]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"How", " ", "to", " ", "plot", " ", "x"}], "-", "y", "-", 
   RowBox[{"z", " ", "grid", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"http", ":"}], "//", 
      RowBox[{
       RowBox[{
        RowBox[{"math", ".", "stackexchange", ".", "com"}], "/", "a"}], "/", 
       "16585"}]}], ")"}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.672844347826639*^9, 3.672844363579565*^9}, {
  3.672844398257668*^9, 3.672844399765966*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"axes", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_", ",", "f_", ",", "a_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics3D", "[", "\[IndentingNewLine]", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Arrowheads", "[", "a", "]"}], "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "#"}], "}"}], 
         "]"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "y", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "z"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<x\>\"", ",", 
            RowBox[{"FontColor", " ", "\[Rule]", " ", "Red"}], ",", " ", 
            RowBox[{"FontSize", "\[Rule]", 
             RowBox[{"Scaled", "[", "f", "]"}]}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"0.9", "*", "x"}], ",", 
            RowBox[{"0.1", "*", "y"}], ",", 
            RowBox[{"0.1", "*", "z"}]}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<y\>\"", ",", 
            RowBox[{"FontColor", " ", "\[Rule]", " ", "Red"}], ",", " ", 
            RowBox[{"FontSize", "\[Rule]", 
             RowBox[{"Scaled", "[", "f", "]"}]}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"0.1", " ", "x"}], ",", 
            RowBox[{"0.9", "*", "y"}], ",", 
            RowBox[{"0.1", "*", "z"}]}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<z\>\"", ",", 
            RowBox[{"FontColor", " ", "\[Rule]", " ", "Red"}], ",", " ", 
            RowBox[{"FontSize", "\[Rule]", 
             RowBox[{"Scaled", "[", "f", "]"}]}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"0.1", "*", "x"}], ",", 
            RowBox[{"0.1", "*", "y"}], ",", 
            RowBox[{"0.9", "*", "z"}]}], "}"}]}], "]"}]}], "}"}]}], "]"}], 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"x", "^", "2"}]}], "-", 
       RowBox[{"y", "^", "2"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
     RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Opacity", "[", "0.7", "]"}]}], ",", 
     RowBox[{"Mesh", "\[Rule]", "4"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"axes", "[", 
    RowBox[{"2.5", ",", "2.5", ",", "1.5", ",", "0.05", ",", "0.02"}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1.5"}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6728444075740337`*^9, 3.672844414491521*^9}, {
  3.672844559472722*^9, 3.6728445613178864`*^9}, {3.672846089101708*^9, 
  3.6728461453930693`*^9}, {3.6728462697994823`*^9, 3.672846291419271*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.672850790362891*^9, 3.672850790405554*^9}}],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
oFtL++fuNfknXVOPx/NPugGeJ86fcGOH15mwetYGw59wta5f0vmZLQcMT8KN
9PHwUKdbjo3s0/CCzcoDXl5xW9YPrQ4rD/h6H2/ykUA+0m9rvcqs+gfNehNS
M3OeYvPEFwf0lICeEtBTrJ7460A9SKAeJFAPkrkeUhKoZwnUswTqWWw94/cD
+1EC+1EC+1HsfmRusH0J3PYfcNtndM4z/YT+ST80fU+amz4GTn8zfUyKTV/t
/eoTt67tVem6nSg8v/LZfyp/p5lXb/vmrtNuzJTbnr9o4Wzlb7e4dHiyaZUr
K95eVXXWdOW/qXjKRccuPuPqtGpee+/e4co/o9GGK0atPeG+Xzz/xZJ2M5V/
YuuXV7722a/u8Odf5XTpukT5x1RfT7rTC65+v80lC5U/75ETp+a9eMrd8eyC
S595fKLycz06N6fpzqLPlD+xYf/cuxr+7B7q+tTagl+LlH/Nnll3d6t93DVa
ffXUoa2+Uv4lvzy4p9+x4/r/sPB2rNbhRzd58jkPHh+0Qvmj9f7kun/1+N9b
nipR/jrP17qh9vCjrqBelzVrnk4o/6mCFUUXP3LMtfio92Wj2y5S/ijPMteu
yfTlJ6evVf4on30ucfv+Vttb7FGeF6r//aDb3afOS20HOeWJ4ktcs4NTl3X5
5b/Kw/WW3o/vbPNrufKcU53nbre0Q4PrOl5YpDx3Vq/3E3fnlidG9Nu4SXki
fKXrkL/501VrDylP+2p8ozvvrT8NHb033Ze6RLjU9zg8K6rzXCvFQ6dd2j8n
zTMqeq7c6p8Lzx+iPGWFzxOeiP97OVrVKf/ayn2qP9fmZr2rIn3kWq8P/GMj
PaXM6wn/u9V1u19Wv3nz/J7tdynvF9F7kU3mvXwbvUdp7d8j/JXRe5eW/r3D
H63rqEzwdaJ5R3UlXXxdwd81qkMZ7+sQ/mVR3ep5HfzrojqXhr7O4d8a7Qvp
4fcF/Fz3+X0E/7Bo30k7v+/gHxftUznl9yn8k6N9LWV+X8M7M+oDssX3Afhv
jvqGZPm+AX/7qM/ITt9n4O8c9SX5h+9L8PeJ+phk+z5G/PToPbrCzO/RDdh7
Xr/ldfconh3VlQvUlct+v8/oIU32K74gqmdX5OsZvLffL9l+v5j6d9R//HtX
6IYN7lLSft4hu++EfRf/Dha6PB9vnivZJt7nKUWZnyv2uf4qHc16ic8z8cyX
i9sd/DB3brntY/KY0Zm5c1L+jhkVPXYb/1DqFnke44tcX+OX8F1l3o/Fv+/l
Mtnz49epO77X+HtwvrP4b3D8A74ZHN+C3wXHL+FTwfFprEf7kPd1rAcc/4n/
s/H4NsuP38qcT0ps/vgbu158SUA3sbqhM+8B/4PO4PgWdAbHj6EzOD4QndVH
eJ+JzuD4XnQGx/+jm41Ht8z8KbH5oJvNH90COojVAd2o6/5GN/BmRjfwhUY3
8BlGN/DXjW7gTY1u4Ow76hOcfUd9gtc0Olt+dM6cT0ps/uhs14vOAd3E6obO
6rtNHwAvNn0A/D3TB8BbmD4APt70AfABpg+AjzR9AHy96QM2Hp0tPzpnzicl
Nn90tutF54BuYnVjrqA/MF8wD4AzF+CzwfHb+GNwfDJ+Fxzfi39VP+v9JH4U
HF+KvwRf7n0mvhAcf4ifA8fX4cPA8WP4J83f+yh8Dzj+h7mL/sD8xbwEztzE
HALOPML8oPOQ96v4eHB8Bb4cHH+CzwbHF+GPwfHJ+Fpw/C1+FBxfio8Ex0/i
/8Dxgcyf2n88ztwIzvzIPAbOXIaPB8fP47/B8eH4ZvCe3j/jdzUf/17wqeD4
VeZk9gvzMvMtOHMuc6PuU19vzIHgzIPMY+DMZcxX4MxZzC3gzC/MG9o3/H7E
x4Pj5/Hf4Phw/K6tK3ytrUP8ovpK7xvx8eiJn8fHg+Pn8fHgxs8rjp/Hx4Pj
k/HxGu/zxGdbHJ9teejnrKs89t0sVH3w4fR5cM4J8d82Hv+tPsT7Z3wwOH4Y
/02e+HD8Nzg+nDzB82J5ForFOX/huZzDcP5CPOcwnL9QP/RPzinAl/n+vNLP
8+DXxc89dL3ML9zrXN6w764jb/5H8wZvuGvy/87esV55wb+ufc3CBu4Tjde6
9fzEgzcwPPzuuH8uvMSfNjjx5AMOH/nwe3Cey+/BeW6+qf/7fP7/B1SJYMw=

    "], {{
      {Opacity[0.7], EdgeForm[None], 
       GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNmQncl1MWx+95isrWIq3al1f1thGihBgzNYhKGMyQsQ69irGXMtnGMCLM
2LcRItvYxlqUfV/LFtmFiGyV+X2d3/vh8+l07v0/97nPfc793d/5neftMr5u
9ISqlLKR/msg/66MfnPZcNnGsk1k28oGun90lDJAfqj8UbIatbeU7yvfQdZR
trWsf8lxk3Sti/xg+Vr5DT3uSPW7y28hP0y+n++ZqH57+c3l28mvJVtbdpj6
TeQHybeRb1yy31rWyP0jfG1T+b/Keqs9RP6YyPfYyr8xL8/4i/pr8l7yx8of
LDvEMWjhONwiu0J2pewp2X2y+2WXRPb/LP+6/JO+vkj2hPvYvb7nLdkzsmdl
b8qedv8E1sH7yR6X3SP7n2yG5r1Kfk/5CyN/+5P8+bJb1d5Hfr78HbI7ZY/J
7vb9F+jaXfJ/lP+v/DWy/8hul13t/gLfx7hLI9d1gHxL+YayNRwDYgE2jpEd
5BidrHEHyo8kztxXsj+BZ7JO2VRd20f+d/JfeMxRsnXV/1h+rN9575Lj1tbv
H8mPkX1GXMGIrM7z7Ss7PhJb28jvXBI39Hdib93/Dfsv20w2ReN25Tf5b+SX
yvYnFuovIw7yy+U/kY2XbeD3BhNPRq65qnJ/9vJaa4w5cNZT1sr9usj7N4nE
97qy9WSHq78O6zHeW/o5h0bGdYDxDsYZ90Tku4ee201+fd/TQb+/L/+e7CS1
d5f/LbiNfNdh8tvLD/L7H88zjK1esrYlcT8hcl8HyneWb1YS513subYLMS55
7peU5AXGLZY9J3ueZ5dcwzjZZZFxHy7/iGxHtX8Es7Ieai+Xvzvyfb702A9K
rvd+9TeSXyF/b2RMv5Z/SNZH7e/lb5dVsjmyy/XbP2XnlDyTM2Tnyv4tO0P2
d9m/ZKe7f7HsTNk/uBZ5fTSxj5znMq5FzjdW/hKPPavk+WPu82QPRMbxW86U
Y/eF/POy49RupP16Ru09wY/aT6u9B3hS+9HImK6WXyAbpfYq+Tdkp4AVjWlX
5bmokW9b5VnoIX+XxnRVe5n8m7JTwZV+X6j2yWqvpfaZjg9x2qRKjPeUv0P9
Tmp/Lj/X/PuD/MORZ2al/CLZ38Cfxj8XiZvGar+o9olqN1G7PTwpe4G4RMZj
N+LneO3ua/NkD5fkpysdv3O8Z3vwnMgz/3v5M2TT1d5VvqG57CVZJz1vNudc
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
/C4MPpt4X9C+W1T5rY21/R+vgAEC
          "]], Polygon3DBox[CompressedData["
1:eJxFl3ccl1MUxu997RShZFNmIiWSQtnZZG9FdmRLVrKyyd57z+yVLXtLVtmh
sjfJ9+scH388n/vc931/73vvuc95zvm1H7B/v/2aUspkMD34q5ayI+MO4Cn4
dNzcHT4QvMh8RTAPfBawL3wq2Bm+E3gW3g20hc8I9oE/CBaDH8S4Au/qyjgn
8+nA3vDpubYHfH14D3gLcA7zs8G7XPuzxlq2B0/D1wIbw3uDI+A9wZIl1jQY
vhKYH94SDIL3AkuXuHYA/JF8/mD3wrfWYFybeXdwOPxm8Af8GHA8fHWwBrwb
OAz+N9ilxJ7HwG/1GvxAcCO8Ne+8H34fmMB8BuZ7ltjjy8wfy/Ucwtideytn
fIzZ/sYAtC8Ro/3ga4K+8JXBEHifGnvvAg6F7w7eNvbgYvgN4Gf4ruDqGvGe
C94h3/cS2Nr9ZbxnBSNLxPw91wRawRfI+G0Gjne94AT45uB0+J/gJPh24Eb4
ReAMzwrcDr8CnAVfivfPzniXZwNvB57k3hNgEte2B7fALwVnqi3uP1XimcnM
NwD7ltDksamvueGLZ7w2BkNLPDMc/n2Ns1oePAD/0XOGrwAegv9Qg6+aevyu
xrNdwf3wa8AUeBvGUan3eZkvlfr6tcZZ9ACj1QpYBd7LPZk77tXYq2H4LzWe
XQk8Ct+oRizNqeM8qxr3Vks9/lRDi675YfiMXNurhIZeSX17Np1Sz9vW+JZn
eLprqbGXPqmPXcHz7h1cAN9NDbgWcCF8IHgV/rhnCN8LjC9x7TL4nuD9Er+5
FH6TMXDtYFNzR42UyJGh8K1qaOEUAV839aaGj4TvAcaVWNMl8N9rxK6na4DP
3kTu3As+Yj6ghrbNqfPhXWr4lJrWP76tkQvLgXvURhN7eQx8pfaZP2IswefM
t6mpTXAafM4mYvMg+JT5HE3wB8AnzL+p8e7Orsm91NBqw3iqscn8GKEu+G3b
Jr49GnyptsBMJTSrH7ZpIvau6Qs1CFqU0Jh++luNWPROfxjLWMBt5j3z2cD5
XDoPfFhDN+pnnRL+1Yr7J8BPzPvm9/ASa3St42rsfRpYVOMHXzG04voS+X5/
exIYz7WdasRiTMZ/5xqxfCH1tEuNvb6cevK8fHZsCT/6JH9/jtrk3c8z9jM2
7rkJ/V4DH5X58nm+fyTjqtzvX8MrXkt9fpnfO9e9c39ajXfNyrgY8womMd/S
NXKtYf4NfKsS9Wu5JvxC3+gFnwUcyfwo8BbXZmZ+RIln3shv6Gl35Hl2aCJ2
Ff5OnsktNeqFZ7UI86klzmxs5p+xejf17p70vFtTj9Y7c8kz0n9ds2t3zfNz
b6EmvFbPfTtjqOfelPpcgPnvajnXPxPzISX28Brz89KTjK9+6zt8l79ZkGdb
gnONV+pXf/AsP8h8vxb0h38Prqvhx4NKxGx4+sGwEjXQWmgdt9YdWsLf9NA2
6RnWx03MUfBDifrazzxSK+kXJ4MtUqPjktsLXJn56hpd68jUszXMb+qn1raj
wXo1avRzjLeDM9Qa4901/MlvGT/rlX7sWs0Z69v1ubY5GDcEb+b6Tky92A+s
WULDQ/MZn/2O+bAa9bkPfJMS/YlrNb5qXH+25lh7rFH2Rnq+Oazn25voL5eV
0If1UL9y7+rPeqpfmwsTSviz6x1comexd7F+2YvYA9gLrJN6MieuhPet0at5
htZT67L12Zpnv2C/sR58mxJ+rQfpRdY8e5crPBN4C3PCb9WoOXrwfTV6QN9/
FGPP7K/0pong8syfY+HzwJdtoidwDfYr3ZrIYXNZT5qvie9NzHx2L0vqUYwD
8r5rcC1r5/sXV9OpWf3F829S8/Yu9rN6wdapl3/7gBJnan9nvd0Wvh14tUb/
Ziy89krmt7neDr5ME3q1DprD9qv2h5uWqInPpWb0GvPlzdSnNVP96IXGVr83
5kMyZva46ufZzF898HHmXzN2bqL/XSufvbOGd2+R52uOmquDU4/6wQj4yeD1
Gv5mbR6R/qD/6R2n5vqsH9YWNftBjfxX2+aTedWR+60Zd0t/mpprdc9j8kw9
22El6ot1q2QO2i8ubY00Duk/nv9VNfRpr2i/vyF8oxL/P4yxsVYz7ZvI4Xkz
R6y//l/xWWPyTI1+wt5omRL9WO9cgx66cBP9W8cSPbh6tj7436Z17s3+43pz
p0T/bj1xr+aI67OfMDdvK1G/redye96JNfp/f2tP/DHzrk30t3q+3m+/cXOJ
a5/V6Df0Iq/Zf1hTrC1Tc7/TUustU9vLN/Eta9JqWb/NndkyN6wH1rK2Gesu
TazFmrFK1hNjrwd3yn7c2nB3iX7b/lt+D5hSo5+6s0RPq/7sT5co8R9Kv7K/
tTc2pv/1w8Z+WfBkjX5I7/Id9mP2UwvDFynRr9m/ydunf9iPd1A75f/+3V7f
bz6cftMjn7Fft9/3Wf9D6af/AKArvM0=
          "]], 
         Polygon3DBox[{{561, 403, 351, 186, 484}, {550, 269, 432, 417, 563}, {
          555, 278, 335, 427, 543}, {562, 404, 352, 189, 487}, {560, 402, 350,
           183, 481}, {498, 371, 313, 37, 442}, {501, 372, 314, 40, 445}, {
          558, 381, 328, 93, 453}, {559, 390, 338, 138, 466}, {516, 383, 327, 
          88, 461}, {524, 393, 337, 133, 476}, {504, 373, 315, 43, 
          448}}]}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0DlOAnEcBeBBREFxqTXRGGNcEoghxkpPoJWd2lngUkirJ5AT4An0BHIB
tCeuILgRQ8kd/H6x+Oa9F2Ym/2HhqLJ3nkqSZJ9VJfqiy6+cZp66XZTb7PJg
H8ozLnm0q/KaW37setxHRi/wrC/LGV70V8r6m2zR5th+lx26nNgf8pMvTu3v
eD+jcSZ6+oqc5Um/Z6DfyRtq8ax9JS/iHTTtA7nDFo04o5yjz5o9JZdkjkl9
gk09L8cZYyN+l9k4DyV7JL6ZYdbttByKe1L//+8fmzUnXA==
        "]]}, {
       Line3DBox[{437, 494, 436, 495, 438, 370, 439, 496, 440, 497, 441, 564, 
        498, 442, 499, 443, 500, 444, 565, 501, 445, 502, 446, 503, 447, 566, 
        504, 448, 505, 449, 506, 450}], 
       Line3DBox[{452, 507, 451, 508, 453, 558, 570, 454, 509, 455, 510, 456, 
        382, 457, 537, 549, 511, 548, 538, 551, 512, 550, 563, 567, 552, 513, 
        458, 539, 553, 514, 459, 515, 460, 568, 516, 461, 517, 462, 518, 
        463}], Line3DBox[{465, 519, 464, 520, 466, 559, 571, 467, 521, 468, 
        540, 554, 541, 469, 542, 555, 543, 575, 470, 544, 556, 545, 471, 546, 
        557, 547, 472, 392, 473, 522, 474, 523, 475, 569, 524, 476, 525, 477, 
        526, 478}], 
       Line3DBox[{480, 527, 479, 528, 481, 560, 572, 482, 529, 483, 530, 484, 
        561, 573, 485, 531, 486, 532, 487, 562, 574, 488, 533, 489, 534, 490, 
        405, 491, 535, 492, 536, 493}]}, {
       Line3DBox[{304, 362, 305, 366, 312, 370, 316, 374, 320, 378, 324, 570, 
        381, 328, 384, 331, 387, 334, 571, 390, 338, 394, 342, 398, 346, 572, 
        402, 350, 406, 354, 410, 358}], 
       Line3DBox[{306, 363, 307, 367, 313, 371, 564, 317, 375, 321, 379, 325, 
        382, 329, 420, 421, 385, 332, 422, 426, 388, 335, 427, 575, 429, 391, 
        339, 430, 435, 395, 343, 399, 347, 573, 403, 351, 407, 355, 411, 
        359}], Line3DBox[{308, 364, 309, 368, 314, 372, 565, 318, 376, 322, 
        414, 431, 415, 326, 416, 432, 417, 567, 433, 418, 423, 419, 434, 424, 
        428, 425, 336, 392, 340, 396, 344, 400, 348, 574, 404, 352, 408, 356, 
        412, 360}], 
       Line3DBox[{310, 365, 311, 369, 315, 373, 566, 319, 377, 323, 380, 327, 
        383, 568, 330, 386, 333, 389, 337, 393, 569, 341, 397, 345, 401, 349, 
        405, 353, 409, 357, 413, 361}]}, {}, {}}},
    VertexNormals->CompressedData["
1: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
Xu0xcI99p+4R/uoepbq+x3btz/xWdckVxH7f6VzmoVRJ7BOZmuafgRuqr1Bf
9ZWwr8L8bq/MGZXEU34YUT7/TnoGUlU/o6rqZ2E/v1DzgiK91byM0vNi9L/j
f6vK7i9mdkiVfm+GLct4dEJWz219cVDDLHPuwLlLV/7w1v6B2t/4LvhdI09Y
vgt+d5OuU59gvcZ3we9eWXN1UN+oRKnaN3mIb/YNrNswwuPtsAx8pnAWjTOI
88CZxTv75F+Gb/zmKi0zU+Vel/yA2wU4x6s4qKLiCOMcV3wJWxRfknc1X1qg
+JjDuxqTj6n4Mk/FB+NTP/B3m7+z1Bv8vXV4vubf5BH83Sf/Jn8hbyFvJm8i
XyLfJV8jTyNPJU8kP2Q95KHkn+SRpj/5nxmfvM3Mh3zLzJ88yayX/MaCG0zc
qLvIg8hzqNPIX8hPqIvIy8jHqGfIB8kDqUPIQ8kzqR/If8l7yfupA8iryY9N
f/JaMz75qJkPeaSZP/mfBQeYOFB/kifSn3qV/I7+1I3kreSr1Hvky+TJ1Gnk
6ayL+or6gLqA88b549yxPzl/nDvqFuoY4ky9YcanTjDzIb838ycvN+sln7bg
BhM36nbybvYzdT75MvuZOpw6gHNB/Uz9Qd1B3UvdQ71DvUq9RZ1F/Umd99jY
A9SX1JXUgaY/9ZsZn7rLzId6ycyfOsesl/rEghtM3KgrqDP4u0w9QH1AXUCe
Td5Nvk1+TL5Mnjy/9ZO+QWsOSsDa959UXJckCfUXLc4s4HXkr+Sz5LHko+Sn
5KUbTkyf1uSd4/h+56ylzzfGS7UFi13uRXJBXkieSH5IPkd+R143scQz14IC
Hra+x45xrQp42Ts956b8h49p/kQ+RR5F3kMeRP5D3UUdRp5DvUT9RH5FHUJd
Qj1C/UA9QR1BHk9+QV5BXk6eQp5Ank3eTV5Efky+TJ5MXkueS357z+15aMeI
OIS/Nrv5phkH5atItw7LC3gpeSR5Jfkk+R/5IHkg9Sf1KO3UjdSRjEM9Rn3G
fMjjyevJ58m/ycfJw+8VyetyaWcCZjU8ExQYFo3rDWb/nP9KrsN3yX95L+Sp
5K28R+pk6mbeO/Ut9S77hLqROpL9Rh1IXcj+pB6jPqMuo76i3qLOom6hjqF+
od6g/qDuII8nryefJ/8mH+e8k++afUVea/Yh+SL5I3kjeTx5Pfk8eTx5Pf3J
48nrDT4vYQa/JY8nX2ae5PHk1+TV5NmmnTzbjMN9zndE5/1Q83jycfJwvg/y
vZDvhOTrpj/5N/k4+TN5MHkx+TD5N/k47eTf5OOMQ71BHUD+Tz1g2h+peZE5
al4kQc/LfbUH5KDaA/DSe+BbtT/lF7U/wf25Wu1n+U7tZ1TX+3me2v9YrPY/
EvX+36zvVZ8yRd9v4I5bCX99flimH5mzs9D4ROmbHn06NCAHSRlPsn/CEVx6
+279I+US5f74wLbjQnLQNbX5tEd1D6PN1bzPU+selh2r5726eJQL23X8jYYe
bP1Z+lsLyieiWvwU929wRDr6//J164I43xcL75kzIREl+jaYnt3uMLoNyzld
t+C7Pyq7lFR28dL2T1UceUvFQQcdp7PKR9qqfMB8rqn85aLKH/k6/xWqXkxS
9aKfrjdU573d6P9/A8qc+tk=
     "]], 
   {Arrowheads[0.02], Arrow3DBox[{{0, 0, 0}, {2.5, 0, 0}}], 
    Arrow3DBox[{{0, 0, 0}, {0, 2.5, 0}}], 
    Arrow3DBox[{{0, 0, 0}, {0, 0, 1.5}}], Text3DBox[
     FormBox[
      StyleBox["\<\"x\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.05],
       FontColor->RGBColor[1, 0, 0]], StandardForm], {2.25, 0.25, 
     0.15000000000000002`}], Text3DBox[
     FormBox[
      StyleBox["\<\"y\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.05],
       FontColor->RGBColor[1, 0, 0]], StandardForm], {0.25, 2.25, 
     0.15000000000000002`}], Text3DBox[
     FormBox[
      StyleBox["\<\"z\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.05],
       FontColor->RGBColor[1, 0, 0]], StandardForm], {0.25, 0.25, 1.35}]}},
  AutomaticImageSize->True,
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  Boxed->False,
  ImageSize->{389.51832804773727`, 256.7924706483385},
  Method->{"ShrinkWrap" -> True},
  PlotRange->{{-3, 3}, {-3, 3}, {0, 1.5}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{2.904575529602543, 1.3485492477573575`, 1.0930946524465184`},
  ViewVertical->{0.03992107693502614, -0.022374344645518143`, 
   2.4973807483016475`}]], "Input",
 CellChangeTimes->{3.672846617978422*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"axes", "[", 
     RowBox[{"x_", ",", "y_", ",", "z_", ",", "f_", ",", "a_"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Graphics3D", "[", "\[IndentingNewLine]", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Arrowheads", "[", "a", "]"}], "}"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "#"}], "}"}], 
          "]"}], "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "y", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "z"}], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<x (0deg)\>\"", ",", 
             RowBox[{"FontColor", " ", "\[Rule]", " ", "Red"}], ",", " ", 
             RowBox[{"FontSize", "\[Rule]", 
              RowBox[{"Scaled", "[", "f", "]"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"0.9", "*", "x"}], ",", 
             RowBox[{"0.1", "*", "y"}], ",", 
             RowBox[{"0.1", "*", "z"}]}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<y (90east)\>\"", ",", 
             RowBox[{"FontColor", " ", "\[Rule]", " ", "Red"}], ",", " ", 
             RowBox[{"FontSize", "\[Rule]", 
              RowBox[{"Scaled", "[", "f", "]"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"0.1", " ", "x"}], ",", 
             RowBox[{"0.9", "*", "y"}], ",", 
             RowBox[{"0.1", "*", "z"}]}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<z (north)\>\"", ",", 
             RowBox[{"FontColor", " ", "\[Rule]", " ", "Red"}], ",", " ", 
             RowBox[{"FontSize", "\[Rule]", 
              RowBox[{"Scaled", "[", "f", "]"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"0.1", "*", "x"}], ",", 
             RowBox[{"0.1", "*", "y"}], ",", 
             RowBox[{"0.9", "*", "z"}]}], "}"}]}], "]"}]}], "}"}]}], "]"}], 
     "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Graphics3D", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Join", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Opacity", "[", ".85", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Glow", "[", "LightBlue", "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"EdgeForm", "[", "Gray", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"PolyhedronData", "[", 
            RowBox[{"\"\<Icosahedron\>\"", ",", " ", "\"\<Faces\>\""}], 
            "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<1\>\"", ",", 
               RowBox[{"FontColor", " ", "\[Rule]", " ", "Red"}], ",", " ", 
               RowBox[{"FontSize", "\[Rule]", 
                RowBox[{"Scaled", "[", "0.05", "]"}]}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.14"}], ",", "0.44", ",", "0.60"}], "}"}]}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<3\>\"", ",", 
               RowBox[{"FontColor", " ", "\[Rule]", " ", "Red"}], ",", " ", 
               RowBox[{"FontSize", "\[Rule]", 
                RowBox[{"Scaled", "[", "0.05", "]"}]}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.14"}], ",", 
               RowBox[{"-", "0.44"}], ",", "0.60"}], "}"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<4\>\"", ",", 
               RowBox[{"FontColor", " ", "\[Rule]", " ", "Red"}], ",", " ", 
               RowBox[{"FontSize", "\[Rule]", 
                RowBox[{"Scaled", "[", "0.05", "]"}]}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.37", ",", 
               RowBox[{"-", "0.27"}], ",", "0.60"}], "}"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<0\>\"", ",", 
               RowBox[{"FontColor", " ", "\[Rule]", " ", "Red"}], ",", " ", 
               RowBox[{"FontSize", "\[Rule]", 
                RowBox[{"Scaled", "[", "0.05", "]"}]}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.37", ",", "0.27", ",", "0.60"}], "}"}]}], "]"}], ",",
            "\[IndentingNewLine]", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<2\>\"", ",", 
               RowBox[{"FontColor", " ", "\[Rule]", " ", "Red"}], ",", " ", 
               RowBox[{"FontSize", "\[Rule]", 
                RowBox[{"Scaled", "[", "0.05", "]"}]}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.46"}], ",", "0", ",", "0.60"}], "}"}]}], "]"}],
            ","}], "\[IndentingNewLine]", "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Lighting", "\[Rule]", "None"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"axes", "[", 
      RowBox[{"1.2", ",", "1.2", ",", "1.2", ",", "0.05", ",", "0.02"}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.6728446820814257`*^9, 3.672844749468116*^9}, {
   3.6728447854639378`*^9, 3.672844833484321*^9}, {3.672846019926622*^9, 
   3.672846072542975*^9}, {3.6728461519766808`*^9, 3.672846194616702*^9}, {
   3.67284632543773*^9, 3.67284634559809*^9}, {3.6728463940715923`*^9, 
   3.672846426831635*^9}, {3.672846577901245*^9, 3.6728465906206713`*^9}, {
   3.672846971253854*^9, 3.672846997760751*^9}, {3.672847568851972*^9, 
   3.672847575024558*^9}, {3.672850795224122*^9, 3.6728508664781113`*^9}, {
   3.6728508981555643`*^9, 3.672850957815433*^9}, {3.672851000615147*^9, 
   3.672851127971013*^9}, 3.6728514498094683`*^9, {3.6728515854928627`*^9, 
   3.672851638021796*^9}, {3.672851692010251*^9, 3.672851725716154*^9}, {
   3.672851790173861*^9, 3.672851841035714*^9}, 3.6728518793878527`*^9, 
   3.672851964767555*^9, {3.672851995236249*^9, 3.672852041592824*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   {Opacity[0.85], EdgeForm[GrayLevel[0.5]], Glow[
     RGBColor[0.87, 0.94, 1]], 
    GraphicsComplex3DBox[
     NCache[{{0, 0, (-5) (50 - 10 5^Rational[1, 2])^Rational[-1, 2]}, {
       0, 0, 5 (50 - 10 5^Rational[1, 2])^
         Rational[-1, 2]}, {-(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
        0, -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(2/(5 - 5^
         Rational[1, 2]))^Rational[1, 2], 0, (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {
       Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
       Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (1 + 
         5^Rational[1, 2]), Rational[
        1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
       Rational[-1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (1 + 
         5^Rational[1, 2]), Rational[-1, 2], (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {
       Rational[-1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (1 + 
         5^Rational[1, 2]), Rational[1, 2], (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {
       Rational[-1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (-1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
       Rational[-1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (-1 + 
         5^Rational[1, 2]), 
        Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
       Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (-1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], (10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
       Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (-1 + 
         5^Rational[1, 2]), 
        Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], (10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
       0, 0, -0.9510565162951536}, {
       0, 0, 0.9510565162951536}, {-0.85065080835204, 
        0, -0.42532540417601994`}, {
       0.85065080835204, 0, 0.42532540417601994`}, {
       0.6881909602355868, -0.5, -0.42532540417601994`}, {0.6881909602355868, 
       0.5, -0.42532540417601994`}, {-0.6881909602355868, -0.5, 
       0.42532540417601994`}, {-0.6881909602355868, 0.5, 
       0.42532540417601994`}, {-0.2628655560595668, -0.8090169943749475, \
-0.42532540417601994`}, {-0.2628655560595668, 
       0.8090169943749475, -0.42532540417601994`}, {
       0.2628655560595668, -0.8090169943749475, 0.42532540417601994`}, {
       0.2628655560595668, 0.8090169943749475, 0.42532540417601994`}}], 
     Polygon3DBox[{{2, 12, 8}, {2, 8, 7}, {2, 7, 11}, {2, 11, 4}, {2, 4, 
      12}, {5, 9, 1}, {6, 5, 1}, {10, 6, 1}, {3, 10, 1}, {9, 3, 1}, {12, 10, 
      8}, {8, 3, 7}, {7, 9, 11}, {11, 5, 4}, {4, 6, 12}, {5, 11, 9}, {6, 4, 
      5}, {10, 12, 6}, {3, 8, 10}, {9, 7, 3}}]], Text3DBox[
     StyleBox["\<\"1\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.05],
      FontColor->RGBColor[1, 0, 0]], {-0.14, 0.44, 0.6}], Text3DBox[
     StyleBox["\<\"3\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.05],
      FontColor->RGBColor[1, 0, 0]], {-0.14, -0.44, 0.6}], Text3DBox[
     StyleBox["\<\"4\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.05],
      FontColor->RGBColor[1, 0, 0]], {0.37, -0.27, 0.6}], Text3DBox[
     StyleBox["\<\"0\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.05],
      FontColor->RGBColor[1, 0, 0]], {0.37, 0.27, 0.6}], Text3DBox[
     StyleBox["\<\"2\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.05],
      FontColor->RGBColor[1, 0, 0]], {-0.46, 0, 0.6}]}, 
   {Arrowheads[0.02], Arrow3DBox[{{0, 0, 0}, {1.2, 0, 0}}], 
    Arrow3DBox[{{0, 0, 0}, {0, 1.2, 0}}], 
    Arrow3DBox[{{0, 0, 0}, {0, 0, 1.2}}], Text3DBox[
     StyleBox["\<\"x (0deg)\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.05],
      FontColor->RGBColor[1, 0, 0]], {1.08, 0.12, 0.12}], Text3DBox[
     StyleBox["\<\"y (90east)\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.05],
      FontColor->RGBColor[1, 0, 0]], {0.12, 1.08, 0.12}], Text3DBox[
     StyleBox["\<\"z (north)\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.05],
      FontColor->RGBColor[1, 0, 0]], {0.12, 0.12, 1.08}]}},
  AutomaticImageSize->True,
  Axes->True,
  ImageSize->{371.094277872239, 375.3067530423465},
  Lighting->None,
  PlotRange->{{-1.5, 1.5}, {-1.5, 1.5}, {-1.5, 1.5}},
  ViewPoint->{0.4889838586703741, -0.03330463764399382, 3.348101788636545},
  ViewVertical->{0.23910192903196195`, 0.7859035906275722, 
   0.5702506587211315}]], "Output",
 CellChangeTimes->{
  3.672847005371879*^9, {3.672847569930661*^9, 3.672847575502531*^9}, 
   3.672850797842166*^9, {3.672850836022379*^9, 3.672850866949492*^9}, {
   3.67285091051499*^9, 3.672850958271401*^9}, {3.672851045367141*^9, 
   3.672851059581676*^9}, 3.6728510911239*^9, 3.6728511283617373`*^9, 
   3.672851451467943*^9, {3.6728515881469*^9, 3.672851638455708*^9}, {
   3.672851692424077*^9, 3.672851726472198*^9}, 3.6728517906082582`*^9, {
   3.672851824001533*^9, 3.672851841667446*^9}, 3.6728518800630417`*^9, 
   3.672851965306057*^9, {3.672851996425613*^9, 3.672852041879654*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"axes", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_", ",", "f_", ",", "a_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics3D", "[", "\[IndentingNewLine]", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Arrowheads", "[", "a", "]"}], "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "#"}], "}"}], 
         "]"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "y", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "z"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<x (0deg)\>\"", ",", 
            RowBox[{"FontColor", " ", "\[Rule]", " ", "Red"}], ",", " ", 
            RowBox[{"FontSize", "\[Rule]", 
             RowBox[{"Scaled", "[", "f", "]"}]}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"0.9", "*", "x"}], ",", 
            RowBox[{"0.1", "*", "y"}], ",", 
            RowBox[{"0.1", "*", "z"}]}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<y (90east)\>\"", ",", 
            RowBox[{"FontColor", " ", "\[Rule]", " ", "Red"}], ",", " ", 
            RowBox[{"FontSize", "\[Rule]", 
             RowBox[{"Scaled", "[", "f", "]"}]}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"0.1", " ", "x"}], ",", 
            RowBox[{"0.9", "*", "y"}], ",", 
            RowBox[{"0.1", "*", "z"}]}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<z (north)\>\"", ",", 
            RowBox[{"FontColor", " ", "\[Rule]", " ", "Red"}], ",", " ", 
            RowBox[{"FontSize", "\[Rule]", 
             RowBox[{"Scaled", "[", "f", "]"}]}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"0.1", "*", "x"}], ",", 
            RowBox[{"0.1", "*", "y"}], ",", 
            RowBox[{"0.9", "*", "z"}]}], "}"}]}], "]"}]}], "}"}]}], "]"}], 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Graphics3D", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Join", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Opacity", "[", ".85", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Glow", "[", "LightBlue", "]"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"EdgeForm", "[", "Gray", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"PolyhedronData", "[", 
          RowBox[{"\"\<Icosahedron\>\"", ",", " ", "\"\<Faces\>\""}], "]"}]}],
         "\[IndentingNewLine]", "}"}], ",", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<1\>\"", ",", 
             RowBox[{"Opacity", "[", ".2", "]"}], ",", " ", 
             RowBox[{"FontColor", " ", "\[Rule]", " ", "Red"}], ",", " ", 
             RowBox[{"FontSize", "\[Rule]", 
              RowBox[{"Scaled", "[", "0.05", "]"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.14"}], ",", "0.44", ",", "0.60"}], "}"}]}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<3\>\"", ",", 
             RowBox[{"Opacity", "[", ".2", "]"}], ",", " ", 
             RowBox[{"FontColor", " ", "\[Rule]", " ", "Red"}], ",", " ", 
             RowBox[{"FontSize", "\[Rule]", 
              RowBox[{"Scaled", "[", "0.05", "]"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.14"}], ",", 
             RowBox[{"-", "0.44"}], ",", "0.60"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<4\>\"", ",", 
             RowBox[{"Opacity", "[", ".2", "]"}], ",", " ", 
             RowBox[{"FontColor", " ", "\[Rule]", " ", "Red"}], ",", " ", 
             RowBox[{"FontSize", "\[Rule]", 
              RowBox[{"Scaled", "[", "0.05", "]"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.37", ",", 
             RowBox[{"-", "0.27"}], ",", "0.60"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<0\>\"", ",", 
             RowBox[{"Opacity", "[", ".2", "]"}], ",", " ", 
             RowBox[{"FontColor", " ", "\[Rule]", " ", "Red"}], ",", " ", 
             RowBox[{"FontSize", "\[Rule]", 
              RowBox[{"Scaled", "[", "0.05", "]"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.37", ",", "0.27", ",", "0.60"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<2\>\"", ",", 
             RowBox[{"Opacity", "[", ".2", "]"}], ",", " ", 
             RowBox[{"FontColor", " ", "\[Rule]", " ", "Red"}], ",", " ", 
             RowBox[{"FontSize", "\[Rule]", 
              RowBox[{"Scaled", "[", "0.05", "]"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.46"}], ",", "0", ",", "0.60"}], "}"}]}], "]"}], 
         ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<18\>\"", ",", 
             RowBox[{"FontColor", " ", "\[Rule]", " ", "Blue"}], ",", " ", 
             RowBox[{"FontSize", "\[Rule]", 
              RowBox[{"Scaled", "[", "0.05", "]"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.37"}], ",", "0.27", ",", 
             RowBox[{"-", "0.6"}]}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<19\>\"", ",", 
             RowBox[{"FontColor", " ", "\[Rule]", " ", "Blue"}], ",", " ", 
             RowBox[{"FontSize", "\[Rule]", 
              RowBox[{"Scaled", "[", "0.05", "]"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.14", ",", "0.44", ",", 
             RowBox[{"-", "0.60"}]}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<15\>\"", ",", 
             RowBox[{"FontColor", " ", "\[Rule]", " ", "Blue"}], ",", " ", 
             RowBox[{"FontSize", "\[Rule]", 
              RowBox[{"Scaled", "[", "0.05", "]"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.46", ",", "0", ",", 
             RowBox[{"-", "0.60"}]}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<16\>\"", ",", 
             RowBox[{"FontColor", " ", "\[Rule]", " ", "Blue"}], ",", " ", 
             RowBox[{"FontSize", "\[Rule]", 
              RowBox[{"Scaled", "[", "0.05", "]"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.14", ",", 
             RowBox[{"-", "0.44"}], ",", 
             RowBox[{"-", "0.60"}]}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<17\>\"", ",", 
             RowBox[{"FontColor", " ", "\[Rule]", " ", "Blue"}], ",", " ", 
             RowBox[{"FontSize", "\[Rule]", 
              RowBox[{"Scaled", "[", "0.05", "]"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.37"}], ",", 
             RowBox[{"-", "0.27"}], ",", 
             RowBox[{"-", "0.60"}]}], "}"}]}], "]"}], ","}], 
        "\[IndentingNewLine]", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Lighting", "\[Rule]", "None"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"axes", "[", 
    RowBox[{"1.2", ",", "1.2", ",", "1.2", ",", "0.05", ",", "0.02"}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{
  3.672846623128026*^9, 3.672847008000852*^9, {3.672852104783943*^9, 
   3.672852260076771*^9}, {3.672852299536756*^9, 3.672852345524797*^9}, {
   3.672854840394356*^9, 3.6728548455264072`*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   {Opacity[0.85], EdgeForm[GrayLevel[0.5]], Glow[
     RGBColor[0.87, 0.94, 1]], 
    GraphicsComplex3DBox[
     NCache[{{0, 0, (-5) (50 - 10 5^Rational[1, 2])^Rational[-1, 2]}, {
       0, 0, 5 (50 - 10 5^Rational[1, 2])^
         Rational[-1, 2]}, {-(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
        0, -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(2/(5 - 5^
         Rational[1, 2]))^Rational[1, 2], 0, (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {
       Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
       Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (1 + 
         5^Rational[1, 2]), Rational[
        1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
       Rational[-1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (1 + 
         5^Rational[1, 2]), Rational[-1, 2], (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {
       Rational[-1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (1 + 
         5^Rational[1, 2]), Rational[1, 2], (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {
       Rational[-1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (-1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
       Rational[-1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (-1 + 
         5^Rational[1, 2]), 
        Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
       Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (-1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], (10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
       Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (-1 + 
         5^Rational[1, 2]), 
        Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], (10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
       0, 0, -0.9510565162951536}, {
       0, 0, 0.9510565162951536}, {-0.85065080835204, 
        0, -0.42532540417601994`}, {
       0.85065080835204, 0, 0.42532540417601994`}, {
       0.6881909602355868, -0.5, -0.42532540417601994`}, {0.6881909602355868, 
       0.5, -0.42532540417601994`}, {-0.6881909602355868, -0.5, 
       0.42532540417601994`}, {-0.6881909602355868, 0.5, 
       0.42532540417601994`}, {-0.2628655560595668, -0.8090169943749475, \
-0.42532540417601994`}, {-0.2628655560595668, 
       0.8090169943749475, -0.42532540417601994`}, {
       0.2628655560595668, -0.8090169943749475, 0.42532540417601994`}, {
       0.2628655560595668, 0.8090169943749475, 0.42532540417601994`}}], 
     Polygon3DBox[{{2, 12, 8}, {2, 8, 7}, {2, 7, 11}, {2, 11, 4}, {2, 4, 
      12}, {5, 9, 1}, {6, 5, 1}, {10, 6, 1}, {3, 10, 1}, {9, 3, 1}, {12, 10, 
      8}, {8, 3, 7}, {7, 9, 11}, {11, 5, 4}, {4, 6, 12}, {5, 11, 9}, {6, 4, 
      5}, {10, 12, 6}, {3, 8, 10}, {9, 7, 3}}]], Text3DBox[
     StyleBox["\<\"1\"\>",
      StripOnInput->False,
      LineOpacity->0.2,
      FrontFaceOpacity->0.2,
      BackFaceOpacity->0.2,
      Opacity->0.2,
      FontSize->Scaled[0.05],
      FontColor->RGBColor[1, 0, 0],
      FontOpacity->0.2], {-0.14, 0.44, 0.6}], Text3DBox[
     StyleBox["\<\"3\"\>",
      StripOnInput->False,
      LineOpacity->0.2,
      FrontFaceOpacity->0.2,
      BackFaceOpacity->0.2,
      Opacity->0.2,
      FontSize->Scaled[0.05],
      FontColor->RGBColor[1, 0, 0],
      FontOpacity->0.2], {-0.14, -0.44, 0.6}], Text3DBox[
     StyleBox["\<\"4\"\>",
      StripOnInput->False,
      LineOpacity->0.2,
      FrontFaceOpacity->0.2,
      BackFaceOpacity->0.2,
      Opacity->0.2,
      FontSize->Scaled[0.05],
      FontColor->RGBColor[1, 0, 0],
      FontOpacity->0.2], {0.37, -0.27, 0.6}], Text3DBox[
     StyleBox["\<\"0\"\>",
      StripOnInput->False,
      LineOpacity->0.2,
      FrontFaceOpacity->0.2,
      BackFaceOpacity->0.2,
      Opacity->0.2,
      FontSize->Scaled[0.05],
      FontColor->RGBColor[1, 0, 0],
      FontOpacity->0.2], {0.37, 0.27, 0.6}], Text3DBox[
     StyleBox["\<\"2\"\>",
      StripOnInput->False,
      LineOpacity->0.2,
      FrontFaceOpacity->0.2,
      BackFaceOpacity->0.2,
      Opacity->0.2,
      FontSize->Scaled[0.05],
      FontColor->RGBColor[1, 0, 0],
      FontOpacity->0.2], {-0.46, 0, 0.6}], Text3DBox[
     StyleBox["\<\"18\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.05],
      FontColor->RGBColor[0, 0, 1]], {-0.37, 0.27, -0.6}], Text3DBox[
     StyleBox["\<\"19\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.05],
      FontColor->RGBColor[0, 0, 1]], {0.14, 0.44, -0.6}], Text3DBox[
     StyleBox["\<\"15\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.05],
      FontColor->RGBColor[0, 0, 1]], {0.46, 0, -0.6}], Text3DBox[
     StyleBox["\<\"16\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.05],
      FontColor->RGBColor[0, 0, 1]], {0.14, -0.44, -0.6}], Text3DBox[
     StyleBox["\<\"17\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.05],
      FontColor->RGBColor[0, 0, 1]], {-0.37, -0.27, -0.6}]}, 
   {Arrowheads[0.02], Arrow3DBox[{{0, 0, 0}, {1.2, 0, 0}}], 
    Arrow3DBox[{{0, 0, 0}, {0, 1.2, 0}}], 
    Arrow3DBox[{{0, 0, 0}, {0, 0, 1.2}}], Text3DBox[
     StyleBox["\<\"x (0deg)\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.05],
      FontColor->RGBColor[1, 0, 0]], {1.08, 0.12, 0.12}], Text3DBox[
     StyleBox["\<\"y (90east)\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.05],
      FontColor->RGBColor[1, 0, 0]], {0.12, 1.08, 0.12}], Text3DBox[
     StyleBox["\<\"z (north)\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.05],
      FontColor->RGBColor[1, 0, 0]], {0.12, 0.12, 1.08}]}},
  AutomaticImageSize->True,
  Axes->True,
  ImageSize->{393.07011923499476`, 418.4759043102134},
  Lighting->None,
  PlotRange->{{-1.5, 1.5}, {-1.5, 1.5}, {-1.5, 1.5}},
  ViewPoint->{2.6014182418270275`, 1.1896641291164851`, 1.8075736197961936`},
  ViewVertical->{0.06903455514263913, 0.014578541666722344`, 
   0.9975077424858062}]], "Output",
 CellChangeTimes->{
  3.672852105879677*^9, {3.6728521438750267`*^9, 3.672852220027615*^9}, {
   3.672852250768993*^9, 3.672852260676508*^9}, {3.672852317059209*^9, 
   3.6728523460234833`*^9}, 3.672854849880651*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"axes", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_", ",", "f_", ",", "a_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics3D", "[", "\[IndentingNewLine]", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Arrowheads", "[", "a", "]"}], "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "#"}], "}"}], 
         "]"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "y", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "z"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<x (0deg)\>\"", ",", 
            RowBox[{"FontColor", " ", "\[Rule]", " ", "Red"}], ",", " ", 
            RowBox[{"FontSize", "\[Rule]", 
             RowBox[{"Scaled", "[", "f", "]"}]}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"0.9", "*", "x"}], ",", 
            RowBox[{"0.1", "*", "y"}], ",", 
            RowBox[{"0.1", "*", "z"}]}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<y (90east)\>\"", ",", 
            RowBox[{"FontColor", " ", "\[Rule]", " ", "Red"}], ",", " ", 
            RowBox[{"FontSize", "\[Rule]", 
             RowBox[{"Scaled", "[", "f", "]"}]}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"0.1", " ", "x"}], ",", 
            RowBox[{"0.9", "*", "y"}], ",", 
            RowBox[{"0.1", "*", "z"}]}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<z (north)\>\"", ",", 
            RowBox[{"FontColor", " ", "\[Rule]", " ", "Red"}], ",", " ", 
            RowBox[{"FontSize", "\[Rule]", 
             RowBox[{"Scaled", "[", "f", "]"}]}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"0.1", "*", "x"}], ",", 
            RowBox[{"0.1", "*", "y"}], ",", 
            RowBox[{"0.9", "*", "z"}]}], "}"}]}], "]"}]}], "}"}]}], "]"}], 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Graphics3D", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Join", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Opacity", "[", ".85", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Glow", "[", "LightBlue", "]"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"EdgeForm", "[", "Gray", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"PolyhedronData", "[", 
          RowBox[{"\"\<Icosahedron\>\"", ",", " ", "\"\<Faces\>\""}], "]"}]}],
         "\[IndentingNewLine]", "}"}], ",", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<1\>\"", ",", 
             RowBox[{"Opacity", "[", ".2", "]"}], ",", " ", 
             RowBox[{"FontColor", " ", "\[Rule]", " ", "Red"}], ",", " ", 
             RowBox[{"FontSize", "\[Rule]", 
              RowBox[{"Scaled", "[", "0.05", "]"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.14"}], ",", "0.44", ",", "0.60"}], "}"}]}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<3\>\"", ",", 
             RowBox[{"Opacity", "[", ".2", "]"}], ",", " ", 
             RowBox[{"FontColor", " ", "\[Rule]", " ", "Red"}], ",", " ", 
             RowBox[{"FontSize", "\[Rule]", 
              RowBox[{"Scaled", "[", "0.05", "]"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.14"}], ",", 
             RowBox[{"-", "0.44"}], ",", "0.60"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<4\>\"", ",", 
             RowBox[{"Opacity", "[", ".2", "]"}], ",", " ", 
             RowBox[{"FontColor", " ", "\[Rule]", " ", "Red"}], ",", " ", 
             RowBox[{"FontSize", "\[Rule]", 
              RowBox[{"Scaled", "[", "0.05", "]"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.37", ",", 
             RowBox[{"-", "0.27"}], ",", "0.60"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<0\>\"", ",", 
             RowBox[{"Opacity", "[", ".8", "]"}], ",", " ", 
             RowBox[{"FontColor", " ", "\[Rule]", " ", "Red"}], ",", " ", 
             RowBox[{"FontSize", "\[Rule]", 
              RowBox[{"Scaled", "[", "0.05", "]"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.37", ",", "0.27", ",", "0.60"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<2\>\"", ",", 
             RowBox[{"Opacity", "[", ".2", "]"}], ",", " ", 
             RowBox[{"FontColor", " ", "\[Rule]", " ", "Red"}], ",", " ", 
             RowBox[{"FontSize", "\[Rule]", 
              RowBox[{"Scaled", "[", "0.05", "]"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.46"}], ",", "0", ",", "0.60"}], "}"}]}], "]"}], 
         ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<18\>\"", ",", 
             RowBox[{"Opacity", "[", ".2", "]"}], ",", " ", 
             RowBox[{"FontColor", " ", "\[Rule]", " ", "Blue"}], ",", " ", 
             RowBox[{"FontSize", "\[Rule]", 
              RowBox[{"Scaled", "[", "0.05", "]"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.37"}], ",", "0.27", ",", 
             RowBox[{"-", "0.6"}]}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<19\>\"", ",", 
             RowBox[{"Opacity", "[", ".2", "]"}], ",", " ", 
             RowBox[{"FontColor", " ", "\[Rule]", " ", "Blue"}], ",", " ", 
             RowBox[{"FontSize", "\[Rule]", 
              RowBox[{"Scaled", "[", "0.05", "]"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.14", ",", "0.44", ",", 
             RowBox[{"-", "0.60"}]}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<15\>\"", ",", 
             RowBox[{"Opacity", "[", ".2", "]"}], ",", " ", 
             RowBox[{"FontColor", " ", "\[Rule]", " ", "Blue"}], ",", " ", 
             RowBox[{"FontSize", "\[Rule]", 
              RowBox[{"Scaled", "[", "0.05", "]"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.46", ",", "0", ",", 
             RowBox[{"-", "0.60"}]}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<16\>\"", ",", 
             RowBox[{"Opacity", "[", ".2", "]"}], ",", " ", 
             RowBox[{"FontColor", " ", "\[Rule]", " ", "Blue"}], ",", " ", 
             RowBox[{"FontSize", "\[Rule]", 
              RowBox[{"Scaled", "[", "0.05", "]"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.14", ",", 
             RowBox[{"-", "0.44"}], ",", 
             RowBox[{"-", "0.60"}]}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<17\>\"", ",", 
             RowBox[{"Opacity", "[", ".2", "]"}], ",", " ", 
             RowBox[{"FontColor", " ", "\[Rule]", " ", "Blue"}], ",", " ", 
             RowBox[{"FontSize", "\[Rule]", 
              RowBox[{"Scaled", "[", "0.05", "]"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.37"}], ",", 
             RowBox[{"-", "0.27"}], ",", 
             RowBox[{"-", "0.60"}]}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<5\>\"", ",", 
             RowBox[{"FontColor", " ", "\[Rule]", " ", "Black"}], ",", " ", 
             RowBox[{"FontSize", "\[Rule]", 
              RowBox[{"Scaled", "[", "0.05", "]"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.60", ",", "0.44", ",", "0.14"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<10\>\"", ",", 
               RowBox[{"FontColor", " ", "\[Rule]", " ", "Black"}], ",", " ", 
               
               RowBox[{"FontSize", "\[Rule]", 
                RowBox[{"Scaled", "[", "0.05", "]"}]}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.60"}], ",", 
               RowBox[{"-", "0.44"}], ",", 
               RowBox[{"-", "0.14"}]}], "}"}]}], "]"}], ","}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<7\>\"", ",", 
             RowBox[{"FontColor", " ", "\[Rule]", " ", "Black"}], ",", " ", 
             RowBox[{"FontSize", "\[Rule]", 
              RowBox[{"Scaled", "[", "0.05", "]"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.23"}], ",", "0.71", ",", "0.14"}], "}"}]}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<14\>\"", ",", 
             RowBox[{"FontColor", " ", "\[Rule]", " ", "Black"}], ",", " ", 
             RowBox[{"FontSize", "\[Rule]", 
              RowBox[{"Scaled", "[", "0.05", "]"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.74", ",", "0", ",", 
             RowBox[{"-", "0.14"}]}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<13\>\"", ",", 
             RowBox[{"FontColor", " ", "\[Rule]", " ", "Black"}], ",", " ", 
             RowBox[{"FontSize", "\[Rule]", 
              RowBox[{"Scaled", "[", "0.05", "]"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.60", ",", 
             RowBox[{"-", "0.44"}], ",", "0.14"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<6\>\"", ",", 
             RowBox[{"FontColor", " ", "\[Rule]", " ", "Black"}], ",", " ", 
             RowBox[{"FontSize", "\[Rule]", 
              RowBox[{"Scaled", "[", "0.05", "]"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.23", ",", "0.71", ",", 
             RowBox[{"-", "0.14"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]",
         "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Lighting", "\[Rule]", "None"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"axes", "[", 
    RowBox[{"1.2", ",", "1.2", ",", "1.2", ",", "0.05", ",", "0.02"}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.672852376373899*^9, 3.672852385550853*^9}, {
   3.672853496262293*^9, 3.672853534680169*^9}, {3.672853581422392*^9, 
   3.6728536320821037`*^9}, 3.672853664832535*^9, {3.672853707930875*^9, 
   3.672853783398499*^9}, {3.672853823696273*^9, 3.6728538359606867`*^9}, {
   3.672853904055398*^9, 3.672853977898533*^9}, {3.6728540471679983`*^9, 
   3.672854082437995*^9}, {3.672854133326025*^9, 3.6728542348122597`*^9}, {
   3.672854305224863*^9, 3.672854331961788*^9}, {3.672854365241634*^9, 
   3.672854603694788*^9}, 3.672854653410309*^9, {3.672854687570517*^9, 
   3.672854716857091*^9}, {3.672854768806183*^9, 3.672854773421487*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   {Opacity[0.85], EdgeForm[GrayLevel[0.5]], Glow[
     RGBColor[0.87, 0.94, 1]], 
    GraphicsComplex3DBox[
     NCache[{{0, 0, (-5) (50 - 10 5^Rational[1, 2])^Rational[-1, 2]}, {
       0, 0, 5 (50 - 10 5^Rational[1, 2])^
         Rational[-1, 2]}, {-(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
        0, -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(2/(5 - 5^
         Rational[1, 2]))^Rational[1, 2], 0, (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {
       Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
       Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (1 + 
         5^Rational[1, 2]), Rational[
        1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
       Rational[-1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (1 + 
         5^Rational[1, 2]), Rational[-1, 2], (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {
       Rational[-1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (1 + 
         5^Rational[1, 2]), Rational[1, 2], (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {
       Rational[-1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (-1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
       Rational[-1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (-1 + 
         5^Rational[1, 2]), 
        Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
       Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (-1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], (10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
       Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (-1 + 
         5^Rational[1, 2]), 
        Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], (10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
       0, 0, -0.9510565162951536}, {
       0, 0, 0.9510565162951536}, {-0.85065080835204, 
        0, -0.42532540417601994`}, {
       0.85065080835204, 0, 0.42532540417601994`}, {
       0.6881909602355868, -0.5, -0.42532540417601994`}, {0.6881909602355868, 
       0.5, -0.42532540417601994`}, {-0.6881909602355868, -0.5, 
       0.42532540417601994`}, {-0.6881909602355868, 0.5, 
       0.42532540417601994`}, {-0.2628655560595668, -0.8090169943749475, \
-0.42532540417601994`}, {-0.2628655560595668, 
       0.8090169943749475, -0.42532540417601994`}, {
       0.2628655560595668, -0.8090169943749475, 0.42532540417601994`}, {
       0.2628655560595668, 0.8090169943749475, 0.42532540417601994`}}], 
     Polygon3DBox[{{2, 12, 8}, {2, 8, 7}, {2, 7, 11}, {2, 11, 4}, {2, 4, 
      12}, {5, 9, 1}, {6, 5, 1}, {10, 6, 1}, {3, 10, 1}, {9, 3, 1}, {12, 10, 
      8}, {8, 3, 7}, {7, 9, 11}, {11, 5, 4}, {4, 6, 12}, {5, 11, 9}, {6, 4, 
      5}, {10, 12, 6}, {3, 8, 10}, {9, 7, 3}}]], Text3DBox[
     StyleBox["\<\"1\"\>",
      StripOnInput->False,
      LineOpacity->0.2,
      FrontFaceOpacity->0.2,
      BackFaceOpacity->0.2,
      Opacity->0.2,
      FontSize->Scaled[0.05],
      FontColor->RGBColor[1, 0, 0],
      FontOpacity->0.2], {-0.14, 0.44, 0.6}], Text3DBox[
     StyleBox["\<\"3\"\>",
      StripOnInput->False,
      LineOpacity->0.2,
      FrontFaceOpacity->0.2,
      BackFaceOpacity->0.2,
      Opacity->0.2,
      FontSize->Scaled[0.05],
      FontColor->RGBColor[1, 0, 0],
      FontOpacity->0.2], {-0.14, -0.44, 0.6}], Text3DBox[
     StyleBox["\<\"4\"\>",
      StripOnInput->False,
      LineOpacity->0.2,
      FrontFaceOpacity->0.2,
      BackFaceOpacity->0.2,
      Opacity->0.2,
      FontSize->Scaled[0.05],
      FontColor->RGBColor[1, 0, 0],
      FontOpacity->0.2], {0.37, -0.27, 0.6}], Text3DBox[
     StyleBox["\<\"0\"\>",
      StripOnInput->False,
      LineOpacity->0.8,
      FrontFaceOpacity->0.8,
      BackFaceOpacity->0.8,
      Opacity->0.8,
      FontSize->Scaled[0.05],
      FontColor->RGBColor[1, 0, 0],
      FontOpacity->0.8], {0.37, 0.27, 0.6}], Text3DBox[
     StyleBox["\<\"2\"\>",
      StripOnInput->False,
      LineOpacity->0.2,
      FrontFaceOpacity->0.2,
      BackFaceOpacity->0.2,
      Opacity->0.2,
      FontSize->Scaled[0.05],
      FontColor->RGBColor[1, 0, 0],
      FontOpacity->0.2], {-0.46, 0, 0.6}], Text3DBox[
     StyleBox["\<\"18\"\>",
      StripOnInput->False,
      LineOpacity->0.2,
      FrontFaceOpacity->0.2,
      BackFaceOpacity->0.2,
      Opacity->0.2,
      FontSize->Scaled[0.05],
      FontColor->RGBColor[0, 0, 1],
      FontOpacity->0.2], {-0.37, 0.27, -0.6}], Text3DBox[
     StyleBox["\<\"19\"\>",
      StripOnInput->False,
      LineOpacity->0.2,
      FrontFaceOpacity->0.2,
      BackFaceOpacity->0.2,
      Opacity->0.2,
      FontSize->Scaled[0.05],
      FontColor->RGBColor[0, 0, 1],
      FontOpacity->0.2], {0.14, 0.44, -0.6}], Text3DBox[
     StyleBox["\<\"15\"\>",
      StripOnInput->False,
      LineOpacity->0.2,
      FrontFaceOpacity->0.2,
      BackFaceOpacity->0.2,
      Opacity->0.2,
      FontSize->Scaled[0.05],
      FontColor->RGBColor[0, 0, 1],
      FontOpacity->0.2], {0.46, 0, -0.6}], Text3DBox[
     StyleBox["\<\"16\"\>",
      StripOnInput->False,
      LineOpacity->0.2,
      FrontFaceOpacity->0.2,
      BackFaceOpacity->0.2,
      Opacity->0.2,
      FontSize->Scaled[0.05],
      FontColor->RGBColor[0, 0, 1],
      FontOpacity->0.2], {0.14, -0.44, -0.6}], Text3DBox[
     StyleBox["\<\"17\"\>",
      StripOnInput->False,
      LineOpacity->0.2,
      FrontFaceOpacity->0.2,
      BackFaceOpacity->0.2,
      Opacity->0.2,
      FontSize->Scaled[0.05],
      FontColor->RGBColor[0, 0, 1],
      FontOpacity->0.2], {-0.37, -0.27, -0.6}], Text3DBox[
     StyleBox["\<\"5\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.05],
      FontColor->GrayLevel[0]], {0.6, 0.44, 0.14}], Text3DBox[
     StyleBox["\<\"7\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.05],
      FontColor->GrayLevel[0]], {-0.23, 0.71, 0.14}], Text3DBox[
     StyleBox["\<\"14\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.05],
      FontColor->GrayLevel[0]], {0.74, 0, -0.14}], Text3DBox[
     StyleBox["\<\"13\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.05],
      FontColor->GrayLevel[0]], {0.6, -0.44, 0.14}], Text3DBox[
     StyleBox["\<\"6\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.05],
      FontColor->GrayLevel[0]], {0.23, 0.71, -0.14}]}, 
   {Arrowheads[0.02], Arrow3DBox[{{0, 0, 0}, {1.2, 0, 0}}], 
    Arrow3DBox[{{0, 0, 0}, {0, 1.2, 0}}], 
    Arrow3DBox[{{0, 0, 0}, {0, 0, 1.2}}], Text3DBox[
     StyleBox["\<\"x (0deg)\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.05],
      FontColor->RGBColor[1, 0, 0]], {1.08, 0.12, 0.12}], Text3DBox[
     StyleBox["\<\"y (90east)\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.05],
      FontColor->RGBColor[1, 0, 0]], {0.12, 1.08, 0.12}], Text3DBox[
     StyleBox["\<\"z (north)\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.05],
      FontColor->RGBColor[1, 0, 0]], {0.12, 0.12, 1.08}]}},
  AutomaticImageSize->True,
  Axes->True,
  ImageSize->{314.4042290211502, 346.3579866393345},
  Lighting->None,
  PlotRange->{{-1.5, 1.5}, {-1.5, 1.5}, {-1.5, 1.5}},
  ViewPoint->{3.1814220106822946`, 0.16227774086806723`, 1.141148511266171},
  ViewVertical->{0.2864122350026017, -0.025575685064522485`, 
   0.9577650630370138}]], "Output",
 CellChangeTimes->{{3.672854510025185*^9, 3.672854604086026*^9}, 
   3.672854653909317*^9, {3.672854688121141*^9, 3.672854717219096*^9}, 
   3.67285477381623*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"PolyhedronData", "[", 
   RowBox[{"\"\<Icosahedron\>\"", ",", "\"\<Faces\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.672846479192686*^9, 3.6728464799023447`*^9}, 
   3.672852102208074*^9, {3.672852371496682*^9, 3.672852373096023*^9}}],

Cell[BoxData[
 RowBox[{"GraphicsComplex", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"-", 
        FractionBox["5", 
         SqrtBox[
          RowBox[{"50", "-", 
           RowBox[{"10", " ", 
            SqrtBox["5"]}]}]]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       FractionBox["5", 
        SqrtBox[
         RowBox[{"50", "-", 
          RowBox[{"10", " ", 
           SqrtBox["5"]}]}]]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", 
          RowBox[{"5", "-", 
           SqrtBox["5"]}]]]}], ",", "0", ",", 
       RowBox[{"-", 
        FractionBox["1", 
         SqrtBox[
          RowBox[{"10", "-", 
           RowBox[{"2", " ", 
            SqrtBox["5"]}]}]]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SqrtBox[
        FractionBox["2", 
         RowBox[{"5", "-", 
          SqrtBox["5"]}]]], ",", "0", ",", 
       FractionBox["1", 
        SqrtBox[
         RowBox[{"10", "-", 
          RowBox[{"2", " ", 
           SqrtBox["5"]}]}]]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"1", "+", 
         SqrtBox["5"]}], 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{"10", "-", 
           RowBox[{"2", " ", 
            SqrtBox["5"]}]}]]}]], ",", 
       RowBox[{"-", 
        FractionBox["1", "2"]}], ",", 
       RowBox[{"-", 
        FractionBox["1", 
         SqrtBox[
          RowBox[{"10", "-", 
           RowBox[{"2", " ", 
            SqrtBox["5"]}]}]]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"1", "+", 
         SqrtBox["5"]}], 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{"10", "-", 
           RowBox[{"2", " ", 
            SqrtBox["5"]}]}]]}]], ",", 
       FractionBox["1", "2"], ",", 
       RowBox[{"-", 
        FractionBox["1", 
         SqrtBox[
          RowBox[{"10", "-", 
           RowBox[{"2", " ", 
            SqrtBox["5"]}]}]]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"1", "+", 
          SqrtBox["5"]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"10", "-", 
            RowBox[{"2", " ", 
             SqrtBox["5"]}]}]]}]]}], ",", 
       RowBox[{"-", 
        FractionBox["1", "2"]}], ",", 
       FractionBox["1", 
        SqrtBox[
         RowBox[{"10", "-", 
          RowBox[{"2", " ", 
           SqrtBox["5"]}]}]]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"1", "+", 
          SqrtBox["5"]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"10", "-", 
            RowBox[{"2", " ", 
             SqrtBox["5"]}]}]]}]]}], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["1", 
        SqrtBox[
         RowBox[{"10", "-", 
          RowBox[{"2", " ", 
           SqrtBox["5"]}]}]]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox["5"]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"10", "-", 
            RowBox[{"2", " ", 
             SqrtBox["5"]}]}]]}]]}], ",", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        SqrtBox[
         FractionBox[
          RowBox[{"5", "+", 
           SqrtBox["5"]}], 
          RowBox[{"5", "-", 
           SqrtBox["5"]}]]]}], ",", 
       RowBox[{"-", 
        FractionBox["1", 
         SqrtBox[
          RowBox[{"10", "-", 
           RowBox[{"2", " ", 
            SqrtBox["5"]}]}]]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox["5"]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"10", "-", 
            RowBox[{"2", " ", 
             SqrtBox["5"]}]}]]}]]}], ",", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         FractionBox[
          RowBox[{"5", "+", 
           SqrtBox["5"]}], 
          RowBox[{"5", "-", 
           SqrtBox["5"]}]]]}], ",", 
       RowBox[{"-", 
        FractionBox["1", 
         SqrtBox[
          RowBox[{"10", "-", 
           RowBox[{"2", " ", 
            SqrtBox["5"]}]}]]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SqrtBox["5"]}], 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{"10", "-", 
           RowBox[{"2", " ", 
            SqrtBox["5"]}]}]]}]], ",", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        SqrtBox[
         FractionBox[
          RowBox[{"5", "+", 
           SqrtBox["5"]}], 
          RowBox[{"5", "-", 
           SqrtBox["5"]}]]]}], ",", 
       FractionBox["1", 
        SqrtBox[
         RowBox[{"10", "-", 
          RowBox[{"2", " ", 
           SqrtBox["5"]}]}]]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SqrtBox["5"]}], 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{"10", "-", 
           RowBox[{"2", " ", 
            SqrtBox["5"]}]}]]}]], ",", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         FractionBox[
          RowBox[{"5", "+", 
           SqrtBox["5"]}], 
          RowBox[{"5", "-", 
           SqrtBox["5"]}]]]}], ",", 
       FractionBox["1", 
        SqrtBox[
         RowBox[{"10", "-", 
          RowBox[{"2", " ", 
           SqrtBox["5"]}]}]]]}], "}"}]}], "}"}], ",", 
   RowBox[{"Polygon", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", "12", ",", "8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "8", ",", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "7", ",", "11"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "11", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "4", ",", "12"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", ",", "9", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6", ",", "5", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"10", ",", "6", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "10", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "3", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"12", ",", "10", ",", "8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"8", ",", "3", ",", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7", ",", "9", ",", "11"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"11", ",", "5", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "6", ",", "12"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", ",", "11", ",", "9"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6", ",", "4", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"10", ",", "12", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "8", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "7", ",", "3"}], "}"}]}], "}"}], "]"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.67284648034753*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Rotated", " ", "icosahedron"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Graphics3D", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Opacity", "[", ".85", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Glow", "[", "Yellow", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"EdgeForm", "[", "Gray", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Rotate", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"PolyhedronData", "[", 
           RowBox[{"\"\<Icosahedron\>\"", ",", " ", "\"\<Faces\>\""}], "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"90", " ", "Degree"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Lighting", "\[Rule]", "None"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"axes", "[", 
     RowBox[{"1.2", ",", "1.2", ",", "1.2", ",", "0.05", ",", "0.02"}], "]"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.672846717769266*^9, 3.672846954857459*^9}, {
  3.672847024654224*^9, 3.672847078372016*^9}, {3.672847113083726*^9, 
  3.672847149339669*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   {Opacity[0.85], EdgeForm[GrayLevel[0.5]], Glow[
     RGBColor[1, 1, 0]], 
    GeometricTransformation3DBox[
     GraphicsComplex3DBox[
      NCache[{{0, 0, (-5) (50 - 10 5^Rational[1, 2])^Rational[-1, 2]}, {
        0, 0, 5 (50 - 10 5^Rational[1, 2])^
          Rational[-1, 2]}, {-(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
         0, -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(2/(5 - 5^
          Rational[1, 2]))^Rational[1, 2], 0, (10 - 2 5^Rational[1, 2])^
         Rational[-1, 2]}, {
        Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (1 + 
          5^Rational[1, 2]), 
         Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
        Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (1 + 
          5^Rational[1, 2]), Rational[
         1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
        Rational[-1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (1 + 
          5^Rational[1, 2]), Rational[-1, 2], (10 - 2 5^Rational[1, 2])^
         Rational[-1, 2]}, {
        Rational[-1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (1 + 
          5^Rational[1, 2]), Rational[1, 2], (10 - 2 5^Rational[1, 2])^
         Rational[-1, 2]}, {
        Rational[-1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (-1 + 
          5^Rational[1, 2]), 
         Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
          Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
        Rational[-1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (-1 + 
          5^Rational[1, 2]), 
         Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
          Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
        Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (-1 + 
          5^Rational[1, 2]), 
         Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
          Rational[1, 2], (10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
        Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (-1 + 
          5^Rational[1, 2]), 
         Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
          Rational[1, 2], (10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
        0, 0, -0.9510565162951536}, {
        0, 0, 0.9510565162951536}, {-0.85065080835204, 
         0, -0.42532540417601994`}, {
        0.85065080835204, 0, 0.42532540417601994`}, {
        0.6881909602355868, -0.5, -0.42532540417601994`}, {0.6881909602355868,
         0.5, -0.42532540417601994`}, {-0.6881909602355868, -0.5, 
        0.42532540417601994`}, {-0.6881909602355868, 0.5, 
        0.42532540417601994`}, {-0.2628655560595668, -0.8090169943749475, \
-0.42532540417601994`}, {-0.2628655560595668, 
        0.8090169943749475, -0.42532540417601994`}, {
        0.2628655560595668, -0.8090169943749475, 0.42532540417601994`}, {
        0.2628655560595668, 0.8090169943749475, 0.42532540417601994`}}], 
      Polygon3DBox[{{2, 12, 8}, {2, 8, 7}, {2, 7, 11}, {2, 11, 4}, {2, 4, 
       12}, {5, 9, 1}, {6, 5, 1}, {10, 6, 1}, {3, 10, 1}, {9, 3, 1}, {12, 10, 
       8}, {8, 3, 7}, {7, 9, 11}, {11, 5, 4}, {4, 6, 12}, {5, 11, 9}, {6, 4, 
       5}, {10, 12, 6}, {3, 8, 10}, {9, 7, 3}}]], {{1, 0, 0}, {0, 0, -1}, {0, 
     1, 0}}]}, 
   {Arrowheads[0.02], Arrow3DBox[{{0, 0, 0}, {1.2, 0, 0}}], 
    Arrow3DBox[{{0, 0, 0}, {0, 1.2, 0}}], 
    Arrow3DBox[{{0, 0, 0}, {0, 0, 1.2}}], Text3DBox[
     StyleBox["\<\"x\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.05],
      FontColor->RGBColor[1, 0, 0]], {1.08, 0.12, 0.12}], Text3DBox[
     StyleBox["\<\"y\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.05],
      FontColor->RGBColor[1, 0, 0]], {0.12, 1.08, 0.12}], Text3DBox[
     StyleBox["\<\"z\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.05],
      FontColor->RGBColor[1, 0, 0]], {0.12, 0.12, 1.08}]}},
  AutomaticImageSize->True,
  Axes->True,
  ImageSize->{369.9571464529329, 374.4618635469956},
  Lighting->None,
  PlotRange->{{-1.5, 1.5}, {-1.5, 1.5}, {-1.5, 1.5}},
  ViewPoint->{0.9653069523768536, 0.9540626888379877, 3.0996688328691087`},
  ViewVertical->{0.05821345060984382, 0.9393538134035676, 
   0.3379727909348188}]], "Output",
 CellChangeTimes->{
  3.6728469557867823`*^9, {3.672847045334338*^9, 3.6728471173423567`*^9}, 
   3.672847149729549*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PolyhedronData", "[", 
  RowBox[{"\"\<Icosahedron\>\"", ",", "\"\<VertexCoordinates\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.672847194358469*^9, 3.672847196604357*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{"-", 
      FractionBox["5", 
       SqrtBox[
        RowBox[{"50", "-", 
         RowBox[{"10", " ", 
          SqrtBox["5"]}]}]]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["5", 
      SqrtBox[
       RowBox[{"50", "-", 
        RowBox[{"10", " ", 
         SqrtBox["5"]}]}]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      SqrtBox[
       FractionBox["2", 
        RowBox[{"5", "-", 
         SqrtBox["5"]}]]]}], ",", "0", ",", 
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox[
        RowBox[{"10", "-", 
         RowBox[{"2", " ", 
          SqrtBox["5"]}]}]]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SqrtBox[
      FractionBox["2", 
       RowBox[{"5", "-", 
        SqrtBox["5"]}]]], ",", "0", ",", 
     FractionBox["1", 
      SqrtBox[
       RowBox[{"10", "-", 
        RowBox[{"2", " ", 
         SqrtBox["5"]}]}]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"1", "+", 
       SqrtBox["5"]}], 
      RowBox[{"2", " ", 
       SqrtBox[
        RowBox[{"10", "-", 
         RowBox[{"2", " ", 
          SqrtBox["5"]}]}]]}]], ",", 
     RowBox[{"-", 
      FractionBox["1", "2"]}], ",", 
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox[
        RowBox[{"10", "-", 
         RowBox[{"2", " ", 
          SqrtBox["5"]}]}]]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"1", "+", 
       SqrtBox["5"]}], 
      RowBox[{"2", " ", 
       SqrtBox[
        RowBox[{"10", "-", 
         RowBox[{"2", " ", 
          SqrtBox["5"]}]}]]}]], ",", 
     FractionBox["1", "2"], ",", 
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox[
        RowBox[{"10", "-", 
         RowBox[{"2", " ", 
          SqrtBox["5"]}]}]]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"1", "+", 
        SqrtBox["5"]}], 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"10", "-", 
          RowBox[{"2", " ", 
           SqrtBox["5"]}]}]]}]]}], ",", 
     RowBox[{"-", 
      FractionBox["1", "2"]}], ",", 
     FractionBox["1", 
      SqrtBox[
       RowBox[{"10", "-", 
        RowBox[{"2", " ", 
         SqrtBox["5"]}]}]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"1", "+", 
        SqrtBox["5"]}], 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"10", "-", 
          RowBox[{"2", " ", 
           SqrtBox["5"]}]}]]}]]}], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", 
      SqrtBox[
       RowBox[{"10", "-", 
        RowBox[{"2", " ", 
         SqrtBox["5"]}]}]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SqrtBox["5"]}], 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"10", "-", 
          RowBox[{"2", " ", 
           SqrtBox["5"]}]}]]}]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], " ", 
      SqrtBox[
       FractionBox[
        RowBox[{"5", "+", 
         SqrtBox["5"]}], 
        RowBox[{"5", "-", 
         SqrtBox["5"]}]]]}], ",", 
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox[
        RowBox[{"10", "-", 
         RowBox[{"2", " ", 
          SqrtBox["5"]}]}]]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SqrtBox["5"]}], 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"10", "-", 
          RowBox[{"2", " ", 
           SqrtBox["5"]}]}]]}]]}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      SqrtBox[
       FractionBox[
        RowBox[{"5", "+", 
         SqrtBox["5"]}], 
        RowBox[{"5", "-", 
         SqrtBox["5"]}]]]}], ",", 
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox[
        RowBox[{"10", "-", 
         RowBox[{"2", " ", 
          SqrtBox["5"]}]}]]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SqrtBox["5"]}], 
      RowBox[{"2", " ", 
       SqrtBox[
        RowBox[{"10", "-", 
         RowBox[{"2", " ", 
          SqrtBox["5"]}]}]]}]], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], " ", 
      SqrtBox[
       FractionBox[
        RowBox[{"5", "+", 
         SqrtBox["5"]}], 
        RowBox[{"5", "-", 
         SqrtBox["5"]}]]]}], ",", 
     FractionBox["1", 
      SqrtBox[
       RowBox[{"10", "-", 
        RowBox[{"2", " ", 
         SqrtBox["5"]}]}]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SqrtBox["5"]}], 
      RowBox[{"2", " ", 
       SqrtBox[
        RowBox[{"10", "-", 
         RowBox[{"2", " ", 
          SqrtBox["5"]}]}]]}]], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      SqrtBox[
       FractionBox[
        RowBox[{"5", "+", 
         SqrtBox["5"]}], 
        RowBox[{"5", "-", 
         SqrtBox["5"]}]]]}], ",", 
     FractionBox["1", 
      SqrtBox[
       RowBox[{"10", "-", 
        RowBox[{"2", " ", 
         SqrtBox["5"]}]}]]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.672847202084055*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RotationTransform", "[", 
    RowBox[{
     RowBox[{"90", " ", "Degree"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}]}], "]"}], "[", 
   RowBox[{"PolyhedronData", "[", 
    RowBox[{"\"\<Icosahedron\>\"", ",", "\"\<VertexCoordinates\>\""}], "]"}], 
   "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6728472101306562`*^9, 3.67284725494496*^9}, {
   3.672847361443502*^9, 3.67284742828144*^9}, {3.672847486494388*^9, 
   3.672847507357604*^9}, 3.6728475520455713`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["5", 
      SqrtBox[
       RowBox[{"50", "-", 
        RowBox[{"10", " ", 
         SqrtBox["5"]}]}]]], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", 
      FractionBox["5", 
       SqrtBox[
        RowBox[{"50", "-", 
         RowBox[{"10", " ", 
          SqrtBox["5"]}]}]]]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      SqrtBox[
       FractionBox["2", 
        RowBox[{"5", "-", 
         SqrtBox["5"]}]]]}], ",", 
     FractionBox["1", 
      SqrtBox[
       RowBox[{"10", "-", 
        RowBox[{"2", " ", 
         SqrtBox["5"]}]}]]], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SqrtBox[
      FractionBox["2", 
       RowBox[{"5", "-", 
        SqrtBox["5"]}]]], ",", 
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox[
        RowBox[{"10", "-", 
         RowBox[{"2", " ", 
          SqrtBox["5"]}]}]]]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"1", "+", 
       SqrtBox["5"]}], 
      RowBox[{"2", " ", 
       SqrtBox[
        RowBox[{"10", "-", 
         RowBox[{"2", " ", 
          SqrtBox["5"]}]}]]}]], ",", 
     FractionBox["1", 
      SqrtBox[
       RowBox[{"10", "-", 
        RowBox[{"2", " ", 
         SqrtBox["5"]}]}]]], ",", 
     RowBox[{"-", 
      FractionBox["1", "2"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"1", "+", 
       SqrtBox["5"]}], 
      RowBox[{"2", " ", 
       SqrtBox[
        RowBox[{"10", "-", 
         RowBox[{"2", " ", 
          SqrtBox["5"]}]}]]}]], ",", 
     FractionBox["1", 
      SqrtBox[
       RowBox[{"10", "-", 
        RowBox[{"2", " ", 
         SqrtBox["5"]}]}]]], ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"1", "+", 
        SqrtBox["5"]}], 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"10", "-", 
          RowBox[{"2", " ", 
           SqrtBox["5"]}]}]]}]]}], ",", 
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox[
        RowBox[{"10", "-", 
         RowBox[{"2", " ", 
          SqrtBox["5"]}]}]]]}], ",", 
     RowBox[{"-", 
      FractionBox["1", "2"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"1", "+", 
        SqrtBox["5"]}], 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"10", "-", 
          RowBox[{"2", " ", 
           SqrtBox["5"]}]}]]}]]}], ",", 
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox[
        RowBox[{"10", "-", 
         RowBox[{"2", " ", 
          SqrtBox["5"]}]}]]]}], ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SqrtBox["5"]}], 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"10", "-", 
          RowBox[{"2", " ", 
           SqrtBox["5"]}]}]]}]]}], ",", 
     FractionBox["1", 
      SqrtBox[
       RowBox[{"10", "-", 
        RowBox[{"2", " ", 
         SqrtBox["5"]}]}]]], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], " ", 
      SqrtBox[
       FractionBox[
        RowBox[{"5", "+", 
         SqrtBox["5"]}], 
        RowBox[{"5", "-", 
         SqrtBox["5"]}]]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SqrtBox["5"]}], 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"10", "-", 
          RowBox[{"2", " ", 
           SqrtBox["5"]}]}]]}]]}], ",", 
     FractionBox["1", 
      SqrtBox[
       RowBox[{"10", "-", 
        RowBox[{"2", " ", 
         SqrtBox["5"]}]}]]], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      SqrtBox[
       FractionBox[
        RowBox[{"5", "+", 
         SqrtBox["5"]}], 
        RowBox[{"5", "-", 
         SqrtBox["5"]}]]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SqrtBox["5"]}], 
      RowBox[{"2", " ", 
       SqrtBox[
        RowBox[{"10", "-", 
         RowBox[{"2", " ", 
          SqrtBox["5"]}]}]]}]], ",", 
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox[
        RowBox[{"10", "-", 
         RowBox[{"2", " ", 
          SqrtBox["5"]}]}]]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], " ", 
      SqrtBox[
       FractionBox[
        RowBox[{"5", "+", 
         SqrtBox["5"]}], 
        RowBox[{"5", "-", 
         SqrtBox["5"]}]]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SqrtBox["5"]}], 
      RowBox[{"2", " ", 
       SqrtBox[
        RowBox[{"10", "-", 
         RowBox[{"2", " ", 
          SqrtBox["5"]}]}]]}]], ",", 
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox[
        RowBox[{"10", "-", 
         RowBox[{"2", " ", 
          SqrtBox["5"]}]}]]]}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      SqrtBox[
       FractionBox[
        RowBox[{"5", "+", 
         SqrtBox["5"]}], 
        RowBox[{"5", "-", 
         SqrtBox["5"]}]]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.672847214007881*^9, 3.672847255332007*^9}, {
   3.672847387880197*^9, 3.672847428711978*^9}, {3.672847495943713*^9, 
   3.67284750770052*^9}, 3.6728475523404303`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"RotationTransform", "[", 
  RowBox[{
   RowBox[{"90", " ", "Degree"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"This", " ", 
      RowBox[{"means", " ", "[", 
       RowBox[{
        RowBox[{"x", "'"}], " ", 
        RowBox[{"y", "'"}], " ", 
        RowBox[{"z", "'"}], " ", "1"}], "]"}], " ", "*", " ", 
      "TransformMatrix"}], " ", "=", " ", 
     RowBox[{"[", 
      RowBox[{"x", " ", "y", " ", "z", " ", "1"}], "]"}]}], ",", " ", 
    RowBox[{
     RowBox[{"so", " ", 
      RowBox[{"x", "'"}]}], " ", "=", " ", "x"}], ",", " ", 
    RowBox[{
     RowBox[{"y", "'"}], "=", " ", 
     RowBox[{"-", "z"}]}], ",", " ", 
    RowBox[{
     RowBox[{"z", "'"}], "=", " ", "y"}]}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.672847899152769*^9, 3.672848052822968*^9}}],

Cell[BoxData[
 RowBox[{"TransformationFunction", "[", 
  RowBox[{"(", 
   TagBox[GridBox[{
      {"1", "0", "0", "0"},
      {"0", "0", 
       RowBox[{"-", "1"}], "0"},
      {"0", "1", "0", "0"},
      {"0", "0", "0", "1"}
     },
     AutoDelete->False,
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
       "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    #& ], ")"}], "]"}]], "Output",
 CellChangeTimes->{3.672847892789715*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"PolyhedronData", "[", 
    RowBox[{"\"\<Icosahedron\>\"", ",", "\"\<VertexCoordinates\>\""}], "]"}], 
   ",", " ", "30"}], "]"}]], "Input",
 CellChangeTimes->{{3.672848088831925*^9, 3.6728480946186132`*^9}, {
  3.67284813483664*^9, 3.672848144246525*^9}, {3.672848205233158*^9, 
  3.672848318513028*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{
     "-", "0.9510565162951535721164393333793821434056986341257502224473`30."}]\
}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", 
     "0.9510565162951535721164393333793821434056986341257502224473`30."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "-", "0.8506508083520399321815404970630110722404014037648168818367`30."}]\
, ",", "0", ",", 
     RowBox[{
     "-", "0.4253254041760199660907702485315055361202007018824084409184`30."}]\
}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.8506508083520399321815404970630110722404014037648168818367`30.", ",", 
     "0", ",", 
     "0.4253254041760199660907702485315055361202007018824084409184`30."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.6881909602355867691036047909554438397629496680040793316828`30.", ",", 
     RowBox[{"-", "0.5`30."}], ",", 
     RowBox[{
     "-", "0.4253254041760199660907702485315055361202007018824084409184`30."}]\
}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.6881909602355867691036047909554438397629496680040793316828`30.", ",", 
     "0.5`30.", ",", 
     RowBox[{
     "-", "0.4253254041760199660907702485315055361202007018824084409184`30."}]\
}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "-", "0.6881909602355867691036047909554438397629496680040793316828`30."}]\
, ",", 
     RowBox[{"-", "0.5`30."}], ",", 
     "0.4253254041760199660907702485315055361202007018824084409184`30."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "-", "0.6881909602355867691036047909554438397629496680040793316828`30."}]\
, ",", "0.5`30.", ",", 
     "0.4253254041760199660907702485315055361202007018824084409184`30."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "-", "0.2628655560595668030128345424239383036427489661216708907645`30."}]\
, ",", 
     RowBox[{
     "-", "0.8090169943749474241022934171828190588601545899028814310677`30."}]\
, ",", 
     RowBox[{
     "-", "0.4253254041760199660907702485315055361202007018824084409184`30."}]\
}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "-", "0.2628655560595668030128345424239383036427489661216708907645`30."}]\
, ",", "0.8090169943749474241022934171828190588601545899028814310677`30.", 
     ",", 
     RowBox[{
     "-", "0.4253254041760199660907702485315055361202007018824084409184`30."}]\
}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.2628655560595668030128345424239383036427489661216708907645`30.", ",", 
     RowBox[{
     "-", "0.8090169943749474241022934171828190588601545899028814310677`30."}]\
, ",", "0.4253254041760199660907702485315055361202007018824084409184`30."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.2628655560595668030128345424239383036427489661216708907645`30.", ",", 
     "0.8090169943749474241022934171828190588601545899028814310677`30.", ",", 
     "0.4253254041760199660907702485315055361202007018824084409184`30."}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.67284809510069*^9, {3.6728481359562607`*^9, 3.6728481451153316`*^9}, {
   3.672848205856743*^9, 3.67284832134702*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SphericalPlot3D", "[", 
   RowBox[{"1", ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "0", ",", 
      RowBox[{
       RowBox[{"3", "/", "4"}], "Pi"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Phi]", ",", "0", ",", 
      RowBox[{
       RowBox[{"3", "/", "2"}], " ", "Pi"}]}], "}"}]}], "]"}], 
  "\n"}]], "Input",
 CellChangeTimes->{{3.672848778013227*^9, 3.672848785757876*^9}, {
  3.6728491945046186`*^9, 3.6728492090249557`*^9}, {3.672849366802001*^9, 
  3.672849393063283*^9}, {3.672849442512179*^9, 3.672849442793272*^9}, {
  3.6728503919543247`*^9, 3.6728504026829157`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyEfXVYFl3wNgbYovLagViYgAE2RwVbRAW7sEURFVEREVEBFVHEQLCQUFRA
AWnwGbq7uzttEQE/YHbn+X5c3+/63n/2ct5l97nvM2fmntmze6QOnt5ypLuI
iMjV3iIiPdqPMiO12/ytTBX3he1SGFgmu9ToX8d/jSzNo3xJ9plwFj5Veqn0
Sm3FL7o5asvNG1mKEVNePzGdFRWWar7LvKLYd2f/gHXzGliWlcmJZT8L2NSY
nATtHBPFLR/hXFq3Ovb6RIqI3fdSJve09eG36eaKZwYW7wntWc2Uq9aKqeRV
sh8BVv2yM+8rBt0J/eu1pZzVHa3dv3dELRNPcwvUGP9Q8Xjh3OHHxYrZmTtz
Ek/er2fZHpty7hQ8UtR49+FNyZUsNvHppe7P5zSy54PnxwpErRQL7+wYank5
jqXmrY8e872RMXed/+zvWik+ifF+udLLhdX887t/Ja6RjXMzdt+nY6UYKrHt
n8e7QBi6d83ndGhgP/Itcv08HyuKi4dUOvskg23PuPDAtDoWefnVBfFdjxTr
yydnQ1gurLiqtkZiZA2T2LlXZYbWA8VZxntPXjIugYkrDr15+aqCvV845VjP
bxaKO+c+m9L+b1icUF+9YIuJosjcT7veZ55S5Hm2sDvSO31JGAv7b1KgppoL
43necz5ort33VBb4fbrqj7oAxvPsahY++saCfKbqJt88/FwY43nu/l/i7m7p
JWyow9CvEbtjGM/z2jC/dBOTCqZZab40yiSR8TzrOI5RHfewmok6H15QVJ7M
eJ7lHN64eVbWssJfPfIP3kxlPM/D9SYontKpZ32ee4baPktjPM9ZM9+YjZ/a
wB7fSnkWNSqd8TyPt0yd6tKjgX0wrTRe2S2d8Tz/Z3I+cbhYPbPfNXxAomoa
43m2PxNVflehluVd6Nd8vF8q43luPrLNVdq+ikWvGdFdcWky43l2eH7I6N7u
cjZivESTf1k843n+Mu78h3HvrikeV/L7/W26AfFsNrD0wa7QINbPq7b5cqA/
8Wyo/WWsr2kSm9XN51IHbzzPN0LGh8vPy2LpVy86bVJJJZ7/VKknPZtTyNRT
M0+MKc4inpcbsQXvnErYekW7uPqgfOJ5xmSxRYNly1mp2xjR4LIi4vnTkVmW
i8ZWsi2SO7zTtUuI59PPLpyXOVzFrk7Qk3lwrpR4Prs+yftjcxUbY/1qmXVt
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
UEcTz2Gom8EVdTTxrIe6GQ6gjiaeNbAOFPzAupB47oF1INzFupB4nox1IFzD
upB4TsQ6EG5hXUg8b8A6EESqO+tC4nkF1oGwEutC4rkA60CQw7qQeN6AdSD4
YF1IPF/COhB0sS4knodhHQgXsC4knouwDoR0rAuJ5zisAyEE60KhP2MdCFOw
LiSe/8M6ELKxLiSeZ2IdCPJYFxLPX+d09jUES7DPQTx7Y18D7mOfg3h2xb4G
cH0O4nkl9jXgA/Y5iOde2NcArs9BPO/Avgaswz4H8fz3fWdfA85hn4N4Tse+
BnB9DuK57VlnXwNGYJ+DeDbDvgZkY5+DeHbAvgZIYZ+DeLbGvgYMxT4H8ZyC
fQ1wwD4H8RyEfQ34i30O4rk39jXAEfscxLPFkL4dfbrPXN+OeE64n7NEeqW2
gOvbEc+/9lh39OkEXN+OeN5j6NDRpxNwfTviebC6d0efTsD17Yjnm2O1Ovp0
Aq5vRzw/1Dbq6NMJuL4d8Xy8bHRHn07A9e2I5/k7/sUIRK0EXN+OeO7xamFH
n07A9e2I54LS9R19OgHXtyOeLb/u6OjTCbi+HfH8oEWro08n4Pp2xPOjAJmO
Pp2A69sRzzcPpx/t+c1CwPXtiOeEpDEWxgpeTFPi9hW9dHO2cf9guR6ljUzd
f7mz2EpTxVc6c+ZNW7mPdIii/L35PeSr2dr4uNo3UsEs5XLg6talpezmuYfp
YRoVbF9f0N8TmEV2PZeLKzb1qmP+v0YdNe8fytLWF2j93J/PEjxaKkRKqpj1
uLr1U6/lkv3c7hcpOQMbmO72neB4Kox1f3/V/szpVDY18IvUko/t9YlpkmSL
YT7ZzQ89M/2xpJHV7Wp593NROFuR3fL2TVkw899Y8/NUQC1zjZiec9qpgOyK
Kz/8krjdyIbmnipx1w5n7goeeyf5PoeUNR+Wd/9Xy1T66TZO+FZA9q0TRS4M
+druRzuvSR/qFc4svWfe8WmKgrM1SlMG6dUygeuTtqY9BWQ/dVjJfvGlejZ0
QGr8j15h7HnfUx4lKRlw0PRi5rHpNUzdfciwaXV5ZF8yrc9mmZm1TObefbuX
F0OYdm5yy5QV7XnmYJPoRckqZnWxp4Lk+xyyp1c9C7AYVcVEi05/dDsQxOZ+
GXGRvS6DHZ5S9yI2VrCZB/YGa7bXO/z4vr7fm/VO92AD5AzL/yY50vjuFTXu
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
7/E+dP7vX40B5e26TG7ls9XWgz7R+Qn4u2Eb4qDzxU8qFI33jYGoveODN7de
pPMfIC8w0KyTJ/KfhxtHbna+GA1N15MXdV/iBvz525F3WInjQOcnHlU7ZrA7
HNLLn0p5Dgmi8z1xXGExjjOdn7J5xu5tnz7DPXPNZ9YLI+j84eg3EIp+ROc/
zmiJ9vJ8D4tnaE2rL46m85Wdbuou9w9mowec/yGa9JYtKNE+t9WpkZm9+yY1
4XYyq600Cla+48seKI1SWm7bwNxamk8P2pvLxufePlO46YaimtvwPP36unY+
1M/+Ss1mI7Ljri2XCGG8vSpAcf/iyGLmdmuXwqmRtxVvzvspfvRZDQt1SM9P
iyxihyQnj/M2iGS8vemfk4rmlfJ2f7ZzLd12T7HJ+F2/Qq9KVlx6zdZtTRmr
elRxq/vhOMbb5Z5rXjIKrGKK6X30x1ywVNTo9lDi+4Yy1lJcue6GTi2THRyu
3UPjoaJ8m47FzXNF7Cz3fmUO937lHm691k2H1CbDvo3MRHRQyanqx4pJi368
+TMykWm07NO7v6GeBfqcujD+Whrj7S/Vn9rdzWrPq5tr75XoWylejxI54zTc
j0V7FzcMFG9gD4pn7lvaJ53x9vt9JpZL/WpkR9NlkkMtrBQLDR6mHpJ8B/kx
w5WbpzewdZ5Z6yLHpDPenvEuMuvJwfbrP9f+/kLaStGOqyNSu/Tnefvlopbh
UlINzGvt59Eeyo8Vr71W6/fUIh2kX+gM/rSgju14qB5fXftQMfDy1aA9Mwqg
Wr7/xaJP1cxgR+3HgEkPFM0LNT7/Fi+FC8nW7+1XVLFdy/r2OdKcxHi7k/gs
5zn7PrPNej9T77fnDd5PzkaL9E/pH8/8Y313O0+PJD+R/1a+PfJwOru99I2G
lXgy+YPz1uPHn8TlMgnXNrP1MzJo3Otm27TNjC9ipYE6O6fE5dD4jm1xiU9W
rmKhrweZWewqJf6P/fhaW1texYbOHde/T24p8Zx6/qV0/9Yqtnb+zNX69aXE
536uz1/M9fl53gYcMbPaNaKMGc63DTYQKyK8jWLbXg5v+cR6bcrxnZ8AhNf2
w84JPmGh7L9M099DLyQS3uTzFQXpY+PZuTPHXXbPyCS8PwcrSsbXpLAq/aR/
q0YXEN6ow4825+RnsKVVLp9nzSkhvCkDjo2KuVHElDfuDr2ypobw6r+bOvHk
1yLWb/viXr9/1RDeI7cjUqS7FTMXtfLX3QfVEl6+z7+X6/PzeHsPXfLh+M5c
dsl2/rntoeWEN1TeOuGRzyt2JWzzFhPVEMJrEihYseK2GyteN+9w1JgUwpsm
kvh32G5fdub4tERt1xzCe/NDxszvr4Fdtc+4Jbm1mPDqT/3o4T0+lHW7oxqj
/72M8P43dmlWX7tYprreOGmFUgPhneFgv/ncjjhWsVu0akr/RsK7zO2cUqRO
HNP+c3Bz69RGwhvO9fn7cn1+Hu+0IVOWOBRFsEFLhhdXDqwmvOGZPcPep9yH
qREK8zPeCfFuPXVu+gDHV/Also+Y5AUh3iB7se13r78FH/2qOz1n5xLerF4j
NizK/ghmDXG7X7wX4h1YccvCk30CHbnUhORd5YT3U4xUaUJ8AFz1G/LhZpYQ
r1zfGlMN00AQU1BzWvdaiLeph4RU4atAyAj+qfIxRIg3jevzz+b6/DxekVPz
j3uK+sBjNrDVyEyI94eo6bq1G9wgvaT8WW1tEOENntx/4HjJIBhQdL13789J
hPeRq/nlMEEkmJ1jC3c4ZRHe/jr33qbkJMDU+FVOxj2LCO8c/wUrvr1Ogbbd
xW9t9pQS3prEwgnejTlwNfbE0zu/awlv8ZGbOib2uZA/KUZljnsd4fVpT2hy
gbkwIkXfNSu2jvDe5Pr8J7g+P4/3mYWkIF4lA3qvOP5EaWol4e2m4Vphb+EP
f/d3HgmvXMiRg31WxcB0PBJeJ3G1Ieo7U8Eej4R3lmHLT81J2SCNR8Ibm1rt
NONwAYThkfD+PjPrlOj3cviGR8JroWoY4WdcAWZ4JLyTQ9/OdLSpgPF4JLwR
XJ8/mOvz83h1DRwaXGaWwBk8Et4MHFeox3EmvANxXCEAx5nwmuO4wh0cZ8I7
HccV/p3tHGfCK7Knc1xhBo4z4b2O4wqFOM6EtwjHFTJwnAnvaBxXcMFxJryn
uD6/Adfn5/H2w3GFBzjOhJebt2CL85jwcvMWZHEeE15fnLdwC+cx4eXmLVjg
PCa83LyFkvLOeUx4jXDewjmcx4S3F85baOjTOY8JbybOW/DGeUx4uedz8Ijr
8/N4rXDeQqxW5zwmvAYYlyED4zTweIswLoMNxmng8WpjXIYvGKeBx2uIcRmc
MU4DjS/GZbiPcRp4vCoYl2Eexmng8ZZhXIYNGKeBx6uFcRkOYJwGHm9vrs9f
zvX5ebziGJdBCeM08Hi7Y96F35iHCe8gzLvghHmY8J7BvAv5mIcJbxnmXWjF
PEx4F2PehWTMw4R3GeZdyMI8THh7Yd6Fa5iHCe9bzLughXmY8O7s0ufn8V7A
vAsSmIcJ7zrUVeCKOovwfkJdBRdRZxFeY9RVsBB1FuHtj7oK3FFnEd5c1FXw
BXUW4f2MugomoM4ivOKoq0ALdRbhVUJdBVmoswhvLtfnP8z1+Xm8l1BXwWDU
WYR3INYbsBLrD8JbiPUG3MH6g/AOxLoCmrDOILzbsX4Arp4gvNlYJwBXNxBe
D9TxcAB1PeG9iXodYlC/E16GuhwKUKcTXr7Pz62XIbybUTfDRdTRhPfkmOyT
vYxPCJ7v1HAaHBVCeNUlTw6+t0hf8OXvTTexRymEt7F5R0d9JeDqLcI7R2x0
Rx0l4Ooqwlsyd2tHvSTg6ifCu/tN/qX2ukjA1UnA10cf+j7qqIsEXJ0EfH2k
yb3PwtVJwNdHkQ+zitvrIgFXJxFvi057dNQ/Aq4eIt7CBT+T2uscAVf3EG/1
5god9YyAq2+Itzi9mx11i4CrY4CvX7KnT+ioWwRcHQN8/XJkUY/S3n+Cmf2d
9EmZCa8p/tetuBG1qjWZHQo8Yxxp4UHx307m4FjbkBwWY+Yptj/Xm+K/gU3p
iXrTYqZXvUq/NMWH4v+4OFknx83l7MuP6z2tHL0o/tsmTjiyxbOeVWlPH3NV
NEWozys+Lpyc0cBU404NWJWcSPH/RP+lEp+XN7JuV3LXPvaIofi/hXuv5DL3
XgnPQ5HXptsBagK2OL6Pqdh0b8KlYf9Q+m9ZAjPfeObCC8cwwtWwofBB3/2Z
zGfELtnPF+IIV3XLikVu4wrZVvf90/rMTSZcDjkFGfaLStl0uyT/a3KphGvV
9MwSX/Fq1qDQfCR7UwnhWjrT+ICNfg17ffGs6mb3YsLVQ6JvkMaGWhaZOf+h
pW0R4dLi3ouJ5d6L4XGpDlHJ7bfRi+la19UlNQoIV353ZfGQ7RGsoTCy/2K3
eML1LEdQ92t3Mps2+I1U65R0wvX6QUvlYfdMZvGiyU7mRg7h2rzs3oF1v/LZ
79Kl0iZJQj0ms/26zaBnxcxepfia5/1qwtXt/VNX5SmlbIxedOufs9WEa8A9
yxVuq8pYiWPvtkLPKsK1lHtvJZF7b4XHNVFuZ0+9KIf2eJz3ft84YR1xTbWl
aKalNxv6+tJZrU/JhOtl3F6R5XEh7M2cKe75HtmEK/yAhYuvQixzf9u2OUZL
qKu3NE87rDMqheVcSCqxuiLU1ae3mo2V2pnEXon2+CL2rV6ou/aafdTfnso2
Wn8rMt/eQLjmKaW+yfuRzuLSbqZt7tkgrCO491PCuPdTCFeavO6igSYg3exw
dVmgENcJr3RnXRcjcP9hHSj9QFgfaWlPU7xkocfGm9oO0dgjrI/ydfok9K+w
Zd3GjzozJEhYH11Y1vQrJ9uNnRg/wrX2oLA+kvr0MUvtqDv0fdI24/cvYX1U
lfLzVtSj53B59xD7HenC+ujl7si8Xx/NmdGGteVqP4X10UDuPRRufTfh2nhB
8ul2X1fQEvj6p7NgwnVV43nv40b+YP783xfV3cLxShm8MnDbzmCYKJjwNuS7
cLxEe4veD/8YCmk5g012DxXi0vzWNGScShjEmo68E1UsrHOhr0mVqkUWHIyC
f4uv1xGu3j/uhAZ5Z8BkFUWbG0H1hGuQ3mJJW6U0iJpcsXbcJuF4TeXeN5Hh
3jfhcV0v6Ff27KQfDHJbF/fKKUAYDw99L6lqigRD930L7x+KI1ySlk9/7QhJ
AuuvurcM7YTzq29jhtvWh2lgHHqk+fm/PMJlILo1sHF/Jvz8E5fi3FvYr7AC
2xCPbuUwY8yW70dyKgjXVf0c87g7ZdAq7vgrR71KWM+eFNu84mEpnBs4c+hv
pWrCNZ17r2Q7914Jj2txip/ltvtB4K+0e05PL3fClaExsVBLJAlG6z+vzSgK
IVzPvU9cvPYrAw5vmLHqUmg84bqFeEAU8RGuc6Iu8bktRZC8Zu22tC3CvtOS
x4rdZTVq4bf4EZ9KpXzCtdZy7vPyU7XwtUTSYoxMEeGS26j0bVVKDTjYvB5c
dqCYcB3m3h8Zyb0/wuM68N+7H7/uhcC8xW2p1sOeEC7NSbb1DgtSIFg+YHpm
mwvh+nzx9M4KqxzYZ/HGzSbbj3Clo//B716d/ki4zvo/Mnl3oAz63Trq2Mpi
CZddxca+41wa4MiNyVt2/BdKuEao7NKpXNwIo2VvmX/JjiJc++ZXPXQe2Agi
R8XF7s9OIFxzufdEWivxPREel2H3Y3X79UJg9ZWQ6CWKz0jnDAyRSlI70o5r
8/b9YRGOpHMmHVjBti7OhVfhL6/V6b4mncPFC3h0rjN+kM6RqPKKLTAoh0FP
Z5zIWXuDdM6mS2YyUaYNMDayVXfjjQjSJ+8c8qdcu9UIRU/3vbFKCCZ98uyP
mV9AQiMM9F6WXCnuR/qkhHsfxJl7H4T6Zmt1TUapBoFp/2VSQ+08CNeZtWJP
9K4lge6YaQ65A4IJl2ZNtNfO5Cx4YSYdP3FAJOFyw/gOKRjvCVderLKlh0wZ
RKWXFz02jSdcIpq+k/b9qIH0r/oC8ZgCwmU0bED+yPV1MDRfL1+wOJ9w2UYc
G1rdUgd2A2OrvOtyCFcA995HK/feB4/r89nKvYb2vjB259hhu3cHEi5xtR4P
g0yjIf287J1eIrGEKyot+azqy1SwU29Q3i+RSrhuYz6GD5ifCZf8mIdz3jxv
r39atXTGKucSLkWpfFuj3WXw34D867XalYRrRdvtiMiidv1qZBg4YVIl4Vpu
GVGgUFMBsgryExtWVxAuAfd+xybu/Q4el7GBk/6vcGd4Fvro2dlzwvrCaIDO
tXW7BNBr0hLdBT+TCNcDVio+93QUbBh9qW6EQRbhUkX9BPWop4R+OC5SYLsr
AxITF9iE7SohXLr/aa25+D0DZlXMSbmZWUe47m3fMjugRw7UvDp2+MbgesI1
8W6rhrJZHrx7tWrgVps6wvWae4/jAvceB4+resYmf6/Vl2D29X0bkkKFdYRs
6tXG33+tQbV31v45N4R1xD19Q4Vv95whIHrT5q2ThXWEJupd4PQv4dpVFXlu
z/dgqJttHzyu5/9VRxzpu7p3mSNYaOibX+gh1P/6i73F0jW9oFgvzcQzQKj/
z0kmuM8ZEQRHbqbp9vES6n9Z7n2Nbdz7GlQXf/sydMSbKjZzQejxnvZujK9T
UjSH34n6Xsnu1074kuUdRXa/iXm6cx9VsD/vj934Pi+N7Nv11WTXWJaxgzuP
LlUxyCV71Krajeu1almp5hixYj17xtc789ezX9+Vali/iimPQwsSya62c5iU
n1E1c7dSkVy2Po3sl21+Rv2cWsEu+Q+M7z6niHV9rnT7R8T/eK7E8cUEyB/F
29nc9yezuO9P8ufLcvaKLvZp6E/MFP2LruPFfV9xE/d9Rf78IhwPZovjQ/G8
Ev2PPUN/JPthHCdmgeNGcf41+iWTRz8lO/9e/JIu9cs5Tv+7ddH/08v6FoSW
1rPjFtKvBuwQML6+2zbcWEPiYj0b6xqmmzI9muzRXlVOzj9rmJTEk356lTlk
r3s8Tyo+oJoN/dZgsmp7Idln75mlN0Gy/XdOGpjf+MeD8XXiGanvFp/Uatvj
5b/HbE4c2Yst/xk+DqlmoUkmQyMHZJK9LmFw09iLlWxB3NpPb3cXkr0be+oy
4EM169VUcHzdBjvqyw3Skbxtbl3FLOvE50/Nihc+Xxhc5fzwTzHLylQYoNlW
RH44ftevvR8gnzVeidINDC0l+38PM89r+paxfU7+cdIiJeRX2u/2b7szoZAV
LJjo1P1ZBdnduXHf2mXcxTGeMiWMr+Qn4tz3IVO570Py53/BOMvWYdwlf5iG
cZatwbhL476Wq4MiutRBErE7bzWLlDPDpXcqf9qU07hky6T/kR5bygxb59up
r6sk+/U/3wMrrrXPb5WZTTsOlRLPr+8/vrm1qYiN7L7w7nPzCrJ/qot66F/c
Pi4/phn07JZKPFfvbLHdE1TG+g+aHPdVvYDsGxU8V3XzymCLjY3uDG0uJ54X
Jvc8LNU/gYn8+771nGUl2fXyYoJuL8xlnkvXr7qaXkk8m3oelZ9fHccmW6h4
3mivg3l7d47PzC58RmGeZj0xbwt1Y5fvRvLn98X8zW5gPif+rTB/MzvM58T/
V65eE3Sp17YM0h1oeyCbXX53Ss+s3d95no0b57Y5e6SxC4p5X7Pbr8/bA0Z9
u9q9KpsZu/XICRpSTTw3HDjx+evEZCb//IvTjdIasnvttzFceqyUXUhc/3Zp
rvA5qdFmr/AK6XymK23xfNoM4fPEHZo60hHvAtgSvbq6LYZVxHNSit3EzXOt
YOt8zdDu/kL7yhVqZyWqQtnFAwvn9m8T8nwl/nXO6vAP8NL6lrrigVqyz+L4
rO/CZ0tEp/5jm1EPEv/nue9JzuC+J8mf74O6kL1HnUj8B3h16kL2HHUi8d+n
4f9dVw6uuu886ZUPyz8+fHDr33riWVPl5+5u/e6wt0uaK/aNbyD7rNBdfrct
gK172Jof8rWWeO4ntSawv7oNKOutv54rX0f2JuPqfqaG2Wz1ip1BbzdXEM8v
rMX6hA6JZYHX159yjK0iezKozXFUCQXppOtDUlcIeU6doDruhWMyXH1X1X/C
GKH/f3H1/lBYEATvzVeaiksKeVZVUX98wicdDG65rFWRryb7R47P6V34NMG6
AmyxziD+T3DfmeS+z0fnz8N6A4Zj/UH8j8R6A/Zi/SHkn6t/53Spf7M1eiga
XYgDhZ2tyxtXCfmfu90uU2lUKnQrDJLa+FDo/4NcLiUViUbA5ysGTUWuQv4/
LEnx+j0+Da47K9e/3yv0//2qo2wnO4awwS9E7yatEj5XLZ9/uvZ+kguo2vka
ezoI7VsXKsZETMgG8z5e15Q2CuOP0ZTPA0bXFkLk48yXyhUlZP/m/GHA3aJs
KO653j9tXhXx/NimYNWYhyWQ9lTs81D5MrLrcXyu7sJnj0Gd9SosxPqV+G/l
vj/JHen8X1jHwiqsa4n/d1jHwkysa4n/sVydrtGlTvfwlFVOOVgE2pdn9Pm0
ppp4Fovo19JdtwSy1pZ0X5AsjP/23ZuWH3TNAzvfS2Z+G6uIZ8lh4ZdnypeA
pqxP4BeLcrJ/bfETuFsD7NvW08X/iJDnORJN4n22pcGjjV/ERj0TPv+NQX5B
D/kmnu/heIAKjg/ZM5FfuI98E89lOB5QheMjjP9fkc8/XfiUxT4IPMC+CPG/
jvsu5Snuu5T8+SKDOvsjoI/9EuL/AvZH4Dv2S4j/XVw/YXKXfkIu8gvdkW/i
+SyOB3zA8SG7FvILY5Bv4tkRxwNscHzI7ucvMvni4iw4PreppOG9MP60TotI
zDlcDDYT58esqBM+j76G8QWiMd4Qz9MwHsFnjE9kv4rxBVZivCGeXTAeQSrG
J7KrcHzu78LnEeyvgSf224TrSbjvVepw36vkz5fGvhuIYB+O+I/Bvhv0wD4c
8S/L9T1GV/3PvkcPjC8gjfGGeF6A8QiCMT4J8zLGF3DAeEM8CzAewR/nzvhE
9ufILzQj38SzJo4HuOH4COMP5ldISu7Mt8TzYszH8ATzMz0P4vIr9Md8Szyf
x3wMBzA/03OimRyf87vw2Q/7tlDk0dnHJf453QPrue9Y8ucbYD8XbJM7+7vE
P9fPhbn7Ovu7VD/y3+twq/+f/Rkuv0K2ame+pedHeZiPYT/mZ7Jz+RUqJTvz
LfG8BvMxXMT8TM+bHmN8gakYb4jn/RiPwB/jE9nb2jr1JaxHvUk8L0Q9CttR
n5J9EupLcEC9STy7oR4FY9SnZOe/C3q8C58v8XkAGOLzAarTOd0PXB1A52/A
5wRQh88NqH6PwecEsAyfGxD/wVwfqahLH+kc6ku4j3qTeL6EehT2oj4l+zzU
l9CMepN4voZ6FMJRn5J9E+ZXuIz5Vlh/YT6GS5if6XlrDdZXMBPrLeI5Fesx
iMX6jOy5WF+BHtZbxPMOrMdgJNZnZE/k+BzVhc+X+JwJ5uFzJ+JfhfvupS/3
3Uv+/OH4/Al64/Mo4j8Hnz/BMHweRfxHc/0u5S79Lj2sr6AY6y3i+SLWYzAS
6zOyS2B9Ba5YbxHPcViPwU2sz8gegPoSfFBvEs/KqEehp0mnPiX7Luy/wE7s
xxDPjdivgQDs35BdB/spYIT9FeLZFfsvoI79GLL/b3zW4vNLWIvPM4l//nuY
XN+Fzn+FzzVhGT7nJP7D8LkmiOJzTuI/iOvLne7SlxPDfgR8wf4E8TwK+xcQ
i/0Mss/C/gJ8wX4D8eyH/Qgowf4E2c9ifQW3sd4ins9iPQZ+WJ+R3QT7ZZCK
/TPieSj21/h+G9kbyjv7X7AQ+2HEczP2y4Drn5H9f+OzAp+LA/ecnPj/39YV
rMTn5XAZn58T/9zzcuCenxP/p7j+oVqX/mEP7B/BduwnEc9cv4nvP5H9DPaD
4Cz2h4jn8dg/4vtJZO+G/QWow34D8SyH/Qjwwv4E2a9jPwiGYH9IGJd+d/aP
+H4S2eH054512AJuXTbZufUi7OS8MVq9jE8o8v1elSaxM5N2VjKVv09lWrcl
UX5vhoUz5Kuq2Qax1ttaUimUx/n9boq69BUDA8rGrD9Tx7bJn9X5UyHULUHm
o5JXOtSwoJVJhtscUyg/LpmfFfltWynbp/M+wiirgO5rGjlM2fx8OXs+vrbg
55hium/X/V/4+yqbTg/Ye6+SnVE2lhCPFurVZ2eCh14dVMEeTdEdd9O6mO57
8GDvt7Jbctin0V9Glnwto/uG7vG58nZePluQ2lxtvFTYt+nF9WfSu/RnCrS0
je16FbFA85q8suvCOmXV9fnWZr0K2LOTsePVyyvpvjuT1Afq9oxgeWUhbwLG
Cutowc7pKjLaUcxeTP3f9hBhv4LfH6SuS18i3PL1U7XkGHbDxjtasF9Yn25b
f3fP43HRzPqoqJ/FDWEdenlg9aXxU71hsGLv2R8fCe87xkb0SehjXyi4ql6k
vkpYp1v+L/V4RmroiMgWfxj7dY+O3Rfhfc9u7nVxzWo/0Kl6a7+yn7DPYPxS
JmzixXT49elkv0NrK+i+8h7hygeSM8FTbsomZ39hfXqWq0PXdqlDF87SHjJv
cg7Ey8/uvW6ysB/1SaGP1J4rWeCaYvl+0Slh3ylnfvzq4CvFkIlHuu+oXWvc
DY+XwlA80n35/RT+dqm/Qp/0NevWXt8J8Ej3HSj1UcX+Ryn0xaOwr4I44TLi
pvv6IE6Ygbjpvhu4uuNYl7ojCXGCDOKm+7ohTniPuOm+Q3BcYQ2OM923EMcV
Sq07x5nuO6PL9/b5+47DcQVrHGe67zkcV1DAcab75qIfwzn0a4r/r9CPIQf9
muJ8Daczd3bRmdfQj6EM/ZriqhX6MZxDv6b46YbzFk7hPKb7yuO8hUScx3Tf
ZE5f/ddFX/nivIUynMd03yc4b2ELzmO671aMU7AM4xbd9wnGKTDDuPX/1RUn
ME7BWoxbdN97GKfAFuMW3VcZ4zJsxDhN91XCuAxcnP7/5tMNGJfhM8Zpuq8P
xmUIxjhN9+We/zGGzwNp/cDwO6O8JxiHMPvdp9cNmmFD6w1kjt47NmhfCHt+
T/vJCQ1bsovh81Fmhs9L6ToHRGDdhDNB7MXJ+1evz/Cg8+3CKqc+7hvEyoO3
/j56+xPZE/D5MRuGz5PpOjVbS9Jde/kx+aOLe87tHkjnhxQ8P66Z5sPazHP2
aPT5TPaT+Hyd6eDzdrpOqZtDQgG4sBGC7u8ldgnX8yRf8VBujn/HpOvOdzdz
ENqf4voDJo7rEeg6T3u6O5zJNmKCxQfXXAsSrnfakXpA4XauBnNeMfupdaTQ
XoXrM+A4rteg66hbFdrNinOEmPfHR03tLzy/1xDv9wlJThBlrPr2vyTh75HC
9SuQjutZ6DqLPhmufxzoBWrM1e2OvXC93G6FvAG3u/lAir3/mTvuQn5u4Poe
qMT1PnSd7fj3MA+vR+d/2C26/L0JQISslXjUKU+y38X1T3AW10PRdWIRD6xE
fHT+HqmzogOXhcDpyb4DxwvsyO6B68Mg0bNzvZhwHQvyC3+Rb3p+XRJd5V3j
FgK6ObO09+jeJbsErp+Dh7iejp5rD8fxhq84/nS+z/Bvl4N6B0PKx9T9gY4f
yV6N6wuhDNcb0nVk0P/gO/ojnd8sW+Go3uAPGoY2wU9l/clugusv4Qiux6Tr
WOF8gIM4P+j8e+KB6w+Gu0G/vU+slyQI7U9xXQKzwHUKxFtfPI89xr8j+whc
n8HCcL0G2bfj72Pd5Tp/L9mNcJ0K64PrVsgehrwwP+SJ7MNxvQ67iut3yC6B
48GPD9nVcN0Sv45JuI4O/QB2o18I3zPC9VuwENdzkT0O/Q/eoT+SfSiuYwMD
XNdG9kz0e9iK84Dsp3A9HyzD9X1kj8b5Bn8Gd84/snPrGiE0tXOdI9m5eQ55
aZ3znsbrBq7vhDm43pPsUzC+QCHGG7KfwnWusAvXvZL9F8Y1iMM4R/Z5uN4X
KnD9r3A9PMZTcMD4SvZtuL4ZuPXOwnUsGN+Bi/d0vhWuk+bXTZPdDOM+yGIe
ILscri9hEjM715sQP19rKyST7UJY+dnF5zbWPBC+d4Pr15nmFdeO9eyK/O8R
PHJV9H9homhqkyxqsegEfeck4aRT05pFaUzhfFVhx/vF/H4NU/Y4irbZ5rOX
DlWvp/0Jpn2Llh8fM9JjeCnrH7a1uOM9U36/BqdZD0+sTq9gq+RVTz7xjKV9
iw5mNId/rK9m8oPvlQ27kEj7Fn0Z0S/fdF0du1E46si/acm0b1GUxaRlXjn1
bF+tZLfoMSm0b9H7Pge61z1oYCkT877cMU+hfYvyzj+4+etUA3NIDfLpeE+Q
369htJLmzCKterbfNtpsSk4y7Vs09t8O3zqrWvZ5tURAx3t2/H4NUi9KEg/9
qWIfN052eqeSQPsWGS0K+TIt6rqiqtzJV6dGXiLeovMrj6g9TGZWJQWhXgaR
xFvdi1mpTz9ns1N7ZEd1rPfmeVPPERzLsCpibd1kn3a8b8vzJtdW+DI/o5T9
Chid2LGOmvY91CqdoHGzgjnm2a5dPbqAeLOqW86q2+uQdddnG3esT+Z52z/3
pbztl2q28Vp1RMf7njxvIx74On+4X8NKm9b7dqz75XnbnvsYLM/UsElXJVw6
3pfkebtU8A7kLKvZy5NTczvW0/K8tf1Ve5rbVMm2PxWImPQsIt7ifabPG/Op
nMUf7/Pxxb884u3jkGtG/d8ZKIatMrIfc+Ea8bbb8YxRRHv99fjPi6SW9nqZ
562Xkqqdn0Mqm2u43EWlIZN4275kgdKVTdksPLT+VUedy/MGEo/ixq8qYBKF
Xv8iz5YQb8UTZiQdkCtmLQM2Te6oT3ne3tyN+7QruIRZznuyWC+ngnhbkbD/
5JuYUmaoOiqxo67keZOtGJcQrlzGXI607TPzqCLePJvun1w5s4zd6p90tqMe
5Hl7cHj/9YxrpUw/IEykR3gl8cYSJ7atXVfCch337e2o43jeCh6eeHXqXhH7
yGw+m7Vfj/YVgtVPbWcFsXTZlds6+gM8Pz3jtv/2dY9kiyP2nWm2ySN+mta3
Op8wS2CPVziYddT1PD9Z3ZTThymlsJOl819v7VdB/Px0uXk/LzCNzX634V1H
Pc7zs2f1srgXrzLYLbvZaqqbaomfWQHavT8WZbJ7dxfu7aijeX40aseX9dTN
YvJZSgU3jOuJH1ONZrPz27JYVekC5Y76l+fnkIJuasatTHZHa+LHV8friB/Z
QT/mNg3KYHEjKl931K08P+sun/HX+5PKpi7bsfP6mCriJ6TbJ6luSfdZwqD4
ESe3Cb/bc85Ys0bu4SsW+m+V/5I+wv0xQTsr/9Kqtyyk2rxyWKJwf8zFL5cO
kV73kdke3hbbO1e4P+auKSNXfvbyYCfPJa4uFQj3x9TW/5IzgHkxzbrSgl+/
hPtjjmxtkHSR8WHLzq6a3nxSuD9mjO+AEKsLvuyZ5uu8jvemed6WLVtvfXuA
H2sQ8d3mHyvcH3OD4Nf7ZY2+TP3ubP+O94553jLlRcWfjPFl89/MkmiwEe6P
OaJkgZfRM2/m8zrKoOO9XZ63GPPSnYUXPNlw6YBLlU3C/TEbn0fHzRW4s9Sg
bf39jYXfEa0HDc21Aa8gcuAiwYFeQj51w7UmhBm6wdVm7xUd3zfg+dzmtrDW
YqovzDQ/saVjXRnP59tDebusJwKsvfHOx8BSyGdbkVXrh5chUHVa9ELHOiWe
z5JtNWcKJ4XDPZHLVh3vxfN8poyrbBo1JBKmndn3o61NuK/rKddXJmd3RMHM
PVNGdrxXTvFtx9Kd7xuiwO2N3M/vW4V8Hpdx+myaFAUCTSufjveyeT6XDMn1
K2qLhNcFt452rFvg+XQQd69yvBoBzzf3lOp4r5nnU+fpxxdOe8NgwYz85R3P
2Xk+7z9ovLvtbTDsSYmr7ngvmOfzSvK8/GwFTzhtn306oEq4H/G8RlHngPpQ
GFjA4rY6phCfIxY0ri6SjYehvQzsdFSE+4rK6H25dSYxBQJeWYebWgv3FR0X
KJWfb5gBK11yNvft93/tK9pwYLvFnWzY+2xrilp5JfGZ5a157HxhLvx1ttoV
NES4r2i87PUNfpr5MMg69EpHv4vnU+n8u3IFyQIQt9q0fOss4b6i05c1r41v
zof975df6+hT0f5TvzeW3GjNg7jbjxy3jRPuK9rtz+ff12VyoWdx2JuO/hLP
Z82byLrCp1nw7G70W5mewn1FZ44Ie6K4NR2mf6g+1tEX4vms4fYPzeuyf+hU
C6WP1bU3BKdVb4fWrhd+v/oPt69oXZd9RYcg7zARx4Hs17j9RvW67Dc6GscD
/s3vHB+y63H7kGp13YcUxwnG4biRPYTbnzSgy/6k63H8oB+OJ9nNuX1Lb3TZ
t/QQjiv8h+NM9m7c+oemLvuZdnfpHG8IwvEne29un9M2h/+5z+lw9APwRL8g
ezi3/2lAl/1Ph6F/wDT0F7LLcvuiTu6yL+pR9BsYhH5E9kJuv9T0LvulpqI/
wVX0L7IP5vZR7d1lH9W+6GdQ09Tpd8L9gr/i/qpNXfZXtUP/g3T0R7IHc/uu
+nfZd/WWdGvFC2lTwYH7l7+9fHWA/O0axkdQxXhJfiWL8RHGY7wk/1mH8REO
YrwkP6nF+AhpGC/JHywxPoIHxksa95kYH+ElxksaX1mMjzAf4yWN4yeMj1C0
vTNe0ngFY3wEOYyXNC5vMT6CGMZL4t8W4yOcxXhJPC/G+AjKGC+JT8OgGY9L
9E0F0n8HOeh4b6bvGYZgngbAvE37xAVjngaZ0515m/aJe4l5GmIxb9M+cScw
T8NHzNu0T9xxzNOQiHmb9oljmKfhBuZt2ifuKeZpWOTXmbdpn7h6zNPwCfM2
7ROnhnkaAPM27ROngHkaVip05m3aJ84b8zQYYd6mfeKGYZ4G6budeZv2iVPg
vpfr1OV7ucmoC8EMdSLxJo+6EMahTiTeLFEXwsgNnTqReDuGuhDqUCcSbzNR
F0J/106dSLxdR10I51EnEm+3UBfCGtSJxJss6kK4jDqReCtBXQh2qBOJN1PU
hXAFdSLxFoG6ENagTiTeJqIuBA3UicRbgOGIyV8eBMGVFpNvM+cF0PfiLLDe
gJNYfxBv07HegCFYfxBvflhvwFGsP4i3/lhvQDLWH8TbD6w3oA7rD+LtJtYb
4I71B/Gmi/UGqGD9QbzZY70Bi7H+IN4Msd6AIKw/iLczWG/AS6w/hPs/Yr0B
a7H+IN6csN6AKqw/iLcfwb52Hc99/kSU2ll75dH3Sy8c7KNWkuIDkZkG+xJT
g4lPE6x7IRHrYOJTA+te+Il1MPHZgHUv7MI6mPgsxboX5mMdTHzew7oX7mId
THwqYt0LtlgHE5/Lse6F41gHC/eHxboXpLAOJj6HY90LGlgHC/d5xLoXrmMd
THyux7oXxFo662Di0xfrXkjDOpj4HK690OnEpGwI6HOi8WBSCfHpafFgzJby
tzBv8qg+RsbC/UmHYv8FkrAfQ3yaYv8FpmM/hvisD+3sv4Ay9mOITynsv8B7
7McQn/2w/wJHsB9DfGph/wV+YD+G+FyJ/ReIw34M8emH/Rf4gP0Y4tMM+y9Q
hP0Y4nM19l9AEvsxxKcT9l9ACvsxxKcp9l9gMvZjiE/QmGTXt+N7QT3Plso5
CfcnPeT7uy69WyqralC4O3mQD7t8TGXi1ZMNTM7HOMLpSh6TCRTd03NtMEtp
UouxUatjNpILbn58XMJmTDwmX2sewa6fXzYyRruaae11LR95tIK9czK+6zYr
lrV8PDTuX3I5i2UCy8uPqlnhkEM+2X0S2d7NYhm7nhQzK4Ojq5P71LGCuFPS
n7sns9LBtktr/LPZ+LwMy683G9jCmln5JSYpbOCEFfJK/p9Yy+ktdZ8MG5jM
xS8Oq41SWMLZKucJG31AsjFYJc+6nm2KrWxL/5HMXsxIUzM4mQQ3uo08Wp1X
yz53m+RiWJnEDB/cTXYyz4GZEVJBR7dXM9dhg+QCIYGlnZLqVfKrGN6Nkuj2
YFQFO1/k+LxvSgzbVlDy9vLkCpBuODtVKSSTHVwZo/dfUCKL9lhvMc2+jt1c
ckh72tFCZjnxs1pDcxq7NmnsnMb0aqarZetyXqKU3fl7oqq/YTbTq/U6lLix
gsnYt1zLrC5nMmdV44PX5LPVSdX7VaeUsP7hl8w+SVWxZ4FfzyRKFrG9XydZ
9vqZw058PrLyrVkNu+9eP65/YDGTTE3VbGh0B93YpD3eOdXsjszcQQar2u2G
p3oXL0oA2ZWPdAJPV7Fjk5c8+a5WxLJPbwu9uzkb0nTkVVvUKthL9ReHn2bk
syHFm54tP1YMp0vrTLytSpmjbobzuVk59P3nCaeCZ4orZTJN1VgzpR15bKJl
5e8pi2rY7KjhqkXX8phV5IgvivuKmcORT04joitY38lPZiy5VMT8ElPifIaU
MakXztflP5WwyeXpd/csKmE6Totam+Ur2CGDjL7DZ+axqG1vLexTStl/qS+e
XpCuYk1+KfZ7nsVCm71JmExiCUuxkEjeXFvBFDeZ/5+6vjuux/f7v2yy6W2T
lfAmZCvH3mSPEhElCVnZlKw3EskoDeJjrygVdYq21dDee5dNVl+9zrmv1+N3
P37+6vG4H3f36zrnXGdc5zrnPFc4tUpCv/PLQm6Mz4aoGz09jBvmg8erc5bX
47PwVsNBh2y2ZUDdpeVrx57MAYN6m94H9MrHz5u7fzWJiwaHih5Ou/TzoOjW
5WavxhTCeO6/DpT1X7fIHq6/wi4GbaMvtCn0ewY7ef87XR/bJ3NsCi7cfz/m
bYuXEMP7/4mXl7G3RjbWnrv91xL9WNjP+3/EyS4NzlzJQ4si/XYLWiTAD97/
pmaXUjo5FmJgksaT2zrJYMj7/+KyIes6JRZjZc4en0fuqZDJ+z/nxJnuw7qX
YTvvSaqmrTPgd1fa/9GjZ37wal+GU7uenT9dLQMyeP9vG6zSKGtSKb70tD2R
rJUOl3j/f5re/pn/nWLUMTwSvm1zKtjy/p/cMCUr1qAQQxbpt9r3NQkSef+n
VQz89nVZHtaa792kNCweFvP+X8d93I+4j/sU58O1VbpF2tVLw9mxR0+YzfCB
CNaLoxeLtrz9Y29Gas983Hp7AOxjvdg9oJv2hv0FmP4/27SphcGwjfViLIzx
HZdcjCbJcL/uqRCYyHqR3XBgUFvrMlyd2r3X96thYMB68aTh/dNJsypxqo1J
cK3iCADWi+Z9s2rN2leBruq/1mePj4BerBdNzBd26RlXhovnq/cYVhkGWawX
dsahI60XlmBZRofxVz6FgDrrxYlAlbbjOhRi97oBy3asfAb9WS+0uL8bub97
Lvefmjp0ty0anYNdenRTexh0G7uxvnROXZOptbQABzteU9Vze4CXWV80HP7Z
ev2P3OODpo6/s/QRdmF96THfquvQ83/Od5f14qIP+6Ax68sEz8Jjd9pW4ov3
b0237vdFFX/Sl8gPD47csinHrjleUc/hMY5jfVlfOah6iHopQt6n/JyF3ujJ
+jJf/6NhfF4h2nbXmeoZ54VGrC9e3MddzH3cdtw/a0/6g422KPQJ81iPJLy/
7Yz394bxCIYz3l/TSYT394rxCPIYj68f4/F5Ml7ADw/C40tjPD4rxgu4xPh0
LoxPN5TxtgZz//U1Wf/10jqNrtdzPQNnE2IPtK69Aw5+yajU/l0J7h6dTR+2
L4RhvXas0MrKAItFFqGOAZnwuO2YovpHymBBw7Mx+vox8Dlg6uPWoxNhdY97
m3/8LIKGU0dMnu+VBddis25e+REPSc4tRvr8KocGpYMd6w6Khc3jq9ZWJEeC
ce+T+/f1KYH3s7f4vNiVDS/9nKuMhoTD3Pu/vTY4V4DJgoENOpyKhR6JeweE
fLgEyYMdl/s7l0BKVkqryLBsMHIxiijyPQ7qT+NPhy2pgDAH+yVZ5rHQJ6q6
WlU1GCtLTg7YP60EzJv+yut3Kht6H/0xT+/Wc+xF/htyyJ8r8VDU8ub9U3QJ
+g65N/NH+Tkx53/x4179DpZmQvOytQUHNuWC+73qz2fDcmGq/5wS1YRsGKt6
MNHrST5s2lMVv88hA2pbljuOHJILTbarRN4wK4TVahMaPvZ5C7bmZXH7GuZB
xd4dMbPXFkHcuo9m/9qHwNDZfm1iZ+TBqi1VCYufFoGp1rydKn678cTk+sum
/cqFPafOrN9oWATvWx4eMHpeGNZpdmB2kFc2qP5c0jHAIR80vy/67bIkE1tq
bCsxbZAP3+b07LynQxoY9TbWnnkhF53XFW5dvfsKxOsUbJrz5TqsXXPb+35l
JRTu7NPiskMmaI5PMeoxKhdGLdIZtFYjDy0j7rbr+8deDh5zWsu8YbGg15r0
TdI/4aemWE/qFqbmA/XrhftHfC8VfLhxSaGH0JP0UvivpQvcC/IDHkP0dZet
QV0rBH8GHjd4+bWZLwxWc9MoPloBtZfe/+9Lz1hoHHSkYmKIL9gHXfEIXF8p
+Pa25ObCJiW+8K1OTMsHbpXwZbl1gc6mQHjytN6g3W38oLFq9RKDpErBTxdZ
Hx9yHamNLj7p7+0LRRfHXD9nWCn47JOtsAsQRXZC+NPmOpM6D8ryhrG/zdru
fF4q+J+Zq7AXYEX2Q/jZr17PVk+buwNUDUf039vivuD/A6f6Yw63OggP7rmN
9UN/6PMsMME3thIcyI6jHtl1Eed4qTpv63EvFD989Q1PH1Mq9PEs2XdMJ3sP
K9jOnxo8wCF8czh+sNByCt5RDldYH8M04hLatInAIjeP67UnV8DW2Dfq61Oi
wf2lSfvn9hF47XXHjhbpFUp95L48de7Lu8x1ub22Vle1+RaBNm9+7n61ohLS
nUkfr+/qNvTl7QgcEHFcrW/tSqF3x8l/oBr5ExFfdcpU+A88QP5ExFfqz58d
q7Z5CDdU1xl3eVYk9md/sr+wmOyxiFuerdafMef1fjTSvJM/o8tVob+xFDfg
MoojYDnHD/VyFXEDOlEcAYUcP8RZw70mHdNQrfHvFhum/7FPbN+acT/dEO6n
y+J6ZvU7O14NOZ6O0b4nq2I8/8iF7dvmt4003TQzMNdlQfdxg8ugDtsxg1pb
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
FXRexUw6v4rnEk76PRlO+v8BJt6BcA==
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw1mwn8F9P3xufOneWjJGRLlkoIWctSlkS2CpW0IUqbtSgR1Y8I2UXZQoUi
S0RS9l0pZN+zR4jIvv2fd8/8X6/vfc3zOXPmznxn7j33nOec26TfkK6npkmS
HJ8nSdRxapYkX6itLeFXOv4m+dqS36PjRUWSvCb8nvDRahcKr11LkhB0Xhe/
Idlhav+T/D4dL5f+68L3Cl8svET4+jJJeun3COEJOo6W/CHhN4U7q52buL91
hPcXToXXFW4vPFPHGbr+FeG1dN81dO2duu9dkk+XfLHk60ue65oHJa8vXEc6
M4UbCEfJHxBeTzgTni28Ts33uE943UrnfuFJ6q+H+j1DfW4reWv1s1LydyXr
rTZO8iaSN5D+QsmXSPacrmkn3Ea6XfT7dOnsJXyE8DDhrXR+S7WzhV+T7Fnh
faW/pfrZgnclfIVkHXVuiHRe1/F5/d5P8n10/kj9Hi75FtJvwreQfGvhHYQ/
Eb5FukdJ50zpdNexreTnC/cTvknnLhfuJry35GOF+wh3FL5YuKvwnsLnCX8k
vEj6HdTnh8IvCx8ivI2OzdXGS+duye8UflX4Kh0P1e+hwg2FN1JbR/gByWYL
p7p2fz3nQPW/i8bUCMn+Vhsh+TTp3C/8gvT3ls4x0tlWOmdK9o/amdKZLJ1p
wk9K52bh24SfEh6m469qp0hnuI6/qZ0q3F79DFY/LdXPPsL3oi/cTri/5DsJ
36p+zhF+Rv2s1O8x0tlE+GfhVPLNhT8R/kxtf82FvXTt0ZI31+8DhU8RbiN8
i/o5W/hp6U8RvkT4WeHpjGXhhcJnqO/f1Ybo2a6X/DTJH5X8BsaF8GPCm6jP
dYWfks4GwoXG1UPC3+oe5+jaDaSzmeTr8cySfy/5X7p+o8RjuYHwbonH/nrC
uwv/IJ3/hDcWXiH8j3BD4c3VzwY8p/qZLdmD6j8KL5fOSOH1+Y7SWVM68yXf
SLimfh8RPkvn/1U7K1q2ka7vIP1SeEPhQxI/+/rCewj/qD5HSb+R8AzJzlOf
LwtvWPM1D6uf+yV/QDpB+GPhxcwB4RuZT/o9WPpf6/iGfneT/Bgd31fbSvho
Hd9jXgnfq3u9oraJvtcNwXNzL117oX5vqvM7C18kvJnwLsJH6bp3+e7RNgY7
sGti24MNaiV8tfS31vl2vH/J1ypsl/i/+f/3xNbp2FztRO6l/nbWuR7CpzBP
9fvOzO+G/7cNzyDZLvrdU/g/9b8x80XH56X3sVorbK9ar8zj82rpnqz7Psi3
wx4XtodXqr811LYXbiH5ppJ3FZ4n/JOu3VS4pfDWkvcSfll4zdzPPFPnF6k1
1H0eyT0HGP+Zfv+i4yq1JyT/XfIthQdIXof3JHy7ZC+pNZBsK+lso/47Sr4l
Y63weLhf519T21w6L+u6ByRfn2eVzubYROkcp//7Y7WddH4nyS8Q7p74/Y0r
/Q6P1fEjtR2l04zxXniMbSE8VvKDsWM6fqi2Azo6v6POHSl5U+EdhLvxbIXv
Qf9N9UxN1E4SPihj8MpG6tnas85Ib6REh0oeJR8o+QmS3yx8reSXY7P1e5Dw
+aWfg2e4kXmn1km4h57jM/XTTr9vV9tM7SjJT+JZJL9OeLDwZF1/jfBA+pD8
auHhwl2Ep2LfWBOFpwifLny48K3Cy4Rf17VH6D5fCS8R7iq8q555lXR66H4D
JD9I+CrpD2JeCk9gnEh3O7XrE3+bzdSO5v/VWD1fOp3Vx22p32Uf5qlkTelL
eEfhvYSPFz5V+htJ7y7pD2H9Up/3VPOvYe45uJP09xbuzzcV3kd4APaQNUv6
j0v3XuntrnudwjwS3kP4VOFZwq2j18Gh0m8m/VnSv1jH1urnON55ahvQWbiB
+m8s+QH4AMJNhA9M/ByN1A7F3qa2E4cL31TN6y7Cl6nPttIfKHxH6vFI/311
XKm+OvEdU4/BY1nv9LuO2t7CdbBpPJNwjTle2PbuVHrd2UHXHZX6yDvnG12J
vRMep+Oh2Aude1Ott/q/sxp7rB+sHb0k76m2bWq8Xer1d6GOXaR/Q+L+e6tt
r/ax2vGSz5W8lfo+TK2lZJ14B/wPkm+gY0e19dWm615nMx8k30W6nZiP1Xe9
gHch+T/8r6yBOvbX+eWV3/IGz6TjDOnsL1l7xiTPUfr7tkg9v1gjWR8X6Hfn
6PdwDeO5tK1bxlyU/HnGub71bpIv4bmE7xN+Q/jFyubsJt1fQ3WU/m/Cu+PA
Bs/rI6q5vUC6CzOfe7mydXsI/x585PuNUv9t1P+nOveW2tuZ/8+v1U6O9kk+
Eu4n/LBwG+HTarZr9Vg3Cs/5tUqfY54vruZA69TP/abaXsKvMh7xOdRPh+r9
N05sf/kuG1XtMLV9+KaZ/WZ85gXq/wZ8iGi//CC1+moHVph/f4r0v8zsw3eR
7tTc73NOaf9hrE68qeMUfAnpvaDjlWrfSf6SjtfhSwmfrv/hAHX4ma79vIoF
+H2bjsentv8Pl17TJ0j/odI+wxjhxaxNavtJ59XS9q3gfZT2P/+WzmulbWlN
8id5/ujx3Fey3XTtMcLHC++Re649hr+sdi7+idrM1P7A45KNxiZL9oH6+lBt
32qud67mO+vTITxz9V4Pr95tU8Zv6d/YlOs5X9nDLpVN7Fxh+sGuXSHcNvG5
rpXNfLr03J+uZ3hHOu/ib+rci5JdrbZC8id0/B/2Vvg9nX9fra105pb2OSdJ
/l+wrDN+E36ixlVv4c7YdbXjdO7g6n/Br96APqXTXzqtef81+w0/6fwZ6u8t
bL5wXeKexD7cZanXfXyeernn9ebCm5W2CYlkdVkvBXdTf92FN8NnzPyet8Ve
qY8GlR/1N+umdLbR4Xld+6R01tO5vyT/V7+bS76H+umBLZZsT+GjhLcSbinc
VXgj4Ut13BC/PTimvLV0XMkaylo4tbJj2Ipjdf9/M7/P7apxzvvpK/lKteGM
8cT+OrL91HbVvY7UPTbBrxI+Qnhj4T/V/sY3YozpOL/0+9oEX7X03Lwqtd+I
79dR156pa/fL7Nvi47Im4mvjc7PWXJnal9xXeA38w8I+cMNqbjP2Sq4t7Ksf
oj7PEN43s/+OH8/6xTx6prSfuoN0OklnTek8Lvmjkq8p+aPC80r7ZNtL50Dp
BOL1zPOlmfrZTvIDJP8XWyb9p/DthXeU/FDJ18rsJ55b2lfcWfLDJF9Hsj6p
3zd2j/WDMYg9eS7zGsP6cmi073J15cttm3stfit3nDlW+Dr197vwMuG3c8el
xKQ/sA4TCyWOnyel9hvx97bJvUbj1zXPPTfxIbfLvV6/g++Mv8i3jo5diVtv
1b2i2m+J/WpiUeYLNhv7/KqefarO52p/8I107arMa9+Z0mkp/af1e4rOZzx3
Yj6DuQyn0Sm3zRyTmFMYqz5bCL8vPCW1jz29MC/xb+LYZOPcduMjeAHhvsLN
pdsD/wMbLp2D1I7EN0l9bJba9xhb+QmP6JkeTr12HK3jManX3O5VP/AJV/E/
Sf/rxOt3n+rbPaprnxK+JLEf0avyH/g/8TnwN3iX2H/eJ2tnt9S+8fXq80+d
+yYx58EaNC6xD0I/+CT4DPgwPNP/+zr4Ib0rzFr/RGZ/BV+F2K1R7jmCfd06
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
ap6vKbyXGd71/wCGnYKN
         "]], Polygon3DBox[CompressedData["
1:eJwtnAf8VuMbxs95n7NIFG00NUhDQ8oKDaWUCqE9FQ1JRbJalL2zR8gme0dm
yZ7/EBGy98j6X9+u8/n0fHqu93nOec97zvPc93Vf931+jUZNGTC5EkXRYUkU
6V9UZFG0VO3sOIr2ED5e/U1q64UfF66bR9F/OuAGTa6m/68X/lVtrfr3avw0
za0If635q4Q7hii6X3Mba/wY4XPTKOpWRFF7fXaP8M2cT+1bja8RvkH9P9U+
E35KeFcdf6/mNhAeIjxK5/9K7T2d/07h2epHmv+l8DPqni4chL8RXi18X+Lv
b6LjW+iz6xNfe3Xh9Ryq+TeqLdZYJ+Fpur62ur5qmnO+8HEa+1PtE40/Jnys
+r+pfSR8n/BE9X9R+1B4ufCDOu4htWY6fzt9dk/i628oXF/4SM39Ue2D2L//
Rl3rJrUNGl8hfKq+v5O+v6GOuVb4Nv1/u1o9jW+pYxbq2ELzf1T/NY0vUz/W
/O81/qpwf56V2usav074Th17l9qOGq+hz87U2BY65if1X9f4Gfq+kbrHO3Ff
hJsEz99B8/sKD9P8GpofCd/M/VX/abVjNaezcL3g66ur8X2ER2j+l2rv6vx3
CB+i/qdqb3Dvha/TsW+pnVd+XzeNVRf+R+MnCp8k/J/aF8JPC9+lsZP0+24v
18/WGlumdoHGD+Cy1K+iOb8LNxDux7NSey32/Vug3zdTxz+t71smvFT/36RW
Q+f7TXiw5n6r9j/Nv0t4B53rmMJzttOcW/jtwt+p/wrrW+frLNw48f09Qsd+
r7ZWx98tfLbG99N428Tn+114S53jN41XE26g/iSNL9N4LZ3zdI13EW6S+P4c
pHNtqzn/8qyEqwhvJfyHcGvhQcLbsWeELxM+R8cfoOPbJf7+esJThO8Q3pf1
Kjxd+DHhRcJTWY96ZkHHX6Q2W+Pv6Hzv6lpu03gQXiG8kPUrHAtvp/nzhdty
v4Wf0vgC4d3YLzrfwxovdK7L1U7S+Nsaf0fjt2p8lsZf1nhNjd2kNlP4ReFt
1b9B7WTh94R3YL1wPcLvCG+v/u2cT/h14drq38IaEX5FuJb6N6tdrfvxpL7v
cn32M89P399c/Sv1/f2FP8u83mrpuAO4hszr92bN+ae8P68Lr9b8JcLPad7z
ah2Fx2j+JI2/ofGXha/QeDX191Dbq9zfkzX+pvAa4Ss1/gFrT7jQObpofK3w
q8IZ+4XfpP4najdo/lDNn8I60bVUNHYh5xO+QziOvca30fmf0fwLNH8/1r/w
jho/X7gr9knzHxTOWQ9qV+n7ntD8i/XZjxrfRv1OanuW9m+kjl8jvFL4bI3P
4PdqbnX2p9obOv5F1qs+ayP8tvArwn8Ltxc+T/gB4TOEP9fxv+n4x4Tn6HxN
hN/U+EusV4231fyLhR8UvlD4B41fIvyQ8KXCP7Gf1H9YbZaO31H4S51vufB4
4e2ENwrfJzwB+4X/0PH3C5+i4z8T/lXjjwqfrPHGwr8IPyI8W7iR8LXqr1J7
UngB/kzjj+vYKrq2K9WG636sxqZVvD9e1vmfx39ozs4ab6l+b7UjNX459k/H
f6mxZhp7UO1SzX9c46fpsw0an67xJ9XfimehdoLw08JVWatqpwl/LtxU/QfU
2ujYg9SGYGt0/Cka/0jjDfEPak01dqDaYRo/SeN3qL9R7Q7hY4VbqN9LbbDw
WfgPHf+Jjm+kY+9VmyP8gXAD7JPaCP3elzX/Gc1frPlrdP0vCH+nObtofHf1
p8levJF4zRwTvB86qP8c9oN1o8++Zu1o/jThc4W/FZ7J+uU6hDcKnyA8Xf2P
2Xv6/C2ev/AM9beO/PxPUf86ffYn1x7bvmBvZpfP8yT8jo6vqf97q+2i8Q91
jVeU+/vW4LVTX/3/uP/qn6/Pvsf26Hx12KvcQ31enfWm/2/U+F88S/aY+ifo
s6qR1+eD6j+s72te8T0fzXzhbSs+x+lqS3XM3/hObLTwPaU9PUvtJfXP1md7
aXw74UXq36fP0tgcY5ty/y4o7eti/X+/cBabc92JL9H1PqvPqnFOjS9XP+Fc
ajuW9g17sH9p7/6X2x5gH7YXfh//WtqHRzT3DPVbqb+Fju/CXtHzXa/f1E2f
18Y25O5P1vipcDsds4l7JfyErmeDxtfrs8bCLwr/IPyLcGvh3vAZ4ft13Cz4
mvon6PxP6Pwt9VknXc96fXaj+sM03lL4o9z2+RDhZzRvpVo74SPZEzrfOo2/
qfPXhYNq/qfCSzU+XPM7C38mfJPwCOGewl8J3yk8Cf8p/I3w3cJThJ/U+T4X
/lTna6LzPQW3gF/CeYT3h68I36b5EzS/e7m/HtA17cQ9Lu31cuFGwi/g74V/
1vGtsAHCH8NphOsJ99L3fy18F/dT53u2Yi65r8aeU9teY3vnXssNNf64/g8a
78S9VnsUMo7/gW/ShCvCu8O/1VZU7Mt3qXjP19e59lHro34bHfq8ruc7+J2u
Z1e+E34j/INwS+HdmK/ns0LnaKNjdtb1fqDPlqjfT8fXTWwrF3IvuCb1E322
h/pPqo0Kfl676fMHNeceHfsX/Fv4eeEv4BfCY4W3Zf+yltRfq/7ROn4evEBz
6lR8zbX0/bUK7wH45L5w18zfNVd4P/VXZba1M4UvyG2v5uocpwrX1PE1C+8x
4pUawjUK7xn4/N7448z39gzh1hpvovHXND5IuKHwDtwP4e7Ce+KvM9/r09nD
Gt+28B7fXbiq8OTCvwE+1F54Z+GvNH60cBvhpthP4UOFu+IPM9v6GcKX5fav
83X8POFecE98Lv4/8v6uV9hHsT8aYC8K+5CBwk2Fmwn/T/gI4aty84tFOt9F
wvU1vn1hHzSA/SjcuDBnGil8oL7rfWw+tk94SW5/vUDHz8c+597f9+nZnMD9
0PEtCvuU44S7YH+DfdRU4VbCOxXmaKOEz8vtP8/Q+U4p9/vqYA7Ifm0hPFXz
79b4wcKNhRsIr9R4T2y48EWZbXc97Lnw4RrbLvH9mZ2bf4yAPwufnJtfjBLe
XvjE3PxgOD5D+B8df2Fm31RX+C/hCzL7rjrY8Nz29hLsO/xA4+10Pdsmvj/1
NPfuzNy2N/xP/Vszc7VuPC/1783MJbjfddS/KzMX64V/y813RhNTCTfS+evr
/M/oN/XgeoVn8LwS88+/9H9e2Mdyvd8KB+EFwlsI/635SzLb5ubsr9z8Ywz2
ivWiseWZucfAkg9tEUofho/NzZePxj4Lb9L/aWGfzf2Yk5s/jsfGCEf8tsy+
bufI8cCxhX0y/GoL4aqFfSrjhfBWhX1IC+Gc+Kewj+d6/xW+IrPvZXwn4YaF
Y4LBwhOFOwjX0/kvEb46N59eLHyx8KX6f1e1Q2LH5Ftpfl3Nf1TH76nxKsJb
E18Jd2G/aW5rtQGxNYwl2FK1w2PHmLU1v07hGIbndabwu9h8rYdHhK/A9qkN
jq0xXKn+XmpHxdY4rlJ/H7UhsTWHq9XfT22o+t+qXaN+D7WRsWP2a9U/UG1U
7Bj8cmyp2kD1P4UvwotLrrS//t9AnKm2jfo9sKnwo8IxHOsvES6Er4Kfs3+Y
K3wb9p/9AVfRcR9yb3X+2XAf4Q+EJwj/gN/VMZPg/nAijR9T2Rzybub3c4Qn
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
0O2wRdikdzQ+I9gWYBPgL/AYbBk27T2Nz9L4nbnrQeDk+BdyO9TIoAejC5M7
owYIPRpdulbmfD15CfIRrTPrK+jY6NedM+fL0IipN2mUud4CXR89v0nm+gh0
bvTtGpk1CLQH8gGHC+9ReJ+xv4YI71U4jiB+OApuVXif9S3tPfaf2hdqkJvk
rn+Ft8PXyZVRU0T+hDwK8SY1ScTPnYJrfYjn4MvwZuJnaozQUzqX8T41Qrvp
+D+DawWo0SK/QJ6BXBU1Rujt6O7Ev9QsEY/vERwfU7NGPN4mODdHzRD5DvIe
xMfUSIzQeNvg+JiaHOLn1sG1R+hj8HV4O9r82blzb2j06GfEn3AB5lDffaeO
/1j42Nj127NYD7FjrnXCX6XORWKzNgh/K7w0coz2hfCPqWu3qeH+DnuYuZaZ
GumN6v+UuvaeGvxF/BZsSuwcMtovGvAx+A5d30ca35g614kGg23Fxu6v/uBg
LgInob4f7gE3/Ub4xsg2FHs2IXOtPJwdrRfNl3x698T+7cTM7wrAqfGHszLn
hjeU/nZ+5ncL2KPslXmZc4XsGbRZNNqx6h+U2PYsyFzrjQ2ao/6Fup6N8Be1
n4V/Tl3rj337QXh85tprasDhZnA0tAC4Enoo+ihrkZp66jmb5dYa0BCIbSZn
rq0nxkGrR7Pn/YF9gvnEXTrfr7Fz4jvmrneHb1HDTq36oNx9atapL6OGHS2b
mkXqw6g5R/umhpJ6SN7hQPtHI0b/pz4dW8c7EdjO7bHRkW0o9c4HCE+MrNlu
zXoW7hOZD1JfvDucJ7LmTr0sNYBwT2rUqFVvlZt7Eq/z26j3h7/xG6lNn5B7
LnVtv+pcv6R+t4J3LHbJXQ9P/EOOn3pXctTEPmg+1KIcnvu3UZNCLoKcBGv/
8MS57PG5jyWnTS19w9zaPXyR2PAUfecDkWPEv9WfkTk3Ts7httTrAe5GDQVa
36rUuV80P+qXamfOXZKPR5/fJnP9LzVYvE+DHojeS80oWtrq1L4UTY33T9Bz
0GOoSUU/PDJ3/8ZS7zkidz0mNTXk29GTmkf+DL22embfTY3YNeo/m9o3z4+t
3W6X2bai4VK/hL5LbRDXyPs47C+4AnuI91nOT/3uBTUyvO9yQWo9mhqYPzKv
V7Saj2O/f8D6x7ez525Nvd/gttSYoHdWzVxvTU0b72+Qv6BWis9uYS+m5hrn
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
         "]], 
        Polygon3DBox[CompressedData["
1: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
Z7SM/3TazrG/p7v5vbX9D2FU55I=
         "]], 
        Polygon3DBox[{{1366, 1494, 837, 1011, 1940, 1365}, {1350, 1487, 831, 
         1205, 1964, 1349}, {1945, 1370, 1369, 1944, 1015, 1016}, {1935, 1356,
          1355, 1934, 1003, 1004}, {1368, 1495, 838, 1012, 1941, 1367}, {1937,
          1358, 1357, 1936, 1005, 1006}, {1943, 1368, 1367, 1942, 1013, 
         1014}, {1364, 1493, 836, 1010, 1939, 1363}, {1951, 1372, 1371, 1950, 
         1033, 1034}}]}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0r1LVXEYwPHnqvmu+RcoLm45NdYS0WJTo6JDSJSWF4t8wVbLIVAckkRE
qHRKHIxsTN1s8t3KN0JBN1+ulVb4OQn38P0859xzz4/fPZV303daUhEx5CjK
ikicpz90NyeiTJ85ecQV/Dz5wqWIaunj6zqRGzHIt/kTv+U6nuZxbuI5nuKb
7u1MrnED9/AXbuYBXuYOHuVf7tkyf+BUXsQ+z/JL59NcYp0L5gI9Nh/oovlQ
l/RIl/VYVzSjq3qia/pTvybP0d+Ob3yq3/VM1/WPbuhf3dR/uqX19qPVM0vN
2+ZCzZjHrX0+eTaP8AzvcT9PJs+09k3zu2R/eYlf8TrP8Qte5M9c754O80e+
wQ/4PV/lWn7DVVzDr/majrm3l6/wMHdzebJ/nNFi67ys+drlWruWmtu0RJ9q
sT7RIm3VQk1rgT7Sh458blZ/SzSpn4/7Wf9fjbinticaNVt3DLfYJxr4ceri
XTsHZA9XwA==
       "]]}, {}, {}, {
      Line3DBox[{612, 769, 1969, 613, 778, 1977, 635, 787, 645, 2008, 796, 
       655, 2009, 805, 665, 2012, 814, 675, 2018, 823, 685, 2026, 832, 1987, 
       695, 841, 1995, 705, 850, 2001, 715, 2034, 859, 725, 2035, 868, 735, 
       2038, 877, 745, 2044, 886, 755}], 
      Line3DBox[{614, 770, 1970, 615, 779, 1978, 636, 788, 1983, 646, 797, 
       656, 2010, 806, 666, 2013, 815, 676, 2019, 824, 686, 2027, 833, 1988, 
       696, 842, 1996, 706, 851, 2002, 716, 860, 2005, 726, 2036, 869, 736, 
       2039, 878, 746, 2045, 887, 756}], 
      Line3DBox[{616, 771, 1971, 617, 780, 1979, 637, 789, 1984, 647, 798, 
       1986, 657, 807, 667, 2014, 816, 677, 2020, 825, 687, 2028, 834, 1989, 
       697, 843, 1997, 707, 852, 2003, 717, 861, 2006, 727, 870, 2007, 737, 
       2040, 879, 747, 2046, 888, 757}], 
      Line3DBox[{618, 893, 894, 1972, 1119, 895, 896, 1980, 1124, 923, 2056, 
       924, 1129, 939, 2064, 940, 1134, 955, 2074, 956, 1139, 971, 972, 1144, 
       2137, 987, 988, 1149, 2140, 1003, 1004, 1990, 1154, 1019, 1020, 1998, 
       1159, 1035, 2094, 1036, 1164, 1051, 2101, 1052, 1169, 1067, 2111, 1068,
        1174, 1083, 2119, 1084, 1179, 2151, 1099, 1100, 758}], 
      Line3DBox[{619, 897, 898, 1973, 1120, 899, 2050, 900, 1125, 925, 2057, 
       926, 1130, 941, 2065, 942, 1135, 957, 2075, 958, 1140, 973, 2082, 974, 
       1145, 989, 990, 1150, 2141, 1005, 1006, 1991, 1155, 1021, 2091, 1022, 
       1160, 1037, 2095, 1038, 1165, 1053, 2102, 1054, 1170, 1069, 2112, 1070,
        1175, 1085, 2120, 1086, 1180, 1101, 1102, 759}], 
      Line3DBox[{620, 901, 2052, 903, 1121, 904, 2054, 906, 1126, 927, 2059, 
       929, 1131, 943, 2067, 945, 1136, 959, 2077, 961, 1141, 975, 2084, 977, 
       1146, 991, 2088, 993, 1151, 1007, 2090, 1009, 1156, 1023, 2093, 1025, 
       1161, 1039, 2097, 1041, 1166, 1055, 2104, 1057, 1171, 1071, 2114, 1073,
        1176, 1087, 2122, 1089, 1181, 1103, 2126, 1105, 760}], 
      Line3DBox[{623, 907, 773, 2128, 624, 908, 2055, 782, 639, 930, 2060, 
       791, 649, 946, 2068, 800, 659, 962, 2078, 809, 669, 978, 2085, 818, 
       679, 2021, 994, 827, 689, 2030, 1010, 836, 2144, 699, 1026, 845, 709, 
       1042, 2098, 854, 719, 1058, 2105, 863, 729, 1074, 2115, 872, 739, 1090,
        2123, 881, 749, 2047, 1106, 890, 762}], 
      Line3DBox[{625, 909, 774, 2129, 626, 910, 783, 2131, 640, 931, 2061, 
       792, 650, 947, 2069, 801, 660, 963, 2079, 810, 670, 2015, 979, 819, 
       680, 2022, 995, 828, 690, 2031, 1011, 837, 2145, 700, 1027, 846, 2147, 
       710, 1043, 855, 720, 1059, 2106, 864, 730, 1075, 2116, 873, 740, 2041, 
       1091, 882, 750, 2048, 1107, 891, 763}], 
      Line3DBox[{627, 911, 775, 2130, 628, 912, 784, 2132, 641, 932, 793, 
       2133, 651, 948, 2070, 802, 661, 2011, 964, 811, 671, 2016, 980, 820, 
       681, 2023, 996, 829, 691, 2032, 1012, 838, 2146, 701, 1028, 847, 2148, 
       711, 1044, 856, 2149, 721, 1060, 865, 731, 2037, 1076, 874, 741, 2042, 
       1092, 883, 751, 2049, 1108, 892, 764}], 
      Line3DBox[{629, 913, 914, 1974, 1122, 915, 916, 1981, 1127, 933, 934, 
       1985, 1132, 949, 2071, 950, 1137, 2134, 965, 966, 1142, 2135, 981, 982,
        1147, 2138, 997, 998, 1152, 2142, 1013, 1014, 1992, 1157, 1029, 1030, 
       1999, 1162, 1045, 1046, 2004, 1167, 1061, 2107, 1062, 1172, 1077, 1078,
        1177, 2150, 1093, 1094, 1182, 2152, 1109, 1110, 765}], 
      Line3DBox[{630, 917, 918, 1975, 1123, 919, 920, 1982, 1128, 935, 2062, 
       936, 1133, 951, 2072, 952, 1138, 967, 2080, 968, 1143, 2136, 983, 984, 
       1148, 2139, 999, 1000, 1153, 2143, 1015, 1016, 1993, 1158, 1031, 1032, 
       2000, 1163, 1047, 2099, 1048, 1168, 1063, 2108, 1064, 1173, 1079, 2117,
        1080, 1178, 1095, 1096, 1183, 2153, 1111, 1112, 766}], 
      Line3DBox[{631, 921, 922, 1976, 632, 937, 2063, 938, 642, 953, 2073, 
       954, 652, 969, 2081, 970, 662, 985, 2086, 986, 672, 1001, 2089, 1002, 
       682, 2024, 1017, 1018, 692, 2033, 1033, 1034, 1994, 702, 1049, 2100, 
       1050, 712, 1065, 2109, 1066, 722, 1081, 2118, 1082, 732, 1097, 2124, 
       1098, 742, 1113, 2127, 1114, 752, 1115, 1116, 1117}], 
      Line3DBox[CompressedData["
1:eJwV0DkvRAEYheHPUkyrnU60Wu20WtFNI3JLE8RWGDq1Wk0IMSHEFkJGiH3f
1xFbovYLeG7x5nznvLm5M7c+6W7tqoqIdvxWR/TXRLzXRnxiOBPxIX/sBfu+
ew9vGOQqssIl3K57B0P2V/mCGy7Pbbtz9rJ8xhOOuBZuwL6lb+IRDyhzzVwf
t6Gv4x53WOE67Dl+TV/FbfouFO0lvolb1pdwjV77lRznGrlF9wIu0cNdyDGu
gZt3z+EcZxi1Z+0l9yxOcYIRe5290/Mz+jSO0/+VfhsuwxW4KX0ShzhAwv1h
Iv09+MYX2vAPtwRBRQ==
       "]], 
      Line3DBox[{754, 885, 1247, 2043, 744, 876, 2168, 1220, 734, 867, 2167, 
       1217, 724, 858, 2166, 1214, 714, 849, 2164, 1211, 704, 2175, 840, 1208,
        694, 2174, 831, 1205, 2025, 684, 822, 1202, 2017, 674, 813, 2160, 
       1199, 664, 804, 2159, 1196, 654, 795, 2158, 1193, 644, 786, 2156, 1190,
        634, 777, 1187, 611, 2173, 768, 1184, 1253}], 
      Line3DBox[{761, 889, 2125, 1104, 748, 880, 2121, 1088, 738, 871, 2113, 
       1072, 728, 862, 2103, 1056, 718, 853, 2096, 1040, 708, 844, 2092, 1024,
        698, 835, 1008, 2029, 688, 826, 2087, 992, 678, 817, 2083, 976, 668, 
       808, 2076, 960, 658, 799, 2066, 944, 648, 790, 2058, 928, 638, 781, 
       2053, 905, 622, 772, 2051, 902, 621}]}, {
      Line3DBox[{1254, 1527, 1802, 1818, 767, 1817, 1816, 1852, 2173, 1455, 
       1255, 1969, 1456, 1256, 1970, 1457, 1257, 1971, 1458, 1258, 1913, 1972,
        1678, 1459, 1259, 1915, 1973, 1679, 1460, 1260, 2052, 1529, 1680, 
       1875, 2051, 1261, 1531, 1681, 2128, 1461, 1262, 1533, 1682, 2129, 1462,
        1263, 1535, 1683, 2130, 1463, 1264, 1916, 1974, 1684, 1464, 1265, 
       1918, 1975, 1685, 1465, 1266, 1920, 1976, 1466, 1537}], 
      Line3DBox[{1267, 1538, 1803, 1821, 1876, 2155, 1820, 1819, 1853, 777, 
       1268, 1977, 1467, 1269, 1978, 1468, 1270, 1979, 1469, 1271, 1914, 1980,
        1686, 1470, 1272, 2050, 1528, 1687, 1471, 1273, 2054, 1530, 1688, 
       1877, 2053, 1274, 1532, 1689, 1878, 2055, 1275, 1534, 1690, 2131, 1472,
        1276, 1536, 1691, 2132, 1473, 1277, 1917, 1981, 1692, 1474, 1278, 
       1919, 1982, 1693, 1475, 1279, 2063, 1546, 1476, 1694}], 
      Line3DBox[{1280, 1547, 1804, 1824, 1825, 2157, 1823, 1822, 1854, 1879, 
       2156, 1281, 787, 1282, 1983, 1477, 1283, 1984, 1478, 1284, 2056, 1539, 
       1695, 1479, 1285, 2057, 1540, 1696, 1480, 1286, 2059, 1541, 1697, 1880,
        2058, 1287, 1542, 1698, 1881, 2060, 1288, 1543, 1699, 1882, 2061, 
       1289, 1544, 1700, 2133, 1481, 1290, 1921, 1985, 1701, 1482, 1291, 2062,
        1545, 1702, 1483, 1292, 2073, 1548, 1484, 1703}], 
      Line3DBox[{400, 266, 1194, 537, 536, 2158, 1293, 1883, 2008, 1294, 797, 
       1295, 1986, 1485, 1296, 2064, 257, 1297, 2065, 258, 1298, 2067, 259, 
       2066, 1299, 260, 2068, 1300, 261, 2069, 1301, 262, 2070, 1302, 2071, 
       263, 1303, 2072, 264, 1304, 2081, 275, 409}], 
      Line3DBox[{1318, 1577, 1576, 2086, 1317, 1562, 1711, 1561, 2080, 1316, 
       1560, 1710, 2134, 1923, 1315, 1922, 2011, 1709, 1559, 1314, 2079, 1558,
        1708, 1557, 1313, 2078, 1556, 1707, 1555, 1312, 2076, 1554, 1706, 
       1553, 2077, 1311, 1552, 1705, 1551, 2075, 1310, 1550, 1704, 1549, 2074,
        1309, 807, 1308, 2010, 1885, 1307, 2009, 1884, 1306, 2159, 1827, 1855,
        1826, 1856, 1305, 1230, 1564, 1805, 1563, 1712}], 
      Line3DBox[{1332, 1589, 1588, 2089, 1331, 1575, 1720, 2136, 1927, 1330, 
       1574, 1719, 2135, 1926, 1329, 1925, 2016, 1718, 1573, 1328, 1924, 2015,
        1717, 1572, 1327, 2085, 1571, 1716, 1570, 1326, 2083, 1569, 1715, 
       1568, 2084, 1325, 1567, 1714, 1566, 2082, 1324, 1565, 1713, 971, 1323, 
       2014, 1888, 1322, 2013, 1887, 1321, 2012, 1886, 1320, 2160, 1828, 1857,
        593, 1319, 2161, 570, 1806, 1578, 1721}], 
      Line3DBox[{1346, 1602, 2024, 1946, 1345, 1587, 1729, 2139, 1933, 1344, 
       1586, 1728, 2138, 1932, 1343, 1931, 2023, 1727, 1585, 1342, 1930, 2022,
        1726, 1584, 1341, 1929, 2021, 1725, 1583, 1340, 2087, 1582, 1724, 
       1581, 2088, 1339, 1580, 1723, 989, 1338, 1579, 1722, 2137, 1928, 1337, 
       2020, 1891, 1336, 2019, 1890, 1335, 2018, 1889, 1334, 1963, 2017, 1858,
        1860, 1859, 1333, 2162, 1846, 1847, 1807, 1590, 1730}], 
      Line3DBox[{1348, 1604, 1809, 1831, 2154, 1486, 1830, 1829, 1864, 2174, 
       1487, 1350, 1987, 1488, 1352, 1988, 1489, 1354, 1989, 1490, 1356, 1935,
        1990, 1740, 1491, 1358, 1937, 1991, 1741, 1492, 1360, 2090, 1593, 
       1742, 835, 1362, 1595, 1743, 2144, 1493, 1364, 1597, 1744, 2145, 1494, 
       1366, 1599, 1745, 2146, 1495, 1368, 1943, 1992, 1746, 1496, 1370, 1945,
        1993, 1747, 1497, 1372, 1951, 1994, 1498, 1748}], 
      Line3DBox[{1373, 1610, 2033, 1950, 1371, 1601, 1738, 2143, 1944, 1369, 
       1600, 1737, 2142, 1942, 1367, 1941, 2032, 1736, 1598, 1365, 1940, 2031,
        1735, 1596, 1363, 1939, 2030, 1734, 1594, 1361, 1938, 2029, 1733, 
       1007, 1359, 1592, 1732, 2141, 1936, 1357, 1591, 1731, 2140, 1934, 1355,
        2028, 1894, 1353, 2027, 1893, 1351, 2026, 1892, 1349, 1964, 2025, 
       1861, 1863, 1862, 1347, 1966, 2170, 1848, 1808, 1603, 1739}], 
      Line3DBox[{1374, 1611, 1810, 1834, 1895, 2163, 1833, 1832, 1865, 2175, 
       1499, 1375, 1995, 1500, 1376, 1996, 1501, 1377, 1997, 1502, 1378, 1947,
        1998, 1749, 1503, 1379, 2091, 1605, 1750, 1504, 1380, 2093, 1606, 
       1751, 1896, 2092, 1381, 1607, 1752, 845, 1382, 1608, 1753, 2147, 1505, 
       1383, 1609, 1754, 2148, 1506, 1384, 1948, 1999, 1755, 1507, 1385, 1949,
        2000, 1756, 1508, 1386, 2100, 1619, 1509, 1757}], 
      Line3DBox[{1387, 1620, 1811, 1837, 1838, 2165, 1836, 1835, 1866, 1897, 
       2164, 1388, 2001, 1510, 1389, 2002, 1511, 1390, 2003, 1512, 1391, 2094,
        1612, 1758, 1513, 1392, 2095, 1613, 1759, 1514, 1393, 2097, 1614, 
       1760, 1898, 2096, 1394, 1615, 1761, 1899, 2098, 1395, 1616, 1762, 855, 
       1396, 1617, 1763, 2149, 1515, 1397, 1952, 2004, 1764, 1516, 1398, 2099,
        1618, 1765, 1517, 1399, 2109, 1629, 1518, 1766}], 
      Line3DBox[{1400, 1630, 1812, 1841, 2110, 1965, 1840, 1839, 1867, 1900, 
       2166, 1401, 1901, 2034, 1402, 2005, 1519, 1403, 2006, 1520, 1404, 2101,
        1621, 1767, 1521, 1405, 2102, 1622, 1769, 1522, 1406, 2104, 1623, 
       1771, 1902, 2103, 1407, 1624, 1773, 1903, 2105, 1408, 1625, 1775, 1904,
        2106, 1409, 1626, 1777, 865, 1410, 2107, 1627, 1779, 1523, 1411, 2108,
        1628, 1781, 1524, 1412, 2118, 1645, 1525, 1783}], 
      Line3DBox[{1426, 1661, 1660, 2124, 1425, 1644, 1782, 1643, 2117, 1424, 
       1642, 1780, 1077, 1423, 1953, 2037, 1778, 1641, 1422, 2116, 1640, 1776,
        1639, 1421, 2115, 1638, 1774, 1637, 1420, 2113, 1636, 1772, 1635, 
       2114, 1419, 1634, 1770, 1633, 2112, 1418, 1632, 1768, 1631, 2111, 1417,
        1526, 2007, 1416, 2036, 1906, 1415, 2035, 1905, 1414, 2167, 1843, 
       1868, 1842, 1869, 1413, 1967, 2171, 1647, 1813, 1646, 1784}], 
      Line3DBox[{1440, 1674, 1673, 2127, 1439, 1659, 1792, 1095, 1438, 1658, 
       1791, 2150, 1956, 1437, 1955, 2042, 1790, 1657, 1436, 1954, 2041, 1789,
        1656, 1435, 2123, 1655, 1788, 1654, 1434, 2121, 1653, 1787, 1652, 
       2122, 1433, 1651, 1786, 1650, 2120, 1432, 1649, 1785, 1648, 2119, 1431,
        2040, 1909, 1430, 2039, 1908, 1429, 2038, 1907, 1428, 2168, 1845, 
       1870, 1844, 1871, 1427, 2169, 1849, 1663, 1814, 1662, 1793}], 
      Line3DBox[{1454, 1677, 1115, 1453, 1672, 1801, 2153, 1962, 1452, 1671, 
       1800, 2152, 1961, 1451, 1960, 2049, 1799, 1670, 1450, 1959, 2048, 1798,
        1669, 1449, 1958, 2047, 1797, 1668, 1448, 2125, 1667, 1796, 1666, 
       2126, 1447, 1665, 1795, 1101, 1446, 1664, 1794, 2151, 1957, 1445, 2046,
        1912, 1444, 2045, 1911, 1443, 2044, 1910, 1442, 1968, 2043, 1872, 
       1874, 1873, 1441, 2172, 1850, 1851, 1815, 1675, 1676}]}}},
   VertexNormals->CompressedData["
1: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
Pkmli86jZvjMeA4+OTSv6VoYvh7o/mzdzSaezw22D85JZISg9tXV8mtcG3g+
tyU8v7NxRxBquIfU9Guu5bqx90qXsC2WAdilv3ziiJJqUGQ8v/vPVFzJ+w6G
PrZvXrDPifNcPFDmZG9bX4x+GTZYa2UUfBJ044lq5pv1kSh5wWTx/9YFgeel
AR/CFhcm4K3G+Y77Kgo4z2Pcqwar6KZhwKDblv/TNyGfYy1XFtzzz8T8vBVX
9M5X8nye5CoiMsE8B50/fssw6JinQj6fXKe0w8EtD7UCLu+qdayDjYzn8psT
F1sOKMAFaz28/pdvZYxn6dGPr9wOKcClsqdGj4pvgGDG84Vnq0P6PCzAtJLT
ff7Hm6DP6a2/tBs883H9tAFTNf3rQZLxrP9zXlBU9zz0UDpglvqjFr4ynleZ
eGbbu2Sj9gyfjGPm1Vw3DFxMphrlZeL+Wb1bX7hUcp7rSs2sKozssZqOXJ/x
U47hvlVvMJaOPJ9rxxv4hlQkYTkdOc/n1u+L/1OehSZ05DyfgBRFzVkf8Agd
Oc/oYnt7dnEJvqYjIOP5anH12IiJ5WhJR9jPeBZpUb/tWV2Bvz52Hnk+d3e+
FbarbxX+ceo8Qg3jOTK0x4ULD6rwDR0hlPEs/zpPYfqZKpxAR0hkPH9QvbBm
7ptKzKUj9xt9+9xXaN1VgeJ0hEbG8++PV9PmGZXhTzryfB6aPctIrb0EB9GR
63M45TEGUV7zfEbKY2yivIaPjOe+lMcoQXnNeb5LeYwLKK+5rwukPEZZymvO
cyHlMUZQXkM449mF8hhHUl5zv7GM8hj3UV7DOsazBuUxZlFeQwXjeTnlMfal
vOb5nEV5jAaU1xDPeN5AeYzRlNfQm/HsTXmMeyiveT4vpzxGTcprns8HKI9x
N+U193UapMtoRDrN87mWdBl7xXbqNM/nMNJlHEY6zXlmuow/H3XqNM9npsv4
LbNTpznPa0mXUYF0GsIYz4dJl9GadJrr8xTSZVxPOs39hgnpMqqRTkMV47mE
dBntSaehhPGcQLqMD0in4SvjOYJ0GU1Ip7k+LyVdxmek09DEeNYkXcYI0mme
zyKky6hCOs3zWYJ8Bh4j34ECz6bkM9COfAcK+jyRfAZOJd+BAs93yGfgLfId
KPA8gnwGjiXfgccZz3vIZ+Aq8h0o1Cma5DPwMfkOFHhmPgPXku9AwW8wn4Ei
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
Tm4qf9+rXGKXkcdK/c8eLALry4XbdeeUgTfbxZre9wDS+x/JXJD+rvSGt+39
YNSVKUcit1eCGT+XxTwD+/PT/CEyVau4x0yR5LmO/soYrFUcAJOddEe/NquF
EH6uQRtH+2xPDYQJI/5GaZ6rgwR+Lrn1N75Naq0Te2up3VufXgfh/FyuHhn+
n64Fwoublv0GG9RBswU91/2l7hf8tgXA8uFBv/6G1sAefq6lB5vTol3fwKVD
i3f221oNPvxcSpF3Uram7QZf3bedRls+ACszWfF75w5x0w+b1LzD6Cmnjx9W
qIRZ7Ieiy5m+ZtrRuCFI5tb3vGpwZz/UzO60IS3mA3Yv2LL9YWkNeLAfrjXu
Z3YyKAY3Gm0eqaXS+r3sh4d2zbiq9zMGj1Yvr9qypg6usx/KT/bp1uloDFrv
7pSq+aEWLrAfWuz86vvK9APmLW64XTW/RuKHA5PiNqkejcI+pytWf2tbDZXs
h1myhb810B57rT48Y7TiA7B4QfOow5b46k/ploU2r84rzTn7BZazvbaodl7+
JyYHw1NnlW35rxJabMle3471i48PyUPHL1s79CqugjC21/cpKse6FOTjtnUd
1j+tr4YQtteh/gXOBoMLUOW079j+40Sgw/byXnF11MCr+fhX1mSV9bNqiR/u
OHTNsadOHh47+S/+YSse7GR7XYk2NXr7Mxv/rdVo9J1TIbGXxtSAxpXgilcX
jI53rr8Hp9+QvTayvrOFlL7zbdZ3vsb6zjmCXjnrOx9jfee2zCeLWN85k/Wd
tZlPLmZ95zlS+s5xrPuAUvrO+qzvPJz1nYV+4DLWd57L+s6CHn0t1S1YKlW/
HCQ7YU+ym8ReH8hOOJfsBu04vlzJTphBdpPE1x6yE2aR3ST2UiM7oSXZDUaw
vTrIie2EjmQ3CZ6fJDvhMrIbWLO9ZNeJ7YTHyW7wgO3Viea00J/mtuA2z2tx
XGFSrDjOJDi/ieIKwynO4AbHVy+KK6zLEseZJL62UFzhQIozkOH4sqe4QkOK
M7jJ8WVDcYUpk8RxBuc5vvIprrAfxRnM5vgaQHGFVYniOINSjq8omufD/TTf
J5nrYxzEq4SLuITtFUE4iPGEiyjYy4BwEKsJF1Gwlz7hILoTLqKA82qEg3iI
cBFD2F7PCAexwx0xLuI/xsNlhIMos0yMiyjYi3EQXxMuooDzE2nuEwfFiudA
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
igEFaD1uXJsAXRF4TZ2YYtxaHz3k93d/+P1dLz4fIZ8+lNozr8e67cOkdNu/
sm77Fynd9lGs264ppdvel3Xbu0jptrdtR7rtjVK67VdYt/2clG67Nuu295fS
bY/l93dhUrrtq1i3fRHrtquyLrCDWcEnrfAsnGml+1I9Jwpnsb9NFCVc/eOR
hpFXnsxUPJWMgr8Z7b9zfn5+DobaR8mkvc/AfexvwnuEMfweoR+fp2//0xkP
PD/h4qP+79r7ZaDgb17jPNWumrTy7kVd5FafzUdb9rfaES2ecpsyceOzZqNe
+UUo+JtV25qN5uFF+Pte/9hOrlX4nP1N6M8v4f68N/vb5FEzfl2rf4NTfz5p
UHiTjIK/hf3BQ0PSw3G3Zfc2FxRycMzvDbc7tNpr87F9alOKoxAdDYeXVhVi
5qb4SOVWe2lm/QmYGBeLPQxnv11hW4ozz11asvdtOYw/4VcfZpeCCd0dR5Xa
1uJl9rdg3a+P5jml4ILGqn2VV2sR2d/UuN++j/vt3fl8/NtZtDeM+wJlBSk6
hlsK4LX1s+U7zhdK+g/OUjq/ebw/aj3vj9Lhe4v/lq6f3jG2Eu4tetM4dGoR
DI25FqK4IPF/9ibd5XujQl9ihJSu7pJD6rWPzD/D+dlXo+4plcDJ7pYeHmtK
YdyKdTJv1hRByZZ1U02GlMG66wXqZy638udLav7rn5TAlJ9fdU7+LYe0jYme
+9cn/s/eITu+/3vpmWZsx1GlsKL35DY1rXVdN4deay0g6H/6GNe5j7E08Pia
nrlF0Pw7oP/1T2VwcqDh7dWmBTgqJDtJzqQMjPcZ6Uc550GA8q4JllolOGua
KHhuUQq4dT4Ts6D1XLeP35+r28qjz2m7H4tuSANdeeeue2ZXQhb+kZnkWgiV
TfZX+oRlQtjGPRW1j0TQ8Zr7kXnbEmGT1F4g4d63xvwCmWlrsiDJY9++fdtr
YOi19D5q04PA4dlk35n7s0B1z2JHw7M1YJF1Kiah1T+LWS8pUkov6VZy0mSR
YiaoWB3QUEythvW3k0bu/T++EdjhltuldJhpO9a5Qa4K6iucMn8uLcDJdrG3
KyYWQh8Fs0UjkkpgS7DuQGXdEsy74NzfVeU1BE9/Fnf5YgWcYnvV5xonDNj8
BjbWRv35YlgNa9hem2I6eA62DoQpSq47p32uhWy2l/Q+H3u21/ChV465dgyC
vTHLXt58WQc92F7S9xresL2cfG54wxJ/GBzcrVBeQSSxl+js6e633FMhaqyl
5rVW/vhgyLMtv0aW4Fi7rgpD9kVh6C2HaJf8KnjF/l/wp7d+T40YHIlzbdCq
FrTYn99L7ckR9oBJ3xcQ9ng3Gub55Br7wZvFs16eP1IJW/nc5KXm6rtwfE3h
vTHqvDdmKe8PWbtp8OK8jHfYu0PF+LGDKyX+JuwbGcT7Rhbz55GeB2Xp+STP
NYaeBx/Q88Fgfi5Pqb0Wkv1mZFcc7SC2MwrxuJ7simZ5YjvjWravEdkVU8jO
mMf2fcn7H/7w/odjbF9rsiu6kp2xJ9tXi+yHZWRPPM52VKfnx1F0HuDP5+BK
8YbmFH+4jeNOm+INb1D8YTbHXRDFG7b9JY4/VOC4E/YtHOV9C3kcd/EUbziO
4g+1OO66ULzhfYo/XMVx9x/FFfpRnKEFx9cUiivcTHGG3zi+2D/QDMT+gkJ8
7ec9nwOl9nweJ3zEtYSXKMRdDuEjTiG8RAEn9QkfsSvhJQpxt573JCznPQlH
hf1shI94i/ASVdku0vPJwn2ib4SPuIbwEk+xvSIo3rDtOXH84UOOO0eeE74j
pY+QSHkIwygvoS/7rQvlFZRfJs4zOIL9di/vJVjHewm82G+F+d4jPN97huOx
G+EXziQ8k5zzXp53VeJ5VyWOxzl8T7+I7+lrc77TIdzHCZQHMJD9MI7yMSym
/AwunJfnUD6GTMrPEMZ5WZjzHMNzngIPrCWeASeId8BT5hvCXOUBnqv0Yb4h
PZeoxt9jJaXLNkXQBaC6BcOojoHnXL/IcV/uJfflfnL9sobqN1xO9Ry84zqu
luo0RKrbIJPrNR+q07Az1W3gz/VaHu85T5fac/6D95yLeM+5Pu+Fvsv7zN14
n3k9739W5n3msrzPXNh33Y34N2YSH5fwcFvi33iS+Dg84PMX5rIu8FyWcG4f
qa5A0SdxnQHhfP57ed4pmeedhPpCmBdqx/NCnfl7VlE9jzlU36NQJ6pQ/wLz
qJ+BEXyeUdSnwFDqW2AOn+dl6lOgEfUt8AWf53G+n64idT890veYRqA2gvo6
1WNFqX7QpeSv24vWv+89oFLsYPQBjLRs1yg+/wjPLho2ffSqhRX8fjxC6v24
TK1HwqmJb2HTUmtHN/lk2GKw9Y7T/Vo42Ph0oq6fB/S2G7tphXmK5HsC+f24
k9T78Qs6DnIGU27j2qdHt5uvi5T8nq78ftZOai/uBvocmtD/J/m8Gv17OL9J
/O+j8O8K+5OnSO1PXku/G0fRc6Dw+4fT8+MFOg/J9yzh98iX+D2y8PuV6Bwx
gc4Vhd9zeM+6sV0uBeMh+q9kL/Rj7o/tkeqPBfL7Yl2pPbSGVCfAEqobJPXp
QapXcSDVr5K/X+T79eZ8v174nf8PLGuqGg==
    "],
   VertexTextureCoordinates->CompressedData["
1:eJydnN2PJcdZxsc4MfkrEMje+ENwxS2oL0CgtdkQhT8ACQmQiL+DUO6QcsFd
ULKOnQhfsRcgZYUyjGC96w/lOInDSeIk4+Pj8fGe3nVv70zvmXN6e0dRhIQQ
BO3pet7y8+tpb8RebOuZ6lP9vFVvVb/11lP9G3/2zOf+/Fd2dnb+9lM7O3ev
/Pe1h86ef+jsXiH8whZ/J/D1S08tLz31o8LvnwW+crd4eYD7l4Hv2/5f4fd1
4E/fhecPUV8T+I/uFj90jPo3gZ+9e/ul24H7fyfA2U5eZa+w7PX7ZoFlr9+/
DCx7/fd1YNnr9TWBZa/Xvwkse73fToqxfqSdvMpev38WWPb6/cvAstd/XweW
vV5fE1j2ev2bwLLX/fKkGPNT9iPt5FX2Cstev28ZWPb67+vAstfrawLLXq9/
E1j2+rg7KcbGIf2U/Ug7eXV/nsGfZ/DnGfx5Bn+ewZ9n8OcZ/HkGf57Bn4fz
DMch/ZT9SDt5lb3Cstd/XweWvV5PE1j2ev2bwLLX582TYmwe5TzDcUg/ZT/S
Tl7dn5fw5yX8eQl/XsKfl/DnJfx5CX8evic4j3Ke4Tikn7IfaSevsldY9np9
TWDZ6/VvAstef++dFGPvQb4nOI9ynuE4pJ+yH2knrz5+a4zfGuO3xvitMX5r
jN/he57vQb4nOI9ynuE4pJ+yH2knr7JXWPZ6/ZvAstfjlpNiLI7he57vQb4n
OI9ynuE4pJ+yH2knrz5fNZivGsxXDearYZzGOIbveb4H+Z7gPMp5huOQfsp+
pJ28yl5h2etx50kxFocyTmMcw/c834N8T3Ae5TzDcUg/ZT/STl59ft5gfh7G
2YxDGacxjuF7nu9Bvic4j3Ke4Tikn7IfaSevsndsHcE4m3Eo4zTGMXzP8z3I
9wTnUc4zHIf0U/Yj7eS1f96FuMpy4b7+Dwricvuc14pntvVfi3JhlT+xvf9G
lAur/Nr2ejPKhVXe8z+KcmGV92vaVZQLq/yl7d/XUS6s8oe37dtGubDK+/bu
0D7DdtP9ap/L2999P9pDWPYLy15h2Scse4TFX1h8hcVXfMRP5eLX17sf/ITF
T1j8hMVPWPyExU9Y/ITFT3y83/aDX/+7efATFj9h8RMWP2HxExY/YfETFj/x
cb+YBz9dxU9Y/ITFT1j8vB9WgcXP26ENLH7iw3FJXryKn7D4CYuf+8UqsPh5
v7SBxY/zxlg7kRev4icsfu6nq8Di537SBhY/zltj/cZ2Ii9exc/HzSqw+Lnf
toHFj/PmmB+x39hO5MWr+AmLn4+jNrD4cd4e82v6EfuN7URevPr8ssL8sgp+
fG+MjTP6Nf2I/cZ2Ii9exU/Y55fV4L3Ecc9xRr+mH7Hf2E7kxav48b05Ng9x
3HOc0a/pR+w3thN58e/ip78rfuH9vPI9rt/5vLWHeWIP43IP42APfreHft5D
u+7Bjr2BHfrH+EJxqPgJi5+w+HmcfhRY/ITFT1j8GPeKj/gxvlBcLH7C4ics
fr5uOAosfsLiJyx+jMPFR/wYXyhO9/6doX9n6N8Z+neG/p2hf2fo37wuEB/x
Y3yhdYOPrwOMrwOMrwOMrwOMrwOMrwOMr7xOER+OC+/fJfp3if5don+X6N8l
+neJ/l2if5dY93wQ/BhfaF2lvwuLn7D4+brzKLD4CYufsPhxHafnih/jC63z
3P9q+F8N/6vhfzX8r4b/1fC/vK7Uc8SP8YXWneInrN8J63e+Lj8KLH7C4ics
flznql7xY3yhdbCPjwbjo8H4aDA+GoyPBuOjwfhosK4+wvyyQhx+jLj3GHHm
MeK6Y8RRx4hbjhEnHOO9fIz5ZRX8GF8oT+Djd4Pxu8H43WD8bjB+Nxi/G4zf
nJfQfeLH+EJ5C49vbyO+vY349jbi29uIK28jjruNuOk25r8W8UHOmzAv4Hn8
C8jjX0Ae/0K8Dzx+OcD9y8Cex78Q41nY890Xwl99fXiM+jeBPd92Pq59+94Z
/Tuv6k/ex7+zPfmcHft3Mvj76c89GeQ92C/9/Rfjqvv9d3vIT11M7T+Jv3v+
Yg/5nIvJT3+APNV+3O/5Fd3/DvJS87jf8x0X07h4b5B38vz7B3H/i9u/Xx3J
2+1hnXsx2XN9JI+3h3Ww+Izl9XKc7O15OJLny3G07u//3ozk/fawnryY2mss
D7iH9d3F4tWtvWN5wT2sty6m9r0d+JXt7y8FPrO9/3uBn9sW/zhwP/7eDfyJ
Lf8F+JfAFfqnhv8cwb9v4fnHge/fPm8sz7mH9Zvan/j8YB2gdmC56lW5rirX
fKm/q/1UrvlT5WpPr38W5Wpft+8gytXeXv8yytX+Ktf86+UVnl9HufpH5Zqf
Va7+cn4N/OgWxvcx7D8G/02Us381v3v/dMmu3egfzXM+rqaIc6aDeczLOc/N
UZ7nNfWDyntc4v4KuB5g1Xd/mldULuzlDcob8FmBzwrla5S3wN0Ae/vuQtcw
wXp8CrwPPAfOugHZ6zjvO8sexx347EJnMcF6fAq8DzwHzjoG8XOc98HFz3EH
Prsx3t1fZ4X75wzv3Vnh/jcr3H9mhfvLrHD/mBXuD7PC+3cW/FyHMsF6fAq8
DzwHzjoP8XOcdQLi57gDn92Y77x/l+jfJfp3if5don+X6N8l+neJ/l2if5fB
z3U6E6zHp8D7wHPgrIMRP8dZRyF+jjvw2Y353v2vhv/V8L8a/lfD/2r4Xw3/
q+F/NfyvDn6uh5lgPT4F3geeA2f9jPg5zjoT8XPcgc9uvO98fDQYHw3GR4Px
0WB8NBgfDcZHg/HRYHw0wc/1JhOsx6fA+8Bz4KxPET/HWZ8ifo478NmN972P
3w3G7wbjd4Pxu8H43WD8bjB+Nxi/G4zfTfBzPccE6/Ep8D7wHDjrP8TPcdZ/
iJ/jDnx2ob+YIG8yBd4Hngf2+EW4xP0VcM7DebxygvjkBPHICeIP4Rb27OI6
KW6kuN3H1z8N9rllX3//y8H3U6k+8f2ZrSOa4vupPvH9VqpPPB7f+u+bmM8n
8Ic3go+v8+bFue3vrwSfz6T6xOeBVJ/4/E2qT3zWFsfvpvXwDzG+fxB8/LoP
PYZ0CW8Fn2+k+sTns6k+8Xkg1Sc+3071iU9f3zvBR/kAn6/3g49f52n9+pPg
81yqT3w+k+oTn0dSfeLzyVSfv98OMH7fCz49v/eCh+steFVeOscvX0j1ic+5
VJ/4PJbqE5/evqvBR/kM8entzboW34eeJ3sXwee1VJ/4fCPVJz7Pp/rE57Op
PvHp12cfBp+e3/Xg09t7Pfj4Prh0LNeCT5XqE5/XU33io/rE5wupPvHxOGcS
+Rjx6flmXY/vw+t9muMlXcXnuVSfvw9uBJ9zqT5f3xxinOf4o/enrCtyHcA8
zRc3g8eLqT7x8WsT9fn76SbioRxvKJ/k4zzHG65D0PvyKPg8nOoTj5dSfeKj
q/g8n+rz+GcVfB5J+Srx6e3Nuirlt3z+uQV/XgUf1Sceqk98PM5VvLOBP6+D
T19f1nW5/mGenrMOPudSfe7P6+DzaKpPPL6e6vP45jbm5xw/9O2XdWWud5gn
e9vg82GqT3zOpfrE57VUn/g8murz+flO8FHe2efDO8HH9Q3SmXXB57lUn/h8
mOrz+fBO8Hk11ad44+WUXxO+mt7HwldSnsfjk0nEJz/c/v5LgX/+i7v/vhX4
t7bV/1vgP0jvW8Uzd68vPfry78ieP031qfzLlv+pin8wXBe/lupX+VeQv/h8
sk/4Xyyv1RTfSfGJ8O+l+EDt9cUUfwj/NL3/I356pf+98D9b/LIu/sTqWxd/
afFEW/zI2r9NfC4Gfsvav03t++2IR3fOfLT9u2Jl7b9I89X3Aj+e4gn1R/++
+G7gr6b4Q+35EvJDi3S/yq9e8nzMr6fnqT0/n+Ibtd+/pnhF7fG8la+L/9ny
/4+w9zeNf1v8vvHvit82/+pS/70Z9iq/K6x4SPb28cHbgZ9O8Y7su5Hsk/0P
pvtVfh75nr9Kz5P9l1I8Jfv/e2vfT8PeN6x8XTxk8VRbfNH4t8UfGv+uuGn9
1xV/n/pP9ip/Laz9HtnbzwezwC+k+Mr7P+e3Xkn3q/yVpzyfdDU9z9cf87D/
wRSPyd5PWPm6OGvxW5va/93ATxr/Ls0vbwd+MvWf7OVV8Z7s7efL9wNfTvGc
7Hst2Sf7y3S/ystLH81PHRbb7v3F+8hnLML+syn+k72PWbl0hB+Evb9q/Nvk
b1fD3tet/7o0fg/CXu0/CGs/TvbyqnhU9lXJPo8LyyhnPuzB9DzZfzbFp7L/
yRRvyt5zVr5O9l0Pex8z/m3x78a/S/7xfuBLqf/c/iqw4lnZ28dvVeD7kp0f
fT99NP/3Qrpff+9xjm/PpOfJ/sspHvb+vxH2vmrl2je8EfY+YvzbND/dCHsf
sP7rimXqP+/vOrD2S2Vv3z51YMXbsu/FZJ/sP5PuV/mZlI+T/ZfS82S/4m/Z
v0zxtOx9wsrXyb6bYe+rxr9N4+tm2Pui9Z/2S7K92h8TVrwue/v4JreH4nvZ
93CyT/ZfTvervMc5fn88PU/2X0vxvux/OsXvsve6lStubcLec8Zf+smcb3zE
+q9L4+cw7NX+n4+HVdjbx8O30B6rsI/50cfT/Srv2zfnI5fpebL/6bS+kP07
6Sp7n7Vy7auvwt4PjX+b/G0V9r5q/del8ibs1f6msNYjPv8fB34irTdk37lk
n+y/lu5XOfOdz6bn+fotr0++ltYn/v7L14dtPdOm9flx4MvGv0P/6TzMKuzV
/q2w1j+yt4+/NoHLtL6hfbL/mXS/yplPvS89z/cL83roTFoPyd6vW7nOI7Vh
L6+PG/8uvZ9yflv95+M9r3e03vL3Xhf46bSeon2eb+2ivMc5//pCep7sP5PW
a7L/FVt/rdP4zfisrdeks+8CL41/h/7rov/crnyVfT5f5nzvTvrn7bcX7eP7
8dVgP9txC7zAfnGJ/ecK5WvgFniB/d0S+8UVytfALfAC+7El9ncrlK+BW+AF
9k9L7MdWKF8Dt8AL7HeW2D+tUL4GboEXEb95/FMN4jt/P+V4xPEC+4kl9icr
lK+BW+AF9v9K7CdWKF8Dt8AL7NeVeL9VKF8Dt8AL7K+V2K+rUL4GboEX2A8r
Mf9WKF8Dt8AL7F+VmM8qlK+B28H+25dTvsLz+3l/5nLKf+j+Syl/oXLXQe2m
+eiNuF96La8v728oT+b56R+jPO8/aL/D823vRrn2G4S1H6H770/t6PnNnL/X
foHu13rL833X0F7XsZ9e4fk5/618u+5XPO/lN/G8m3G/4l/fTz1CezVon1so
z/ld5X99PyfvJ/u5ht3I93p7tmj/jJWPFT6T8jvePlfgT9+F/W/h+W9j/+cn
eN4M9mZ/uJ7Wl17fAveX4Mf+rvC8jD+d4nff37yJ+w/B5wjPuwX7M1Z8K6x4
1P13g/5to7+o71M+2u3v0J/UA34J/F/Gfnn+5/s+Yzoy6raok6IuiTog6m6o
c6GuhDoO6iaoU8hxlOykTo+6OOrQqPuizsrtmcCeyUC3Q50MdSnUgXDelz2a
f6kzpK6POjrq1qgT87iDuifqjKjroY6GuhXqRIa6SOoQqfujzo66NudPnRZ1
UdQhUfdDnQ11LUNdLHWd1FFSt0idIHV5bg91ZtR1UUdF3RJ1QtTlzAe6mI9f
NzDuZ9zOuJtxM+Nexq2MOxk3Mu5j3Ma4i7qe4bqK6yKua7gu4bqC6wLG9YzL
GVczLmZcy7iUcaXbN1wn7qR/nkcdrvtUPraOU/nYukzlY+ssr3+4bvI893Ad
5M8frmtUPrZOcX7DdYfKx9YRzn+4LlD5WJzveQzqyrLOnTpw6q6pc6aumDpe
7hNQp0pdKHWY1D2ennfLeSi3pxno2Kkbp06bumjqkN2eBvY0A10rdaTUbVIn
SV2i7FEeiTp86t6pM6eumzpqny+oC6YOl7pX6kyp66SOcngOgnkf5m2Yd2He
hHkP5i2Yd2DegOt+rtu57ua6ue+dEzwv58GYx2Ieinkk5oGYx2EehnkU5kGY
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

    "]],
  AutomaticImageSize->True,
  Axes->True,
  DisplayFunction:>Identity,
  ImageSize->{351.1769853199874, 355.9244379789688},
  Method->{},
  PlotRange->{{-0.9980340686712528, 0.9984268123215777}, {-0.9984268123215777,
    0.9980340686712529}, {-0.7071066621807446, 0.9999999999999858}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{0.45268634896454435`, -3.3523050222613833`, 0.08441627320756043},
  ViewVertical->{0.0850739596677502, -0.7150636524785484, 
   0.6970583635833357}]], "Output",
 CellChangeTimes->{
  3.6728487868271933`*^9, {3.672849195289559*^9, 3.672849209682598*^9}, {
   3.6728493792645693`*^9, 3.672849393819412*^9}, 3.6728494435514393`*^9, 
   3.672850404747622*^9}]
}, Open  ]]
},
WindowSize->{1125, 896},
WindowMargins->{{38, Automatic}, {Automatic, 53}},
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, \
2010)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 496, 13, 27, "Input"],
Cell[1056, 35, 3961, 105, 178, "Input"],
Cell[5020, 142, 92, 1, 27, InheritFromParent],
Cell[5115, 145, 21893, 376, 272, "Input"],
Cell[CellGroupData[{
Cell[27033, 525, 7606, 173, 433, "Input"],
Cell[34642, 700, 5489, 106, 390, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40168, 811, 9454, 227, 493, "Input"],
Cell[49625, 1040, 6513, 146, 433, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56175, 1191, 13248, 307, 613, "Input"],
Cell[69426, 1500, 7822, 190, 361, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77285, 1695, 297, 5, 43, "Input"],
Cell[77585, 1702, 7443, 260, 299, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85065, 1967, 1822, 44, 223, "Input"],
Cell[86890, 2013, 4349, 82, 389, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91276, 2100, 201, 4, 27, "Input"],
Cell[91480, 2106, 5370, 214, 246, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96887, 2325, 573, 13, 43, "Input"],
Cell[97463, 2340, 5517, 216, 246, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103017, 2561, 948, 28, 58, "Input"],
Cell[103968, 2591, 560, 16, 77, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104565, 2612, 361, 8, 27, "Input"],
Cell[104929, 2622, 3219, 91, 178, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108185, 2718, 632, 16, 43, "Input"],
Cell[108820, 2736, 131908, 2146, 371, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
