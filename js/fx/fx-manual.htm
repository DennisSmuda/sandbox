<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- saved from url=(0034)http://fx.inetcat.com/manuals.php# -->
<HTML xmlns="http://www.w3.org/1999/xhtml"><HEAD><META http-equiv="Content-Type" content="text/html; charset=UTF-8">
	<TITLE>$fx - JavaScript animation library</TITLE>
	
	<META name="keywords" content="javascript,animation,library">
	<META name="description" content="Library for JavaScript animation. Just 3.7Kb. Manuals with examples.">
	<LINK href="./fx_files/general.css" rel="stylesheet">
		<LINK href="./fx_files/manuals.css" rel="stylesheet">
		<LINK href="./fx_files/starfield.css" rel="stylesheet">
		
		<SCRIPT src="./fx_files/fx-m.js"></SCRIPT>
		<SCRIPT src="./fx_files/manuals.js"></SCRIPT>
		
	<STYLE>
/**
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 */
.javascript.codesample .de1, .javascript.codesample .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.javascript.codesample  {font-family:monospace;}
.javascript.codesample .imp {font-weight: bold; color: red;}
.javascript.codesample li, .javascript.codesample .li1 {font-weight: normal; vertical-align:top;}
.javascript.codesample .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.javascript.codesample .kw1 {color: #000066; font-weight: bold;}
.javascript.codesample .kw2 {color: #003366; font-weight: bold;}
.javascript.codesample .kw3 {color: #000066;}
.javascript.codesample .co1 {color: #006600; font-style: italic;}
.javascript.codesample .co2 {color: #009966; font-style: italic;}
.javascript.codesample .coMULTI {color: #006600; font-style: italic;}
.javascript.codesample .es0 {color: #000099; font-weight: bold;}
.javascript.codesample .br0 {color: #009900;}
.javascript.codesample .sy0 {color: #339933;}
.javascript.codesample .st0 {color: #3366CC;}
.javascript.codesample .nu0 {color: #CC0000;}
.javascript.codesample .me1 {color: #660066;}
.javascript.codesample span.xtra { display:block; }

</STYLE>
</HEAD><BODY onload="">	<DIV id="wrapper">
		<DIV id="logo">
			<A href="http://fx.inetcat.com/" title="Javascript animation library">$fx()</A>
			Javascript Animation Library
		</DIV>
		<DIV class="block nav">
			<DIV class="content">
				<UL>
					<LI>
						<INS>1</INS>
						<A href="http://fx.inetcat.com/manuals.php#b1">What is $fx() library?</A>
					</LI>
					<LI>
						<INS>2</INS>
						<A href="http://fx.inetcat.com/manuals.php#b2">Available methods</A>
					</LI>
					<LI>
						<UL>
							<LI>
								<INS>2.1</INS>
								<A href="http://fx.inetcat.com/manuals.php#b-fx">$fx()</A>
								<SPAN>— initialization</SPAN>
							</LI>
							<LI>
								<INS>2.2</INS>
								<A href="http://fx.inetcat.com/manuals.php#b-fxAdd">fxAdd()</A>
								<SPAN>— adds new effect</SPAN>
							</LI>
							<LI>
								<INS>2.3</INS>
								<A href="http://fx.inetcat.com/manuals.php#b-fxAddSet">fxAddSet()</A>
								<SPAN>— adds new effects set</SPAN>
							</LI>
							<LI>
								<INS>2.4</INS>
								<A href="http://fx.inetcat.com/manuals.php#b-fxHold">fxHold()</A>
								<SPAN>— adds delay before chain starts</SPAN>
							</LI>
							<LI>
								<INS>2.5</INS>
								<A href="http://fx.inetcat.com/manuals.php#b-fxPause">fxPause()</A>
								<SPAN>— pauses certain chain</SPAN>
							</LI>
							<LI>
								<INS>2.6</INS>
								<A href="http://fx.inetcat.com/manuals.php#b-fxStop">fxStop()</A>
								<SPAN>— pauses certain chain</SPAN>
							</LI>
							<LI>
								<INS>2.7</INS>
								<A href="http://fx.inetcat.com/manuals.php#b-fxReset">fxReset()</A>
								<SPAN>— delete all fx methods</SPAN>
							</LI>
							<LI>
								<INS>2.8</INS>
								<A href="http://fx.inetcat.com/manuals.php#b-fxRun">fxRun()</A>
								<SPAN>— runs effects chain</SPAN>
							</LI>
						</UL>
					</LI>
					<LI>
						<INS>3</INS>
						<A href="http://fx.inetcat.com/manuals.php#b3">Examples</A>
						<UL>
							<LI>
								<INS>3.1</INS>
								<A href="http://fx.inetcat.com/manuals.php#b3-1">How to add and run single effect</A>
							</LI>
							<LI>
								<INS>3.2</INS>
								<A href="http://fx.inetcat.com/manuals.php#b3-2">Adding set of parallel effects</A>
							</LI>
							<LI>
								<INS>3.3</INS>
								<A href="http://fx.inetcat.com/manuals.php#b3-3">Callbacks usage examples</A>
							</LI>
						</UL>
					</LI>
					<LI>
						<INS>4</INS>
						<A href="http://fx.inetcat.com/manuals.php#b4">License</A>
					</LI>
				</UL>
			</DIV>
		</DIV>
		<DIV class="block">
			<A name="b1" class="anchor groupanchor">1</A>
			<DIV class="content">
				<H2>What is $fx() library?</H2>
				$fx() is the really small and pretty flexible library to animate HTML elements. It lets you to alter any CSS property allong time line by passing just simple configuration. Morover you 
				can combine effects, group them to the chains and run parallel, also you have ability to set different callbacks what gives you even more flexibility.<BR><BR>
				First thought you probably got is "Why do I need another js animation library???", ok, reasonable guess, but let me answer. One day I was working on site which basically was just business card. 
				I needed to run some animation and found out that all js libraries doing this have
				bigger size that my entire page, so I created my own class which becaome $fx() eventually. It's not the attempt to compete with existing existing frameworks, but just the library for
				some dufferent purposes. Most of animation libraries are based on different JavaScript froameworks like jquery or prototype or have pretty big size theirself. So if you want to
				keep you scripts extremely lightweight and and do not load and run a bunch of extra JavaScript then $fx() fit the best.<BR>
				If you want to share some ideas how to make $fx() better or have any questions then <SCRIPT>document.write('<a'+' h'+''+'ref="mai'+'lto:y'+''+'a'+'vorskiy'+''+'@'+""+'inetc'+'at.c'+'om'+'?subject'+'=fx() feedback">cont'+'act me</a>');</SCRIPT><A href="mailto:yavorskiy@inetcat.com?subject=fx()%20feedback">contact me</A> and could probably get the answers.
			</DIV>
		</DIV>
		<DIV class="block">
			<A name="b2" class="anchor groupanchor">2</A>
			<DIV class="content">
				<H2>Available methods</H2>
			</DIV>
		</DIV>
		<DIV class="block">
			<A name="b-fx" class="anchor">2.1</A>
			<DIV class="content">
				<H3>$fx()</H3>
				<P>
					$fx(<DFN>element</DFN>) —	extends element with 
					<A href="http://fx.inetcat.com/manuals.php#b-fxAdd"><DFN>fxAdd()</DFN></A>,
					<A href="http://fx.inetcat.com/manuals.php#b-fxAddSet"><DFN>fxAddSet()</DFN></A>, 
					<A href="http://fx.inetcat.com/manuals.php#b-fxHold"><DFN>fxHold()</DFN></A>, 
					<A href="http://fx.inetcat.com/manuals.php#b-fxPause"><DFN>fxPause()</DFN></A>, 
					<A href="http://fx.inetcat.com/manuals.php#b-fxReset"><DFN>fxReset()</DFN></A>, 
					<A href="http://fx.inetcat.com/manuals.php#b-fxRun"><DFN>fxRun()</DFN></A>,
					<A href="http://fx.inetcat.com/manuals.php#b-fxStop"><DFN>fxStop()</DFN></A> 
					methods to describe and run effects and with internal <DFN>_fx</DFN> 
					property which incapsulates whole animation processing logic. 
				</P> 
				<P>
					<DFN>element</DFN> — could be DOM element or element id passed as "#elementId".
				</P>
				<P>
					Returns modified DOM element. All added fx* methods returns element itself.
				</P>
			</DIV>
		</DIV>
		<DIV class="block">
			<A name="b-fxAdd" class="anchor">2.2</A>
			<DIV class="content">
				<H3>fxAdd()</H3>
				<P>
					<DFN>fxAdd(params)</DFN> — adds new effect to current set. It doesn't mean effect will be run immidiately, whole set start running after <A href="http://fx.inetcat.com/manuals.php#b-fxRun"><DFN>fxRun()</DFN></A> call.
				</P>
				<P>
					<DFN>params</DFN> object defines animation parameters. Requires set of fields to be defined:<BR>
				</P>
				<OL>
					<LI>
						<DFN>type</DFN> — type of animation effect. Type property is same as CSS property name for DOM element.
						So to alter x coord of the element <DFN>type</DFN> needs to be set to 'left'. 
						Additionaly some extra properties can be used:
						<BLOCKQUOTE>
							<DFN>opacity</DFN> — crossbrowser property to adjust element opacity.<BR>
							<DFN>backgroundx</DFN> — background x position.<BR>
							<DFN>backgroundy</DFN> — background y position.
						</BLOCKQUOTE>
					</LI>
					<LI>
						<DFN>from</DFN> — initial value for property defined in <DFN>type</DFN>. This parameter is
						optional. If it hasn't been defined then property will be retrieved from <DFN>style</DFN> property (<I>style="property:value"</I>).
						If style property is not defined in HTML then effect won't be applied because of insufficient parameters. There is some specific
						in initial value retrieving for some methods. <DFN>Opacity</DFN> attempts to get value from <I>element.style.filter</I> in Internet Explorer and 
						reads <DFN>element.style.opacity</DFN> property for all other browthers. <DFN>Backgroundx</DFN> and <DFN>backgroundy</DFN> retrieves 
						values from <DFN>elemnt.style.backgroundPosition</DFN>. <DFN>Left</DFN>, <DFN>top</DFN>, <DFN>width</DFN> and <DFN>height</DFN> aren't
						retrieved from <DFN>style</DFN> properties, so it's not neccesery to define <DFN>left</DFN>, <DFN>top</DFN>, <DFN>width</DFN>, or
						<DFN>height</DFN> in the element's <DFN>style</DFN> attribute.  
					</LI>
					<LI>
						<DFN>to</DFN> — end property value, once it has been reached effect's running stops.
					</LI>
					<LI>
						<DFN>step</DFN> — positive or negative integer value to alter property per one iteration.
					</LI>
					<LI>
						<DFN>delay</DFN> — delay between iterations in miliseconds. This parameter is optional, by default it is 100.
					</LI>
					<LI>
						<DFN>unit</DFN> — optional metnot to define mesurement unit for certain property. If <DFN>unit</DFN> wasn't defined
						then it will be picked by <DFN>type</DFN> value: left, top, right, bottom, width, height, margin, padding, spacing, backgroundx, backgroundy - px;
						font - pt; no unit for all other properties.
					</LI>
					<LI>
						<DFN>onstart</DFN> — function called before effect starts. You can use <DFN>this</DFN> object inside callback which references to element. 
					</LI>
					<LI>
						<DFN>onfinish</DFN> — same callback as <DFN>onstart</DFN> but runs after affect is complete.
					</LI>
				</OL>
			</DIV>
		</DIV>
		<DIV class="block">
			<A name="b-fxAddSet" class="anchor">2.3</A>
			<DIV class="content">
				<H3>fxAddSet()</H3>
				<DFN>fxAddSet()</DFN> creates new set of effects which starts runnig parallel <A href="http://fx.inetcat.com/manuals.php#b-fxRun">fxRun()</A> called. You don't
				need to call this method initialy because <A href="http://fx.inetcat.com/b-fx">$fx()</A> calls it internally.<BR>
				So this statement<BR>
				<DFN>$fx('#someElm').fxAdd(ani1).fxRun().fxAddSet().fxAdd(ani2).fxRun();</DFN><BR>
				is absolutely identical to<BR>
				<DFN>
					$fx('#someElm').fxAdd(ani1).fxRun();<BR>
					$fx('#someElm').fxAdd(ani2).fxRun();
				</DFN>
			</DIV>
		</DIV>
		<DIV class="block">
			<A name="b-fxHold" class="anchor">2.4</A>
			<DIV class="content">
				<H3>fxHold()</H3>
				<DFN>fxHold(delay)</DFN> — sets the delay to be waiting in miliseconds before all effects in current set starts. 
			</DIV>
		</DIV>
		<DIV class="block">
			<A name="b-fxPause" class="anchor">2.5</A>
			<DIV class="content">
				<H3>fxPause()</H3>
				<DFN>fxPause(status, [setNum])</DFN> — pauses (<DFN>status</DFN>=true) or starts (<DFN>status</DFN>=false) set with index <DFN>setNum</DFN>. If <DFN>setNum</DFN> wasn't defined then
				method will be applied to the last set.
			</DIV>
		</DIV>
		<DIV class="block">
			<A name="b-fxStop" class="anchor">2.6</A>
			<DIV class="content">
				<H3>fxStop()</H3>
				<DFN>fxStop([setNum])</DFN> — stops the set with index <DFN>setNum</DFN>. If <DFN>setNum</DFN> wasn't defined then
				method will be applied to the last set.
			</DIV>
		</DIV>
		<DIV class="block">
			<A name="b-fxReset" class="anchor">2.7</A>
			<DIV class="content">
				<H3>fxReset()</H3>
				<DFN>fxReset()</DFN> — stops animation and deletes all animation handlers and methods added to the element by <A href="http://fx.inetcat.com/manuals.php#b-fx">$fx()</A>
				also all CSS properties will be set to their initial values.
			</DIV>
		</DIV>
		<DIV class="block">
			<A name="b-fxRun" class="anchor">2.7</A>
			<DIV class="content">
				<H3>fxRun()</H3>
				<DFN>fxRun(finalCallback, loops, loopCallback)</DFN> — starts effects set. All three parameters are optional. <DFN>finalCallback</DFN> is the funtion called when all loops of the current set are complete.
				<DFN>loops</DFN> sets the number of loops current set to be repeated, set <DFN>loops</DFN> to -1 to run set with infinite count of loops. By default <DFN>loops</DFN> is 1. <DFN>loopCallback</DFN> function to be ran on single loop complete. 
				Both <DFN>finalCallback</DFN> and <DFN>loopCallback</DFN> callbacks can use <DFN>this</DFN> keyword wich references to the DOM element you run effects on.<BR> 
				You can pass <DFN>null</DFN> to keep parameter undefined, for example write <DFN>element.fxRun(null, -1)</DFN> to cycle effect set without defining any callbacks.
			</DIV>
		</DIV>
		<DIV class="block">
			<A name="b3" class="anchor groupanchor">3</A>
			<DIV class="content">
				<H2>Examples</H2>
			</DIV>
		</DIV>
		<DIV class="block">
			<A name="b3-1" class="anchor">3.1</A>
			<DIV class="content">
				<H3>How to add and run single effect</H3>
				First you need to extend desired element with animation methods, so call <A href="http://fx.inetcat.com/manuals.php#b-fx">$fx()</A> and pass 
				reference to the element as <A href="http://fx.inetcat.com/manuals.php#b-fx">described</A> above. Then add effects with respective parameters by 
				calling <A href="http://fx.inetcat.com/manuals.php#b-fxAdd">$fxAdd(...)</A>. And finally start animation with <A href="http://fx.inetcat.com/manuals.php#b-fxRun">$fxRun()</A>. So
				lets make something for example, it gonna be starfield. We have two DIV's with same background image but different
				<DFN>background-position</DFN> property, we will scroll backgrounds (alter <DFN>background-position</DFN> X and Y)
				from right to left width different speeds. For background position animation we have <DFN>backgroundx</DFN>.
				
				<DIV class="javascript codesample" style="font-family:monospace;"><OL><LI class="li1"><DIV class="de1"><SPAN class="kw2">var</SPAN> moveBg0 <SPAN class="sy0">=</SPAN> <SPAN class="br0">{</SPAN>type<SPAN class="sy0">:</SPAN> <SPAN class="st0">'backgroundx'</SPAN><SPAN class="sy0">,</SPAN> to<SPAN class="sy0">:</SPAN> <SPAN class="sy0">-</SPAN><SPAN class="nu0">314</SPAN><SPAN class="sy0">,</SPAN> step<SPAN class="sy0">:</SPAN> <SPAN class="sy0">-</SPAN><SPAN class="nu0">1</SPAN><SPAN class="sy0">,</SPAN> delay<SPAN class="sy0">:</SPAN> <SPAN class="nu0">20</SPAN><SPAN class="br0">}</SPAN></DIV></LI>
<LI class="li1"><DIV class="de1"><SPAN class="kw2">var</SPAN> moveBg1 <SPAN class="sy0">=</SPAN> <SPAN class="br0">{</SPAN>type<SPAN class="sy0">:</SPAN> <SPAN class="st0">'backgroundx'</SPAN><SPAN class="sy0">,</SPAN> to<SPAN class="sy0">:</SPAN> <SPAN class="sy0">-</SPAN><SPAN class="nu0">269</SPAN><SPAN class="sy0">,</SPAN> step<SPAN class="sy0">:</SPAN> <SPAN class="sy0">-</SPAN><SPAN class="nu0">1</SPAN><SPAN class="sy0">,</SPAN> delay<SPAN class="sy0">:</SPAN> <SPAN class="nu0">50</SPAN><SPAN class="br0">}</SPAN></DIV></LI>
<LI class="li1"><DIV class="de1"><SPAN class="kw2">var</SPAN> stars <SPAN class="sy0">=</SPAN> document.<SPAN class="me1">getElementById</SPAN><SPAN class="br0">(</SPAN><SPAN class="st0">'sample1'</SPAN><SPAN class="br0">)</SPAN>.<SPAN class="me1">getElementsByTagName</SPAN><SPAN class="br0">(</SPAN><SPAN class="st0">'div'</SPAN><SPAN class="br0">)</SPAN><SPAN class="sy0">;</SPAN></DIV></LI>
<LI class="li1"><DIV class="de1">&nbsp;</DIV></LI>
<LI class="li1"><DIV class="de1">$fx<SPAN class="br0">(</SPAN>stars<SPAN class="br0">[</SPAN><SPAN class="nu0">0</SPAN><SPAN class="br0">]</SPAN><SPAN class="br0">)</SPAN>.<SPAN class="me1">fxAdd</SPAN><SPAN class="br0">(</SPAN>moveBg0<SPAN class="br0">)</SPAN>.<SPAN class="me1">fxRun</SPAN><SPAN class="br0">(</SPAN><SPAN class="kw2">null</SPAN><SPAN class="sy0">,</SPAN> <SPAN class="sy0">-</SPAN><SPAN class="nu0">1</SPAN><SPAN class="br0">)</SPAN><SPAN class="sy0">;</SPAN></DIV></LI>
<LI class="li1"><DIV class="de1">$fx<SPAN class="br0">(</SPAN>stars<SPAN class="br0">[</SPAN><SPAN class="nu0">1</SPAN><SPAN class="br0">]</SPAN><SPAN class="br0">)</SPAN>.<SPAN class="me1">fxAdd</SPAN><SPAN class="br0">(</SPAN>moveBg1<SPAN class="br0">)</SPAN>.<SPAN class="me1">fxRun</SPAN><SPAN class="br0">(</SPAN><SPAN class="kw2">null</SPAN><SPAN class="sy0">,</SPAN> <SPAN class="sy0">-</SPAN><SPAN class="nu0">1</SPAN><SPAN class="br0">)</SPAN><SPAN class="sy0">;</SPAN></DIV></LI>
</OL></DIV>
				
				To make cycled animation we run it with number of loops -1 (line 5,6), <DFN>null</DFN> means we are not defining any callbacks. 
				Here is some nuance, fist DIV's background X is 0, so we scroll it to X=-314 and then it'll back to 0, so animation will be smooth. 
				But another one has initial X 45px, so it's end X coord should be -314 + 45 = -269. $fx library doesn't take care of this it 
				just alters your settings by defined rules, so all this precalculations are always on yor own :).
				
				
<SCRIPT>
function playSample1(btn){
	btn.value = 'Reset';
	btn.onclick = function(){stopSample1(btn)};
		
	var moveBg0 = {type: 'backgroundx', to: -314, step: -1, delay: 20}
	var moveBg1 = {type: 'backgroundx', to: -269, step: -1, delay: 40}
	var stars = document.getElementById('sample1').getElementsByTagName('div');
	
	$fx(stars[0]).fxAdd(moveBg0).fxRun(null, -1);
	$fx(stars[1]).fxAdd(moveBg1).fxRun(null, -1);
}
function stopSample1(btn){
	var stars = document.getElementById('sample1').getElementsByTagName('div');
	$fx(stars[0]).fxReset();
	$fx(stars[1]).fxReset();
	
	btn.value = 'Play';
	btn.onclick = function(){playSample1(btn)};
}
</SCRIPT>

<DIV class="starfield" id="sample1">
	<DIV class="stars" style="background-position: -224px -20px; "></DIV>
	<DIV class="stars" style="background-position: -83px 0px; "></DIV>
	<DIV class="controls">
		<INPUT type="button" value="Reset" onclick="playSample1(this)">
	</DIV>
</DIV>				
				<BR>
				In this example we animate two onject and define one set with one effect per each. Onse you pressed Reset button <A href="http://fx.inetcat.com/manuals.php#b-fxReset">fxReset()</A>
				called.
				
			</DIV>
		</DIV>
		<DIV class="block">
			<A name="b3-2" class="anchor">3.2</A>
			<DIV class="content">
				<H3>Adding set of parallel effects</H3>
				Ok, next what we want to do is to add some green guy on spaceship. Don't blame me if you wanted something else, i didn't know :).
								
				<DIV class="javascript codesample" style="font-family:monospace;"><OL><LI class="li1"><DIV class="de1"><SPAN class="kw2">var</SPAN> moveBg0 <SPAN class="sy0">=</SPAN> <SPAN class="br0">{</SPAN>type<SPAN class="sy0">:</SPAN> <SPAN class="st0">'backgroundx'</SPAN><SPAN class="sy0">,</SPAN> to<SPAN class="sy0">:</SPAN> <SPAN class="sy0">-</SPAN><SPAN class="nu0">314</SPAN><SPAN class="sy0">,</SPAN> step<SPAN class="sy0">:</SPAN> <SPAN class="sy0">-</SPAN><SPAN class="nu0">1</SPAN><SPAN class="sy0">,</SPAN> delay<SPAN class="sy0">:</SPAN> <SPAN class="nu0">20</SPAN><SPAN class="br0">}</SPAN></DIV></LI>
<LI class="li1"><DIV class="de1"><SPAN class="kw2">var</SPAN> moveBg1 <SPAN class="sy0">=</SPAN> <SPAN class="br0">{</SPAN>type<SPAN class="sy0">:</SPAN> <SPAN class="st0">'backgroundx'</SPAN><SPAN class="sy0">,</SPAN> to<SPAN class="sy0">:</SPAN> <SPAN class="sy0">-</SPAN><SPAN class="nu0">269</SPAN><SPAN class="sy0">,</SPAN> step<SPAN class="sy0">:</SPAN> <SPAN class="sy0">-</SPAN><SPAN class="nu0">1</SPAN><SPAN class="sy0">,</SPAN> delay<SPAN class="sy0">:</SPAN> <SPAN class="nu0">50</SPAN><SPAN class="br0">}</SPAN></DIV></LI>
<LI class="li1"><DIV class="de1"><SPAN class="kw2">var</SPAN> stars <SPAN class="sy0">=</SPAN> document.<SPAN class="me1">getElementById</SPAN><SPAN class="br0">(</SPAN><SPAN class="st0">'sample2'</SPAN><SPAN class="br0">)</SPAN>.<SPAN class="me1">getElementsByTagName</SPAN><SPAN class="br0">(</SPAN><SPAN class="st0">'div'</SPAN><SPAN class="br0">)</SPAN><SPAN class="sy0">;</SPAN></DIV></LI>
<LI class="li1"><DIV class="de1">&nbsp;</DIV></LI>
<LI class="li1"><DIV class="de1">$fx<SPAN class="br0">(</SPAN>stars<SPAN class="br0">[</SPAN><SPAN class="nu0">0</SPAN><SPAN class="br0">]</SPAN><SPAN class="br0">)</SPAN>.<SPAN class="me1">fxAdd</SPAN><SPAN class="br0">(</SPAN>moveBg0<SPAN class="br0">)</SPAN>.<SPAN class="me1">fxRun</SPAN><SPAN class="br0">(</SPAN><SPAN class="kw2">null</SPAN><SPAN class="sy0">,</SPAN> <SPAN class="sy0">-</SPAN><SPAN class="nu0">1</SPAN><SPAN class="br0">)</SPAN><SPAN class="sy0">;</SPAN></DIV></LI>
<LI class="li1"><DIV class="de1">$fx<SPAN class="br0">(</SPAN>stars<SPAN class="br0">[</SPAN><SPAN class="nu0">1</SPAN><SPAN class="br0">]</SPAN><SPAN class="br0">)</SPAN>.<SPAN class="me1">fxAdd</SPAN><SPAN class="br0">(</SPAN>moveBg1<SPAN class="br0">)</SPAN>.<SPAN class="me1">fxRun</SPAN><SPAN class="br0">(</SPAN><SPAN class="kw2">null</SPAN><SPAN class="sy0">,</SPAN> <SPAN class="sy0">-</SPAN><SPAN class="nu0">1</SPAN><SPAN class="br0">)</SPAN><SPAN class="sy0">;</SPAN></DIV></LI>
<LI class="li1"><DIV class="de1">&nbsp;</DIV></LI>
<LI class="li1"><DIV class="de1"><SPAN class="kw2">var</SPAN> ufoRotate <SPAN class="sy0">=</SPAN> <SPAN class="br0">{</SPAN>type<SPAN class="sy0">:</SPAN> <SPAN class="st0">'backgroundx'</SPAN><SPAN class="sy0">,</SPAN> to<SPAN class="sy0">:</SPAN> <SPAN class="nu0">340</SPAN><SPAN class="sy0">,</SPAN> step<SPAN class="sy0">:</SPAN> <SPAN class="nu0">85</SPAN><SPAN class="br0">}</SPAN></DIV></LI>
<LI class="li1"><DIV class="de1"><SPAN class="kw2">var</SPAN> ufoMove <SPAN class="sy0">=</SPAN> <SPAN class="br0">{</SPAN>type<SPAN class="sy0">:</SPAN> <SPAN class="st0">'left'</SPAN><SPAN class="sy0">,</SPAN> from<SPAN class="sy0">:</SPAN><SPAN class="nu0">85</SPAN><SPAN class="sy0">,</SPAN> to<SPAN class="sy0">:</SPAN><SPAN class="nu0">490</SPAN><SPAN class="sy0">,</SPAN> step<SPAN class="sy0">:</SPAN> <SPAN class="nu0">2</SPAN><SPAN class="sy0">,</SPAN> delay<SPAN class="sy0">:</SPAN><SPAN class="nu0">30</SPAN><SPAN class="br0">}</SPAN></DIV></LI>
<LI class="li1"><DIV class="de1"><SPAN class="kw2">var</SPAN> ufoAppear <SPAN class="sy0">=</SPAN> <SPAN class="br0">{</SPAN>type<SPAN class="sy0">:</SPAN> <SPAN class="st0">'opacity'</SPAN><SPAN class="sy0">,</SPAN> from<SPAN class="sy0">:</SPAN><SPAN class="nu0">0</SPAN><SPAN class="sy0">,</SPAN> to<SPAN class="sy0">:</SPAN><SPAN class="nu0">100</SPAN><SPAN class="sy0">,</SPAN> step<SPAN class="sy0">:</SPAN> <SPAN class="nu0">1</SPAN><SPAN class="sy0">,</SPAN> delay<SPAN class="sy0">:</SPAN><SPAN class="nu0">50</SPAN><SPAN class="br0">}</SPAN></DIV></LI>
<LI class="li1"><DIV class="de1">&nbsp;</DIV></LI>
<LI class="li1"><DIV class="de1">$fx<SPAN class="br0">(</SPAN><SPAN class="st0">'#ufo2'</SPAN><SPAN class="br0">)</SPAN>.<SPAN class="me1">fxAdd</SPAN><SPAN class="br0">(</SPAN>ufoRotate<SPAN class="br0">)</SPAN>.<SPAN class="me1">fxRun</SPAN><SPAN class="br0">(</SPAN><SPAN class="kw2">null</SPAN><SPAN class="sy0">,</SPAN> <SPAN class="sy0">-</SPAN><SPAN class="nu0">1</SPAN><SPAN class="br0">)</SPAN><SPAN class="sy0">;</SPAN></DIV></LI>
<LI class="li1"><DIV class="de1">$fx<SPAN class="br0">(</SPAN><SPAN class="st0">'#ufo2'</SPAN><SPAN class="br0">)</SPAN>.<SPAN class="me1">fxAdd</SPAN><SPAN class="br0">(</SPAN>ufoAppear<SPAN class="br0">)</SPAN>.<SPAN class="me1">fxAdd</SPAN><SPAN class="br0">(</SPAN>ufoMove<SPAN class="br0">)</SPAN>.<SPAN class="me1">fxRun</SPAN><SPAN class="br0">(</SPAN><SPAN class="br0">)</SPAN><SPAN class="sy0">;</SPAN></DIV></LI>
</OL></DIV>
				
				Lines 1-6 are axactly same as in <A href="http://fx.inetcat.com/manuals.php#b3-1">previous example</A>, so stars animation is taken care of. Then we got several new
				effects for spaceship. <DFN>ufoRotate</DFN> scrolls background image (<A href="http://fx.inetcat.com/images/manuals/sprite_ufo.png">sprite</A> with four sections)
				<DFN>ufoMove</DFN> moves spaceship from left to right and <DFN>ufoAppear</DFN> makes it to appear. Once you called <A href="http://fx.inetcat.com/manuals.php#b-xfRun">fxRun()</A>
				current effects set gets closed and all following <A href="http://fx.inetcat.com/manuals.php#b-xfAdd">fxAdd()</A> calls will add effcts to the nex set wich needs another 
				<A href="http://fx.inetcat.com/manuals.php#b-xfRun">fxRun()</A> to start. You can see this in lines 9, 10. Also you notised thet we call <A href="http://fx.inetcat.com/manuals.php#b-xfAdd">fxAdd()</A> twice
				in line 10, that means that those two effects will be running parallel. So our spaceship appears and keep moving at the same time.
				
				
<SCRIPT>
function playSample2(btn){
	btn.value = 'Reset';
	btn.onclick = function(){stopSample2(btn)};

	var moveBg0 = {type: 'backgroundx', to: -314, step: -1, delay: 20}
	var moveBg1 = {type: 'backgroundx', to: -269, step: -1, delay: 40}
	var stars = document.getElementById('sample2').getElementsByTagName('div');
	
	$fx(stars[0]).fxAdd(moveBg0).fxRun(null, -1);
	$fx(stars[1]).fxAdd(moveBg1).fxRun(null, -1);
	
	var ufoRotate = {type: 'backgroundx', to: 340, step: 85}
	var ufoMove = {type: 'left', from:85, to:490, step: 2, delay:30}
	var ufoAppear = {type: 'opacity', from:0, to:100, step: 1, delay:50}

	$fx('#ufo2').fxAdd(ufoRotate).fxRun(null, -1);
	$fx('#ufo2').fxAdd(ufoAppear).fxAdd(ufoMove).fxRun();
}

function stopSample2(btn){
	var stars = document.getElementById('sample2').getElementsByTagName('div');
	$fx(stars[0]).fxReset();
	$fx(stars[1]).fxReset();
	$fx('#ufo2').fxReset();
	
	btn.value = 'Play';
	btn.onclick = function(){playSample2(btn)};
}
</SCRIPT>

<DIV class="starfield" id="sample2">
	<DIV class="stars" style="background-position: -198px -20px; "></DIV>
	<DIV class="stars" style="background-position: 10px 0px; "></DIV>
	<SPAN class="path">
		<IMG src="./fx_files/arrow.gif">
		<INS class="pointA">A</INS>
		<INS class="pointB">B</INS>
	</SPAN>
	<SPAN class="ufo" id="ufo2" style="opacity: 1; left: 490px; background-position: 340px 0px; "></SPAN>
	<DIV class="controls">
		<INPUT type="button" value="Reset" onclick="playSample2(this)">
	</DIV>
</DIV>				 
			</DIV>
		</DIV>
		<DIV class="block">
			<A name="b3-3" class="anchor">3.3</A>
			<DIV class="content">
				<H3>Callbacks usage examples</H3>
				All callbacks is applied to the element you apply animation to, so it lets to use <DFN>this</DFN> keyword. Take a look at the lines 12-24.
				At the line 12 we just get references to message bubbles. <DFN>Onloop</DFN> and <DFN>onfinish</DFN> are handlers we gonna use as a callbacks.  
				
				<DIV class="javascript codesample" style="font-family:monospace;"><OL><LI class="li1"><DIV class="de1"><SPAN class="kw2">var</SPAN> moveBg0 <SPAN class="sy0">=</SPAN> <SPAN class="br0">{</SPAN>type<SPAN class="sy0">:</SPAN> <SPAN class="st0">'backgroundx'</SPAN><SPAN class="sy0">,</SPAN> to<SPAN class="sy0">:</SPAN> <SPAN class="sy0">-</SPAN><SPAN class="nu0">314</SPAN><SPAN class="sy0">,</SPAN> step<SPAN class="sy0">:</SPAN> <SPAN class="sy0">-</SPAN><SPAN class="nu0">1</SPAN><SPAN class="sy0">,</SPAN> delay<SPAN class="sy0">:</SPAN> <SPAN class="nu0">20</SPAN><SPAN class="br0">}</SPAN></DIV></LI>
<LI class="li1"><DIV class="de1"><SPAN class="kw2">var</SPAN> moveBg1 <SPAN class="sy0">=</SPAN> <SPAN class="br0">{</SPAN>type<SPAN class="sy0">:</SPAN> <SPAN class="st0">'backgroundx'</SPAN><SPAN class="sy0">,</SPAN> to<SPAN class="sy0">:</SPAN> <SPAN class="sy0">-</SPAN><SPAN class="nu0">269</SPAN><SPAN class="sy0">,</SPAN> step<SPAN class="sy0">:</SPAN> <SPAN class="sy0">-</SPAN><SPAN class="nu0">1</SPAN><SPAN class="sy0">,</SPAN> delay<SPAN class="sy0">:</SPAN> <SPAN class="nu0">40</SPAN><SPAN class="br0">}</SPAN></DIV></LI>
<LI class="li1"><DIV class="de1"><SPAN class="kw2">var</SPAN> stars <SPAN class="sy0">=</SPAN> document.<SPAN class="me1">getElementById</SPAN><SPAN class="br0">(</SPAN><SPAN class="st0">'sample3'</SPAN><SPAN class="br0">)</SPAN>.<SPAN class="me1">getElementsByTagName</SPAN><SPAN class="br0">(</SPAN><SPAN class="st0">'div'</SPAN><SPAN class="br0">)</SPAN><SPAN class="sy0">;</SPAN></DIV></LI>
<LI class="li1"><DIV class="de1">&nbsp;</DIV></LI>
<LI class="li1"><DIV class="de1">$fx<SPAN class="br0">(</SPAN>stars<SPAN class="br0">[</SPAN><SPAN class="nu0">0</SPAN><SPAN class="br0">]</SPAN><SPAN class="br0">)</SPAN>.<SPAN class="me1">fxAdd</SPAN><SPAN class="br0">(</SPAN>moveBg0<SPAN class="br0">)</SPAN>.<SPAN class="me1">fxRun</SPAN><SPAN class="br0">(</SPAN><SPAN class="kw2">null</SPAN><SPAN class="sy0">,</SPAN> <SPAN class="sy0">-</SPAN><SPAN class="nu0">1</SPAN><SPAN class="br0">)</SPAN><SPAN class="sy0">;</SPAN></DIV></LI>
<LI class="li1"><DIV class="de1">$fx<SPAN class="br0">(</SPAN>stars<SPAN class="br0">[</SPAN><SPAN class="nu0">1</SPAN><SPAN class="br0">]</SPAN><SPAN class="br0">)</SPAN>.<SPAN class="me1">fxAdd</SPAN><SPAN class="br0">(</SPAN>moveBg1<SPAN class="br0">)</SPAN>.<SPAN class="me1">fxRun</SPAN><SPAN class="br0">(</SPAN><SPAN class="kw2">null</SPAN><SPAN class="sy0">,</SPAN> <SPAN class="sy0">-</SPAN><SPAN class="nu0">1</SPAN><SPAN class="br0">)</SPAN><SPAN class="sy0">;</SPAN></DIV></LI>
<LI class="li1"><DIV class="de1">&nbsp;</DIV></LI>
<LI class="li1"><DIV class="de1"><SPAN class="kw2">var</SPAN> ufoRotate <SPAN class="sy0">=</SPAN> <SPAN class="br0">{</SPAN>type<SPAN class="sy0">:</SPAN> <SPAN class="st0">'backgroundx'</SPAN><SPAN class="sy0">,</SPAN> to<SPAN class="sy0">:</SPAN> <SPAN class="nu0">340</SPAN><SPAN class="sy0">,</SPAN> step<SPAN class="sy0">:</SPAN> <SPAN class="nu0">85</SPAN><SPAN class="br0">}</SPAN></DIV></LI>
<LI class="li1"><DIV class="de1"><SPAN class="kw2">var</SPAN> ufoMove <SPAN class="sy0">=</SPAN> <SPAN class="br0">{</SPAN>type<SPAN class="sy0">:</SPAN> <SPAN class="st0">'left'</SPAN><SPAN class="sy0">,</SPAN> from<SPAN class="sy0">:</SPAN><SPAN class="nu0">85</SPAN><SPAN class="sy0">,</SPAN> to<SPAN class="sy0">:</SPAN><SPAN class="nu0">490</SPAN><SPAN class="sy0">,</SPAN> step<SPAN class="sy0">:</SPAN> <SPAN class="nu0">2</SPAN><SPAN class="sy0">,</SPAN> delay<SPAN class="sy0">:</SPAN><SPAN class="nu0">30</SPAN><SPAN class="br0">}</SPAN></DIV></LI>
<LI class="li1"><DIV class="de1"><SPAN class="kw2">var</SPAN> ufoAppear <SPAN class="sy0">=</SPAN> <SPAN class="br0">{</SPAN>type<SPAN class="sy0">:</SPAN> <SPAN class="st0">'opacity'</SPAN><SPAN class="sy0">,</SPAN> from<SPAN class="sy0">:</SPAN><SPAN class="nu0">0</SPAN><SPAN class="sy0">,</SPAN> to<SPAN class="sy0">:</SPAN><SPAN class="nu0">100</SPAN><SPAN class="sy0">,</SPAN> step<SPAN class="sy0">:</SPAN> <SPAN class="nu0">1</SPAN><SPAN class="sy0">,</SPAN> delay<SPAN class="sy0">:</SPAN><SPAN class="nu0">50</SPAN><SPAN class="br0">}</SPAN></DIV></LI>
<LI class="li1"><DIV class="de1">&nbsp;</DIV></LI>
<LI class="li1"><DIV class="de1"><SPAN class="kw2">var</SPAN> info <SPAN class="sy0">=</SPAN> document.<SPAN class="me1">getElementById</SPAN><SPAN class="br0">(</SPAN><SPAN class="st0">'ufoInfo3'</SPAN><SPAN class="br0">)</SPAN><SPAN class="sy0">;</SPAN></DIV></LI>
<LI class="li1"><DIV class="de1">&nbsp;</DIV></LI>
<LI class="li1"><DIV class="de1"><SPAN class="kw2">var</SPAN> onloop <SPAN class="sy0">=</SPAN> <SPAN class="kw2">function</SPAN><SPAN class="br0">(</SPAN>loopsDone<SPAN class="br0">)</SPAN><SPAN class="br0">{</SPAN></DIV></LI>
<LI class="li1"><DIV class="de1">&nbsp; &nbsp; &nbsp; &nbsp; info.<SPAN class="me1">innerHTML</SPAN> <SPAN class="sy0">=</SPAN> <SPAN class="st0">'Loop #'</SPAN><SPAN class="sy0">+</SPAN>loopsDone<SPAN class="sy0">;</SPAN></DIV></LI>
<LI class="li1"><DIV class="de1"><SPAN class="br0">}</SPAN></DIV></LI>
<LI class="li1"><DIV class="de1">&nbsp;</DIV></LI>
<LI class="li1"><DIV class="de1"><SPAN class="kw2">var</SPAN> onfinish <SPAN class="sy0">=</SPAN> <SPAN class="kw2">function</SPAN><SPAN class="br0">(</SPAN><SPAN class="br0">)</SPAN><SPAN class="br0">{</SPAN></DIV></LI>
<LI class="li1"><DIV class="de1">&nbsp; &nbsp; &nbsp; &nbsp; info.<SPAN class="me1">innerHTML</SPAN> <SPAN class="sy0">=</SPAN> <SPAN class="st0">'Done'</SPAN><SPAN class="sy0">;</SPAN></DIV></LI>
<LI class="li1"><DIV class="de1">&nbsp; &nbsp; &nbsp; &nbsp; <SPAN class="kw1">this</SPAN>.<SPAN class="me1">fxPause</SPAN><SPAN class="br0">(</SPAN><SPAN class="kw2">true</SPAN><SPAN class="sy0">,</SPAN> <SPAN class="nu0">0</SPAN><SPAN class="br0">)</SPAN><SPAN class="sy0">;</SPAN> <SPAN class="co1">//stop roataion - set #0</SPAN></DIV></LI>
<LI class="li1"><DIV class="de1"><SPAN class="br0">}</SPAN></DIV></LI>
<LI class="li1"><DIV class="de1">&nbsp;</DIV></LI>
<LI class="li1"><DIV class="de1">info.<SPAN class="me1">style</SPAN>.<SPAN class="me1">display</SPAN> <SPAN class="sy0">=</SPAN> <SPAN class="st0">'block'</SPAN><SPAN class="sy0">;</SPAN></DIV></LI>
<LI class="li1"><DIV class="de1">$fx<SPAN class="br0">(</SPAN><SPAN class="st0">'#ufo3'</SPAN><SPAN class="br0">)</SPAN>.<SPAN class="me1">fxAdd</SPAN><SPAN class="br0">(</SPAN>ufoRotate<SPAN class="br0">)</SPAN>.<SPAN class="me1">fxRun</SPAN><SPAN class="br0">(</SPAN><SPAN class="kw2">null</SPAN><SPAN class="sy0">,</SPAN> <SPAN class="sy0">-</SPAN><SPAN class="nu0">1</SPAN><SPAN class="sy0">,</SPAN> onloop<SPAN class="br0">)</SPAN><SPAN class="sy0">;</SPAN></DIV></LI>
<LI class="li1"><DIV class="de1">$fx<SPAN class="br0">(</SPAN><SPAN class="st0">'#ufo3'</SPAN><SPAN class="br0">)</SPAN>.<SPAN class="me1">fxAdd</SPAN><SPAN class="br0">(</SPAN>ufoAppear<SPAN class="br0">)</SPAN>.<SPAN class="me1">fxAdd</SPAN><SPAN class="br0">(</SPAN>ufoMove<SPAN class="br0">)</SPAN>.<SPAN class="me1">fxRun</SPAN><SPAN class="br0">(</SPAN>onfinish<SPAN class="br0">)</SPAN><SPAN class="sy0">;</SPAN></DIV></LI>
</OL></DIV>
				
				
<SCRIPT>
function playSample3(btn){
	btn.value = 'Reset';
	btn.onclick = function(){stopSample3(btn)};
	
	var moveBg0 = {type: 'backgroundx', to: -314, step: -1, delay: 20}
	var moveBg1 = {type: 'backgroundx', to: -269, step: -1, delay: 40}
	var stars = document.getElementById('sample3').getElementsByTagName('div');
	
	$fx(stars[0]).fxAdd(moveBg0).fxRun(null, -1);
	$fx(stars[1]).fxAdd(moveBg1).fxRun(null, -1);
	
	var ufoRotate = {type: 'backgroundx', to: 340, step: 85}
	var ufoMove = {type: 'left', from:85, to:490, step: 2, delay:30}
	var ufoAppear = {type: 'opacity', from:0, to:100, step: 1, delay:50}

	var info = document.getElementById('ufoInfo3');
	
	var onloop = function(loopsDone){
		info.innerHTML = 'Loop #'+loopsDone;
	}
	
	var onfinish = function(){
		info.innerHTML = 'Done';
		this.fxPause(true, 0); //stop roataion - set #0
	}
	
	info.style.display = 'block';
	$fx('#ufo3').fxAdd(ufoRotate).fxRun(null, -1, onloop).fxAddSet().fxAdd(ufoAppear).fxAdd(ufoMove).fxRun(onfinish);
	
}

function stopSample3(btn){
	var stars = document.getElementById('sample3').getElementsByTagName('div');
	$fx(stars[0]).fxReset();
	$fx(stars[1]).fxReset();
	$fx('#ufo3').fxReset();
	
	btn.value = 'Play';
	btn.onclick = function(){playSample3(btn)};
}
</SCRIPT>

<DIV class="starfield" id="sample3">
	<DIV class="stars" style="background-position: -81px -20px; "></DIV>
	<DIV class="stars" style="background-position: -243px 0px; "></DIV>
	<SPAN class="path">
		<IMG src="./fx_files/arrow.gif">
		<INS class="pointA">A</INS>
		<INS class="pointB">B</INS>
	</SPAN>
	<SPAN class="ufo" id="ufo3" style="opacity: 1; left: 490px; background-position: 170px 0px; "></SPAN>
	<SPAN id="ufoInfo3" style="display: block; ">Done</SPAN>
	<DIV class="controls">
		<INPUT type="button" value="Reset" class="startButton" onclick="playSample3(this)">
	</DIV>
</DIV>				 
			</DIV>
		</DIV>
		<DIV class="block">
			<A name="b4" class="anchor groupanchor">4</A>
			<DIV class="content">
				<H2>License</H2>
				$fx() library is avilable under <A href="http://fx.inetcat.com/license/MIT-LICENSE.txt">MIT</A> and <A href="http://fx.inetcat.com/license/GPL-LICENSE.txt">GPL</A> license, choose 
				the one which is most appropriate for your project. According to the license rules <A href="http://fx.inetcat.com/js/fx-source.js">open source code</A> is available.
			</DIV>
		</DIV>
		
		<A href="./fx_files/fx.htm" id="gotop" style="display: none; ">Scroll to the top</A>
		
	</DIV>
	
	<DIV id="adv">
		<SCRIPT type="text/javascript"><!--
		google_ad_client = "pub-4153146694368106";
		/* 468x15, created 1/15/09 */
		google_ad_slot = "5036046762";
		google_ad_width = 468;
		google_ad_height = 15;
		//-->
		</SCRIPT>
		<SCRIPT type="text/javascript" src="./fx_files/show_ads.js">
		</SCRIPT><SCRIPT src="./fx_files/expansion_embed.js"></SCRIPT><SCRIPT src="./fx_files/test_domain.js"></SCRIPT><SCRIPT>window.google_render_ad();</SCRIPT><INS style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:468px"><INS style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:468px"><IFRAME allowtransparency="true" frameborder="0" height="15" hspace="0" id="google_ads_frame1" marginheight="0" marginwidth="0" name="google_ads_frame" scrolling="no" src="./fx_files/ads.htm" style="left:0;position:absolute;top:0" vspace="0" width="468"></IFRAME></INS></INS>
	</DIV>

</BODY></HTML>