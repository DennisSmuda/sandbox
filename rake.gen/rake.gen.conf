BUILD_MODULES = ["src", "test", "zdk"]
DEFAULT_BUILD_MODULES = ["src", "test"]

# subset of BUILD_MODULES that will be made into a lib file
LIB_MODULES = ["zdk"]

# subset of BUILD_MODULES, as test cases
TEST_MODULES = ["test"]

# ignore style checking
NO_STYLE_CHECK = ["zdk/3rdparty", "test/3rdparty"]

# display notes in those folders
SHOW_NOTES  = ["src", "zdk", "test"]

# GEN_MINGW32_MAKEFILE = true

# macfuse hack
if File.exists? "/mach_kernel"
  lfuse = "-lfuse_ino64"
else
  lfuse = "-lfuse"
end

# Build modes
# If there is a module named 'mod', then for the mode 'blah', the target will be 'mod-blah'.
# If the mode name is '' (empty), the target will be 'mod'.
BUILD_MODES = {
  "release" => {
    "CC" => "gcc",
    "CXX" => "g++",
    "CFLAGS" => "-I/opt/local/include/db52 -I/opt/local/include -O3 -pthread -D_FILE_OFFSET_BITS=64 -DRELEASE",
    "CXXFLAGS" => "-I/opt/local/include/db52 -I/opt/local/include -O3 -pthread -D_FILE_OFFSET_BITS=64 -DRELEASE",
    "LDFLAGS" => "-lpthread -lm -ldl -lsqlite3 #{lfuse} -L/opt/local/lib/db52 -ldb -L/opt/local/lib -ltokyocabinet"
  },
  "debug" => {
    "CC" => "gcc",
    "CXX" => "g++",
    "CFLAGS" => "-I/opt/local/include/db52 -I/opt/local/include -ggdb -Wall -pthread -D_FILE_OFFSET_BITS=64 -DDEBUG",
    "CXXFLAGS" => "-I/opt/local/include/db52 -I/opt/local/include -ggdb -Wall -pthread -D_FILE_OFFSET_BITS=64 -DDEBUG",
    "LDFLAGS" => "-lpthread -lm -ldl -lsqlite3 #{lfuse} -L/opt/local/lib/db52 -ldb -L/opt/local/lib -ltokyocabinet"
  },
  "prof" => {
    "CC" => "gcc",
    "CXX" => "g++",
    "CFLAGS" => "-I/opt/local/include/db52 -I/opt/local/include -pg -ggdb -Wall -pthread -D_FILE_OFFSET_BITS=64 -DDEBUG -DZMEM_DEBUG",
    "CXXFLAGS" => "-I/opt/local/include/db52 -I/opt/local/include -ggdb -Wall -pthread -D_FILE_OFFSET_BITS=64 -DDEBUG -DZMEM_DEBUG",
    "LDFLAGS" => "-lpthread -lm -ldl -lsqlite3 #{lfuse} -L/opt/local/lib/db52 -ldb -L/opt/local/lib -ltokyocabinet"
  },
}

DEFAULT_BUILD_MODE = "release"

# ignore part of the files in tar package
IGNORE_IN_TAR = ["Doxyfile", "Makefile", "rake.gen.conf", "Rakefile", "TODO", ".gitignore", "src/.gitignore"]

# the following settings are for configure script, and advanced options like make install
GEN_CONFIGURE_SCRIPT = true
CONFIGURE_BINARIES = ["gcc", "g++"]
CONFIGURE_H = "src/config.h"
CONFIGURE_HEADERS = [
  "sys/time.h",
  "sys/stat.h",
  "sys/select.h",
  "sys/msg.h",
  "sys/types.h",
  "sys/ipc.h",
  "dirent.h",
  "unistd.h",
  "errno.h"
]
CONFIGURE_LIBS = {
  # lib => error message when lib not found
  "libfuse" => "Fuse not found, please install libfuse-dev",
  "libdl" => "Cannot find libdl",
  "libm" => "Cannot find libm",
  "libsqlite3" => "Cannot file libsqlite3!"
}
CONFIGURE_DEFINES = {
# item => value
  "LIQUID_VER_STR" => "0.1-nightly",
  "LIQUID_VER" => 0x0001
}
CONFIGURE_OPTIONS = {
# item-name => default-value (set to nil if no default value)
  "prefix" => "/usr/local"
}
# the enable-xxx/disable-xxx switches, corresponds to macros in config.h, muse be set to true/false
CONFIGURE_SWITCHES = {
#  "sendfile" => "false",
}
# the dependency of make install
INSTALL_DEPENDS = ["release"]
# the actions of make install
INSTALL_ACTIONS = [
  "mkdir -p ${prefix}/bin",
  "mkdir -p ${prefix}/sbin",
  "mkdir -p /var/lib/liquid",
  "mkdir -p /var/run/liquid",
  "mkdir -p /var/log/liquid",
  "cp bin-release/lqcopy ${prefix}/bin/",
  "cp bin-release/lqdata ${prefix}/sbin/",
  "cp bin-release/lqftpd ${prefix}/sbin/",
  "cp bin-release/lqimport ${prefix}/bin/",
  "cp bin-release/lqmeta ${prefix}/sbin/",
  "cp bin-release/lqmount ${prefix}/bin/",
  "cp bin-release/lqsync ${prefix}/bin/",
  "cp etc/liquid.conf /etc/liquid.conf"
]
# the actions of make uninstall
UNINSTALL_ACTIONS = [
  "rm -f ${prefix}/bin/lqcopy",
  "rm -f ${prefix}/sbin/lqdata",
  "rm -f ${prefix}/sbin/lqftpd",
  "rm -f ${prefix}/bin/lqimport",
  "rm -f ${prefix}/sbin/lqmeta",
  "rm -f ${prefix}/bin/lqmount",
  "rm -f ${prefix}/bin/lqsync",
  "rm -f /etc/liquid.conf"
]

